{
  "v": "5.7.11",
  "ip": 0,
  "op": 126,
  "fr": 25,
  "w": 512,
  "h": 512,
  "nm": "Comp 19",
  "assets": [],
  "layers": [
    {
      "ind": 1,
      "ty": 4,
      "nm": "Layer 3",
      "sr": 1.0,
      "ks": {
        "o": { "a": 0, "k": 100.0 },
        "r": { "a": 0, "k": 0.0 },
        "p": {
          "k": [
            {
              "i": { "x": 0.667, "y": 1.0 },
              "o": { "x": 0.333, "y": 0.0 },
              "t": 0,
              "s": [145.75, 195.102, 0],
              "ti": [0, 0, 0],
              "to": [0, -1.667, 0]
            },
            {
              "i": { "x": 0.667, "y": 1.0 },
              "o": { "x": 0.333, "y": 0.0 },
              "t": 12,
              "s": [145.75, 185.102, 0],
              "ti": [0, -1.667, 0],
              "to": [0, 0, 0]
            },
            { "t": 25, "s": [145.75, 195.102, 0] }
          ],
          "x": "var $bm_rt;\n$bm_rt = loopOut();",
          "a": 1,
          "l": 2
        },
        "a": { "a": 0, "k": [-110.25, -60.898, 0.0], "l": 2 },
        "s": {
          "k": [
            {
              "i": { "x": [0.667, 0.667, 0.667], "y": [1.0, 1.0, 1.0] },
              "o": { "x": [0.333, 0.333, 0.333], "y": [0.0, 0.0, 0.0] },
              "t": 0,
              "s": [0, 0, 100]
            },
            { "t": 13, "s": [100, 100, 100] }
          ],
          "x": "var $bm_rt;\nvar fx = effect('\u015dlosilo pli pura');\nvar doAnticipation = fx(1).value;\nvar doInterpolation = fx(2).value;\nvar doFollowThrough = fx(3).value;\nvar damping = $bm_div(fx(15).value, 10);\nvar elasticity = $bm_div(fx(13).value, 10);\nvar bounce = fx(17).value;\nvar anticipationDuration = fx(5).value;\nvar anticipationQuantity = $bm_div(fx(6).value, 100);\nvar slowIn = $bm_div(fx(9).value, 100);\nvar slowOut = $bm_div(fx(10).value, 100);\nvar spatialMode = fx(21).value;\nvar spatialDoInterpolation = fx(20).value;\nvar moBlurPrecision = fx(32).value;\nvar elasticityRandom = fx(14).value;\nvar dampingRandom = fx(16).value;\nvar softBody = fx(28).value;\nvar flexibility = $bm_div(fx(29).value, 100);\nvar doOverlap = fx(23).value;\nvar overlapDuration = fx(24).value;\nvar overlapRandom = fx(25).value;\nvar threshold = $bm_div($bm_div(1, moBlurPrecision), 1000);\nvar zeroValue;\nif ($bm_isInstanceOfArray(value)) {\n    if (value.length == 2)\n        zeroValue = [\n            0,\n            0\n        ];\n    else if (value.length == 3)\n        zeroValue = [\n            0,\n            0,\n            0\n        ];\n    else if (value.length == 4)\n        zeroValue = [\n            0,\n            0,\n            0,\n            0\n        ];\n} else\n    zeroValue = 0;\nvar isThisSpatial = isSpatial(thisProperty);\nvar isThisPosition = thisProperty === $bm_transform.position;\nvar simulate = false;\nif (isThisSpatial) {\n    doInterpolation = doInterpolation && spatialDoInterpolation;\n    if (isThisPosition && thisProperty.numKeys > 0) {\n        doOverlap = false;\n        simulate = false;\n    } else {\n        simulate = spatialMode == 2;\n        doOverlap = overlapDuration != 0 && doOverlap && simulate;\n    }\n} else {\n    doOverlap = false;\n}\nif (!doOverlap) {\n    overlapDuration = 0;\n}\nif (simulate && softBody && isThisSpatial && !isThisPosition && (doFollowThrough || doOverlap)) {\n    var distanceRatio = $bm_div(length(valueAtTime(0), $bm_transform.anchorPoint), $bm_div(thisLayer.width, 2));\n    distanceRatio = $bm_div($bm_sum(1, $bm_mul(distanceRatio, flexibility)), 2);\n    if (doFollowThrough) {\n        elasticity = $bm_div(elasticity, distanceRatio);\n        damping = $bm_div(damping, distanceRatio);\n    }\n    if (doOverlap) {\n        overlapDuration = $bm_mul(overlapDuration, distanceRatio);\n    }\n}\nseedRandom(0, true);\nif (doFollowThrough) {\n    if (elasticityRandom > 0)\n        elasticity = addNoise(elasticity, elasticityRandom);\n    if (dampingRandom > 0)\n        damping = addNoise(damping, dampingRandom);\n}\nif (doOverlap) {\n    if (doOverlap && overlapRandom > 0)\n        overlapDuration = addNoise(overlapDuration, overlapRandom);\n}\nvar result = value;\nfunction isSpatial(prop) {\n    if (!(prop.value instanceof Array))\n        return false;\n    if (prop.value.length != 2 && prop.value.length != 3)\n        return false;\n    try {\n        if (typeof prop.speed !== 'undefined')\n            return true;\n    } catch (e) {\n        return false;\n    }\n}\nfunction addNoise(val, quantity) {\n    var randomValue = random(0.9, 1.1);\n    var noiseValue = noise($bm_mul(valueAtTime(0), randomValue));\n    noiseValue = $bm_mul(noiseValue, $bm_div(quantity, 100));\n    return $bm_mul(val, $bm_sum(noiseValue, 1));\n}\nfunction isAfterLastKey() {\n    if (numKeys == 0)\n        return false;\n    var nKey = nearestKey(time);\n    return nKey.time <= time && nKey.index == numKeys;\n}\nfunction isStill(t, threshold) {\n    var d = $bm_sub(valueAtTime(t), valueAtTime($bm_sum(t, framesToTime(1))));\n    if ($bm_isInstanceOfArray(d)) {\n        for (var i = 0; i < d.length; i++) {\n            d[i] = Math.abs(d[i]);\n            if (d[i] >= threshold) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        d = Math.abs(d);\n        return d < threshold;\n    }\n}\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\n    if (arguments.length !== 5 && arguments.length !== 6)\n        return t;\n    var a = $bm_sub(value2, value1);\n    var b = $bm_sub(tMax, tMin);\n    if (b == 0)\n        return t;\n    var c = clamp($bm_div($bm_sub(t, tMin), b), 0, 1);\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4)\n        bezierPoints = [\n            0.33,\n            0,\n            0.66,\n            1\n        ];\n    return $bm_sum($bm_mul(a, h(c, bezierPoints)), value1);\n    function h(f, g) {\n        var x = $bm_mul(3, g[0]);\n        var j = $bm_sub($bm_mul(3, $bm_sub(g[2], g[0])), x);\n        var k = $bm_sub($bm_sub(1, x), j);\n        var l = $bm_mul(3, g[1]);\n        var m = $bm_sub($bm_mul(3, $bm_sub(g[3], g[1])), l);\n        var n = $bm_sub($bm_sub(1, l), m);\n        var d = f;\n        for (var i = 0; i < 5; i++) {\n            var z = $bm_sub($bm_mul(d, $bm_sum(x, $bm_mul(d, $bm_sum(j, $bm_mul(d, k))))), f);\n            if (Math.abs(z) < 0.001)\n                break;\n            d = $bm_sub(d, $bm_div(z, $bm_sum(x, $bm_mul(d, $bm_sum($bm_mul(2, j), $bm_mul($bm_mul(3, k), d))))));\n        }\n        return $bm_mul(d, $bm_sum(l, $bm_mul(d, $bm_sum(m, $bm_mul(d, n)))));\n    }\n}\nfunction getPropWorldSpeed(t, prop) {\n    return length(getPropWorldVelocity(t, prop));\n}\nfunction getPrevKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time <= t)\n        return nKey;\n    if (nKey.index > 1)\n        return key($bm_sub(nKey.index, 1));\n    return null;\n}\nfunction getNextKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time >= t)\n        return nKey;\n    if (nKey.index < numKeys)\n        return key($bm_sum(nKey.index, 1));\n    return null;\n}\nfunction getPropWorldVelocity(t, prop) {\n    return $bm_mul($bm_sub(getPropWorldValue($bm_sum(t, 0.005), prop), getPropWorldValue($bm_sub(t, 0.005), prop)), 100);\n}\nfunction getLayerWorldPos(t, l) {\n    return l.toWorld(l.anchorPoint, t);\n}\nfunction getPropWorldValue(t, prop) {\n    if (isPosition(prop))\n        return getLayerWorldPos(t, thisLayer);\n    return thisLayer.toWorld(prop.valueAtTime(t), t);\n}\nfunction isPosition(prop) {\n    return prop === $bm_transform.position;\n}\nfunction isKeyTop(k, axis) {\n    var prevSpeed = velocityAtTime($bm_sub(k.time, threshold));\n    var nextSpeed = velocityAtTime($bm_sum(k.time, threshold));\n    if ($bm_isInstanceOfArray(value)) {\n        prevSpeed = prevSpeed[axis];\n        nextSpeed = nextSpeed[axis];\n    }\n    if (Math.abs(prevSpeed) < 0.01 || Math.abs(nextSpeed) < 0.01)\n        return true;\n    return $bm_mul(prevSpeed, nextSpeed) < 0;\n}\nfunction anticipate() {\n    var anticipation = zeroValue;\n    if (isAfterLastKey())\n        return anticipation;\n    if (numKeys < 2)\n        return anticipation;\n    var nextKey = getNextKey(time);\n    var aKey = nextKey;\n    if (!isStill(aKey.time - 0.1, 0.1)) {\n        aKey = getPrevKey(time);\n        if (!isStill(aKey.time - 0.1, 0.1))\n            return anticipation;\n    }\n    if (aKey.index == numKeys)\n        return anticipation;\n    var anticipationMiddle = aKey.time;\n    var anticipationStart = $bm_sub(anticipationMiddle, anticipationDuration);\n    var anticipationEnd = key(aKey.index + 1).time;\n    var startValue = anticipation;\n    var midValue = $bm_mul($bm_sum($bm_neg(valueAtTime($bm_sum(anticipationMiddle, anticipationDuration))), aKey.value), anticipationQuantity);\n    var endValue = anticipation;\n    if (time < anticipationStart) {\n        return anticipation;\n    } else if (time < anticipationMiddle) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue[i], midValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue, midValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else if (time <= anticipationEnd) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue[i], endValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue, endValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else {\n        return anticipation;\n    }\n}\nfunction followThroughAtTime(t) {\n    var fThrough = zeroValue;\n    if (elasticity == 0)\n        return fThrough;\n    var propSpeed;\n    if (!simulate) {\n        if (numKeys < 2)\n            return fThrough;\n        if (nearestKey(t).index == 1)\n            return fThrough;\n        propSpeed = length(velocityAtTime(t));\n        if (propSpeed >= threshold)\n            return fThrough;\n    } else {\n        propSpeed = getPropWorldSpeed(t, thisProperty);\n        if (propSpeed >= threshold)\n            return fThrough;\n    }\n    var fThroughStart = 0;\n    var fThroughTime = 0;\n    if (simulate) {\n        var speedI = getPropWorldSpeed(t, thisProperty);\n        var i = t;\n        while (speedI < threshold && i > 0) {\n            i = $bm_sub(i, $bm_div(thisComp.frameDuration, moBlurPrecision));\n            speedI = getPropWorldSpeed(i, thisProperty);\n        }\n        fThroughStart = i;\n    } else {\n        var fThroughKey = getPrevKey(t);\n        fThroughStart = fThroughKey.time;\n    }\n    if (fThroughStart == 0)\n        return fThrough;\n    fThroughTime = $bm_sub(t, fThroughStart);\n    if (simulate)\n        fThrough = $bm_div(getPropWorldVelocity($bm_sub(fThroughStart, thisComp.frameDuration), thisProperty), 2);\n    else\n        fThrough = $bm_div(velocityAtTime($bm_sub(fThroughStart, thisComp.frameDuration)), 2);\n    if (bounce) {\n        var cycleDamp = Math.exp($bm_mul($bm_mul(fThroughTime, damping), 0.1));\n        var damp = $bm_div(Math.exp($bm_mul(fThroughTime, damping)), $bm_div(elasticity, 2));\n        var cycleDuration = $bm_div(1, $bm_mul(elasticity, 2));\n        cycleDuration = Math.round(timeToFrames(cycleDuration));\n        cycleDuration = framesToTime(cycleDuration);\n        var midDuration = $bm_div(cycleDuration, 2);\n        var maxValue = $bm_mul(fThrough, midDuration);\n        var cycvarime = fThroughTime;\n        var numEndCycles = 1;\n        while (cycvarime > cycleDuration) {\n            cycvarime = $bm_sub(cycvarime, cycleDuration);\n            cycleDuration = $bm_div(cycleDuration, cycleDamp);\n            cycleDuration = Math.round(timeToFrames(cycleDuration));\n            if (cycleDuration < 2) {\n                cycleDuration = 2;\n                numEndCycles++;\n            }\n            cycleDuration = framesToTime(cycleDuration);\n            midDuration = $bm_div(cycleDuration, 2);\n            maxValue = $bm_div($bm_mul(fThrough, midDuration), damp);\n            if (numEndCycles > 100 / damping && maxValue < threshold)\n                return zeroValue;\n        }\n        if (cycvarime < midDuration)\n            fThrough = bezierInterpolation(cycvarime, 0, midDuration, 0, maxValue, [\n                0,\n                0.1,\n                slowIn,\n                1\n            ]);\n        else\n            fThrough = bezierInterpolation(cycvarime, midDuration, cycleDuration, maxValue, 0, [\n                $bm_sub(1, slowIn),\n                0,\n                1,\n                0.9\n            ]);\n    } else {\n        var damp = Math.exp($bm_mul(fThroughTime, damping));\n        var sinus = $bm_mul($bm_mul($bm_mul(elasticity, fThroughTime), 2), Math.PI);\n        sinus = Math.sin(sinus);\n        sinus = $bm_mul($bm_div(0.3, elasticity), sinus);\n        sinus = $bm_div(sinus, damp);\n        if (Math.abs(sinus) < $bm_div(threshold, 100))\n            return 0;\n        fThrough = $bm_mul(fThrough, sinus);\n        if (threshold > 0) {\n            fThrough = $bm_mul(fThrough, $bm_sub(1, $bm_div(propSpeed, threshold)));\n        }\n    }\n    if (bounce) {\n        var prevValue = valueAtTime($bm_sub(fThroughStart, thisComp.frameDuration));\n        var startValue = valueAtTime(fThroughStart);\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < prevValue.length; i++) {\n                if (prevValue[i] > startValue[i])\n                    fThrough[i] = Math.abs(fThrough[i]);\n                if (prevValue[i] < startValue[i])\n                    fThrough[i] = $bm_neg(Math.abs(fThrough[i]));\n            }\n        } else {\n            if (prevValue > startValue)\n                fThrough = Math.abs(fThrough);\n            if (prevValue < startValue)\n                fThrough = $bm_neg(Math.abs(fThrough));\n        }\n    }\n    if (simulate) {\n        if (!isThisPosition) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer));\n            fThrough = $bm_sub(thisLayer.fromWorld(fThrough), thisLayer.anchorPoint);\n        } else if (thisLayer.hasParent) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer.parent));\n            fThrough = $bm_sub(thisLayer.parent.fromWorld(fThrough), thisLayer.parent.anchorPoint);\n        }\n    }\n    return fThrough;\n}\nfunction followThrough() {\n    var propSpeed = length(velocity);\n    if (propSpeed < threshold)\n        return followThroughAtTime($bm_sub(time, overlapDuration));\n    var fThrough = zeroValue;\n    var t = time;\n    while (t > 0) {\n        t = $bm_sub(t, thisComp.frameDuration);\n        if (simulate)\n            propSpeed = getPropWorldSpeed($bm_sub(t, overlapDuration), thisProperty);\n        else\n            propSpeed = length(velocityAtTime(t));\n        if (propSpeed < threshold) {\n            fThrough = followThroughAtTime($bm_sub(t, overlapDuration));\n            break;\n        }\n    }\n    return linear(time, t, $bm_sum(t, $bm_mul(anticipationDuration, 2)), fThrough, zeroValue);\n}\nfunction smartSmooth(axis) {\n    var startKey = nearestKey(time);\n    var endKey = startKey;\n    if (time == startKey.time)\n        return 0;\n    if (time < startKey.time && startKey.index == 1)\n        return 0;\n    if (time > startKey.time && startKey.index == numKeys)\n        return 0;\n    if (time < startKey.time)\n        startKey = key($bm_sub(startKey.index, 1));\n    if (time > startKey.time)\n        endKey = key($bm_sum(startKey.index, 1));\n    var sI = 0.66;\n    var sO = 0.33;\n    var sIV = 1;\n    var sOV = 0;\n    var sVal = startKey.value;\n    var eVal = endKey.value;\n    if ($bm_isInstanceOfArray(value)) {\n        sVal = sVal[axis];\n        eVal = eVal[axis];\n    }\n    var sTime = startKey.time;\n    var eTime = endKey.time;\n    if (isKeyTop(startKey, axis))\n        sO = slowOut;\n    else {\n        var prevKey = key($bm_sub(startKey.index, 1));\n        var pVal = prevKey.value;\n        if ($bm_isInstanceOfArray(value))\n            pVal = pVal[axis];\n        sOV = $bm_div($bm_sub(sVal, pVal), $bm_sub(eVal, pVal));\n    }\n    if (isKeyTop(endKey, axis)) {\n        sI = slowIn;\n        if (endKey.index != numKeys) {\n            var nextKey = key($bm_sum(endKey.index, 1));\n            var nVal = nextKey.value;\n            if ($bm_isInstanceOfArray(value))\n                nVal = nVal[axis];\n            if (Math.abs(nVal - eVal) < 0.01 && doFollowThrough)\n                sI = 1;\n        }\n    } else {\n        var nextKey = key($bm_sum(endKey.index, 1));\n        var nVal = nextKey.value;\n        if ($bm_isInstanceOfArray(value))\n            nVal = nVal[axis];\n        sIV = $bm_div($bm_sub(eVal, sVal), $bm_sub(nVal, sVal));\n    }\n    if (endKey.index == numKeys && doFollowThrough) {\n        sI = 1;\n    }\n    var val = value;\n    if ($bm_isInstanceOfArray(value))\n        val = val[axis];\n    return $bm_sub(bezierInterpolation(time, sTime, eTime, sVal, eVal, [\n        sO,\n        sOV,\n        sI,\n        sIV\n    ]), val);\n}\nfunction overlap() {\n    var ol = zeroValue;\n    if (isThisPosition && !hasParent)\n        return zeroValue;\n    ol = $bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisProperty), getPropWorldValue(time, thisProperty));\n    var motionRatio = $bm_div($bm_div(length(zeroValue, ol), thisLayer.width), 2);\n    if (isThisPosition) {\n        var originalDistance = length(valueAtTime(0));\n        motionRatio = $bm_div(length(zeroValue, ol), thisComp.width);\n    }\n    ol = $bm_sum(ol, getPropWorldValue(time, thisProperty));\n    ol = $bm_sum(ol, $bm_mul($bm_mul($bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisLayer.anchorPoint), ol), motionRatio), flexibility));\n    ol = thisLayer.fromWorld(ol);\n    if (!isThisPosition)\n        ol = $bm_sub(ol, value);\n    else {\n        ol = linear(flexibility, 0, 100, $bm_div(ol, 2), 0);\n        var prevParentWorldPos = getLayerWorldPos($bm_sub(time, overlapDuration), parent);\n        ol = $bm_sum(ol, $bm_mul($bm_mul($bm_mul(thisLayer.fromWorld(prevParentWorldPos), motionRatio), flexibility), 5));\n    }\n    return ol;\n}\nvar okToGo = false;\nif (simulate && fx.enabled)\n    okToGo = true;\nelse if (numKeys > 1 && fx.enabled)\n    okToGo = true;\nif (okToGo) {\n    var smartSmoothResult = zeroValue;\n    if (doInterpolation) {\n        if ($bm_isInstanceOfArray(value)) {\n            if (value.length == 2)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1)\n                ];\n            else if (value.length == 3)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2)\n                ];\n            else if (value.length == 4)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2),\n                    smartSmooth(3)\n                ];\n        } else {\n            smartSmoothResult = smartSmooth(0);\n        }\n    }\n    if (doAnticipation)\n        result = $bm_sum(result, anticipate());\n    result = $bm_sum(result, smartSmoothResult);\n    if (doFollowThrough)\n        result = $bm_sum(result, followThrough());\n    if (doOverlap)\n        result = $bm_sum(result, overlap());\n}\n$bm_rt = result;",
          "a": 1,
          "l": 2
        }
      },
      "shapes": [
        {
          "ty": "gr",
          "nm": "Group 1",
          "bm": 0,
          "mn": "ADBE Vector Group",
          "it": [
            {
              "ty": "gr",
              "nm": "Group 1",
              "bm": 0,
              "mn": "ADBE Vector Group",
              "it": [
                {
                  "ty": "gr",
                  "nm": "Group 1",
                  "bm": 0,
                  "mn": "ADBE Vector Group",
                  "it": [
                    {
                      "ty": "gr",
                      "nm": "Group 1",
                      "bm": 0,
                      "mn": "ADBE Vector Group",
                      "it": [
                        {
                          "ty": "sh",
                          "nm": "Path 1",
                          "mn": "ADBE Vector Shape - Group",
                          "ind": 0,
                          "ks": {
                            "k": {
                              "i": [
                                [-3.045, 2.471],
                                [-1.068, 2.285],
                                [-0.327, 1.22],
                                [-0.119, 0.745],
                                [-0.234, 0.22],
                                [4.162, -0.103],
                                [2.717, 0.566],
                                [1.315, 0.44],
                                [0.643, 0.259],
                                [0.035, 0.214],
                                [-1.751, -2.933],
                                [-3.271, -0.985]
                              ],
                              "o": [
                                [1.967, -1.596],
                                [0.535, -1.144],
                                [0.194, -0.726],
                                [0.05, -0.314],
                                [-3.804, 1.76],
                                [-2.775, 0.069],
                                [-1.358, -0.283],
                                [-0.658, -0.22],
                                [-0.234, -0.094],
                                [0.55, 3.371],
                                [1.751, 2.933],
                                [3.754, 1.131]
                              ],
                              "v": [
                                [-100.542, -89.785],
                                [-96.001, -95.776],
                                [-94.711, -99.333],
                                [-94.247, -101.598],
                                [-94.054, -102.775],
                                [-106.3, -100.247],
                                [-114.575, -100.994],
                                [-118.59, -102.079],
                                [-120.543, -102.798],
                                [-122.373, -103.6],
                                [-119.303, -93.84],
                                [-111.6, -87.442]
                              ],
                              "c": true
                            },
                            "a": 0
                          }
                        },
                        {
                          "ty": "st",
                          "nm": "Stroke 1",
                          "bm": 0,
                          "mn": "ADBE Vector Graphic - Stroke",
                          "lc": 2,
                          "lj": 2,
                          "o": { "a": 0, "k": 100.0 },
                          "w": { "a": 0, "k": 0.684 },
                          "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] }
                        },
                        {
                          "ty": "fl",
                          "nm": "Fill 1",
                          "bm": 0,
                          "mn": "ADBE Vector Graphic - Fill",
                          "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] },
                          "o": { "a": 0, "k": 100.0 },
                          "r": 1
                        },
                        {
                          "ty": "tr",
                          "o": { "a": 0, "k": 100.0 },
                          "r": { "a": 0, "k": 0.0 },
                          "p": { "a": 0, "k": [-107.299, -94.045] },
                          "a": { "a": 0, "k": [-107.299, -94.045] },
                          "s": {
                            "k": [
                              {
                                "i": { "x": [0.667, 0.667], "y": [1.0, 1.0] },
                                "o": { "x": [0.333, 0.333], "y": [0.0, 0.0] },
                                "t": 25,
                                "s": [100, 100]
                              },
                              {
                                "i": { "x": [0.667, 0.667], "y": [1.0, 1.0] },
                                "o": { "x": [0.333, 0.333], "y": [0.0, 0.0] },
                                "t": 37,
                                "s": [60, 60]
                              },
                              {
                                "i": { "x": [0.667, 0.667], "y": [1.0, 1.0] },
                                "o": { "x": [0.333, 0.333], "y": [0.0, 0.0] },
                                "t": 50,
                                "s": [100, 100]
                              },
                              {
                                "i": { "x": [0.667, 0.667], "y": [1.0, 1.0] },
                                "o": { "x": [0.333, 0.333], "y": [0.0, 0.0] },
                                "t": 62,
                                "s": [60, 60]
                              },
                              {
                                "i": { "x": [0.667, 0.667], "y": [1.0, 1.0] },
                                "o": { "x": [0.333, 0.333], "y": [0.0, 0.0] },
                                "t": 75,
                                "s": [100, 100]
                              },
                              {
                                "i": { "x": [0.667, 0.667], "y": [1.0, 1.0] },
                                "o": { "x": [0.333, 0.333], "y": [0.0, 0.0] },
                                "t": 87,
                                "s": [60, 60]
                              },
                              { "t": 100, "s": [100, 100] }
                            ],
                            "a": 1
                          },
                          "nm": "Transform",
                          "sk": { "a": 0, "k": 0.0 },
                          "sa": { "a": 0, "k": 0.0 }
                        }
                      ]
                    },
                    {
                      "ty": "tr",
                      "o": { "a": 0, "k": 100.0 },
                      "r": { "a": 0, "k": 0.0 },
                      "p": { "a": 0, "k": [0.0, 0.0] },
                      "a": { "a": 0, "k": [0.0, 0.0] },
                      "s": { "a": 0, "k": [100.0, 100.0] },
                      "nm": "Transform",
                      "sk": { "a": 0, "k": 0.0 },
                      "sa": { "a": 0, "k": 0.0 }
                    }
                  ]
                },
                {
                  "ty": "gr",
                  "nm": "Group 2",
                  "bm": 0,
                  "mn": "ADBE Vector Group",
                  "it": [
                    {
                      "ty": "gr",
                      "nm": "Group 1",
                      "bm": 0,
                      "mn": "ADBE Vector Group",
                      "it": [
                        {
                          "ty": "gr",
                          "nm": "Group 1",
                          "bm": 0,
                          "mn": "ADBE Vector Group",
                          "it": [
                            {
                              "ty": "gr",
                              "nm": "Group 1",
                              "bm": 0,
                              "mn": "ADBE Vector Group",
                              "it": [
                                {
                                  "ty": "sh",
                                  "nm": "Path 1",
                                  "mn": "ADBE Vector Shape - Group",
                                  "ind": 0,
                                  "ks": {
                                    "k": {
                                      "i": [
                                        [-0.38, 1.662],
                                        [1.596, -1.198],
                                        [1.686, 1.067],
                                        [-1.38, 1.002]
                                      ],
                                      "o": [
                                        [0.554, 1.917],
                                        [-1.596, 1.198],
                                        [1.698, 0.152],
                                        [1.38, -1.002]
                                      ],
                                      "v": [
                                        [-118.808, -123.634],
                                        [-120.593, -118.295],
                                        [-126.217, -118.07],
                                        [-121.503, -119.679]
                                      ],
                                      "c": true
                                    },
                                    "a": 0
                                  }
                                },
                                {
                                  "ty": "fl",
                                  "nm": "Fill 1",
                                  "bm": 0,
                                  "mn": "ADBE Vector Graphic - Fill",
                                  "c": { "a": 0, "k": [1.0, 1.0, 1.0, 1.0] },
                                  "o": { "a": 0, "k": 100.0 },
                                  "r": 1
                                },
                                {
                                  "ty": "tr",
                                  "o": { "a": 0, "k": 100.0 },
                                  "r": { "a": 0, "k": 0.0 },
                                  "p": { "a": 0, "k": [0.0, 0.0] },
                                  "a": { "a": 0, "k": [0.0, 0.0] },
                                  "s": { "a": 0, "k": [100.0, 100.0] },
                                  "nm": "Transform",
                                  "sk": { "a": 0, "k": 0.0 },
                                  "sa": { "a": 0, "k": 0.0 }
                                }
                              ]
                            },
                            {
                              "ty": "gr",
                              "nm": "Group 2",
                              "bm": 0,
                              "mn": "ADBE Vector Group",
                              "it": [
                                {
                                  "ty": "sh",
                                  "nm": "Path 1",
                                  "mn": "ADBE Vector Shape - Group",
                                  "ind": 0,
                                  "ks": {
                                    "k": {
                                      "i": [
                                        [0.152, -1.716],
                                        [1.716, 0.152],
                                        [-0.152, 1.716],
                                        [-1.716, -0.152]
                                      ],
                                      "o": [
                                        [-0.152, 1.716],
                                        [-1.716, -0.152],
                                        [0.152, -1.716],
                                        [1.716, 0.152]
                                      ],
                                      "v": [
                                        [-124.465, -125.986],
                                        [-127.847, -123.153],
                                        [-130.68, -126.535],
                                        [-127.298, -129.367]
                                      ],
                                      "c": true
                                    },
                                    "a": 0
                                  }
                                },
                                {
                                  "ty": "fl",
                                  "nm": "Fill 1",
                                  "bm": 0,
                                  "mn": "ADBE Vector Graphic - Fill",
                                  "c": { "a": 0, "k": [1.0, 1.0, 1.0, 1.0] },
                                  "o": { "a": 0, "k": 100.0 },
                                  "r": 1
                                },
                                {
                                  "ty": "tr",
                                  "o": { "a": 0, "k": 100.0 },
                                  "r": { "a": 0, "k": 0.0 },
                                  "p": { "a": 0, "k": [0.0, 0.0] },
                                  "a": { "a": 0, "k": [0.0, 0.0] },
                                  "s": { "a": 0, "k": [100.0, 100.0] },
                                  "nm": "Transform",
                                  "sk": { "a": 0, "k": 0.0 },
                                  "sa": { "a": 0, "k": 0.0 }
                                }
                              ]
                            },
                            {
                              "ty": "gr",
                              "nm": "Group 3",
                              "bm": 0,
                              "mn": "ADBE Vector Group",
                              "it": [
                                {
                                  "ty": "sh",
                                  "nm": "Path 1",
                                  "mn": "ADBE Vector Shape - Group",
                                  "ind": 0,
                                  "ks": {
                                    "k": {
                                      "i": [
                                        [0.444, -5.016],
                                        [5.016, 0.444],
                                        [-0.444, 5.016],
                                        [-5.016, -0.444]
                                      ],
                                      "o": [
                                        [-0.444, 5.016],
                                        [-5.016, -0.444],
                                        [0.444, -5.016],
                                        [5.016, 0.444]
                                      ],
                                      "v": [
                                        [-115.862, -122.792],
                                        [-125.747, -114.513],
                                        [-134.026, -124.398],
                                        [-124.141, -132.677]
                                      ],
                                      "c": true
                                    },
                                    "a": 0
                                  }
                                },
                                {
                                  "ty": "st",
                                  "nm": "Stroke 1",
                                  "bm": 0,
                                  "mn": "ADBE Vector Graphic - Stroke",
                                  "lc": 2,
                                  "lj": 2,
                                  "o": { "a": 0, "k": 100.0 },
                                  "w": { "a": 0, "k": 0.684 },
                                  "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] }
                                },
                                {
                                  "ty": "fl",
                                  "nm": "Fill 1",
                                  "bm": 0,
                                  "mn": "ADBE Vector Graphic - Fill",
                                  "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] },
                                  "o": { "a": 0, "k": 100.0 },
                                  "r": 1
                                },
                                {
                                  "ty": "tr",
                                  "o": { "a": 0, "k": 100.0 },
                                  "r": { "a": 0, "k": 0.0 },
                                  "p": { "a": 0, "k": [0.0, 0.0] },
                                  "a": { "a": 0, "k": [0.0, 0.0] },
                                  "s": { "a": 0, "k": [100.0, 100.0] },
                                  "nm": "Transform",
                                  "sk": { "a": 0, "k": 0.0 },
                                  "sa": { "a": 0, "k": 0.0 }
                                }
                              ]
                            },
                            {
                              "ty": "tr",
                              "o": { "a": 0, "k": 100.0 },
                              "r": { "a": 0, "k": 0.0 },
                              "p": { "a": 0, "k": [0.0, 0.0] },
                              "a": { "a": 0, "k": [0.0, 0.0] },
                              "s": { "a": 0, "k": [100.0, 100.0] },
                              "nm": "Transform",
                              "sk": { "a": 0, "k": 0.0 },
                              "sa": { "a": 0, "k": 0.0 }
                            }
                          ]
                        },
                        {
                          "ty": "gr",
                          "nm": "Group 2",
                          "bm": 0,
                          "mn": "ADBE Vector Group",
                          "it": [
                            {
                              "ty": "gr",
                              "nm": "Group 1",
                              "bm": 0,
                              "mn": "ADBE Vector Group",
                              "it": [
                                {
                                  "ty": "sh",
                                  "nm": "Path 1",
                                  "mn": "ADBE Vector Shape - Group",
                                  "ind": 0,
                                  "ks": {
                                    "k": {
                                      "i": [
                                        [-0.38, 1.662],
                                        [1.596, -1.198],
                                        [1.686, 1.067],
                                        [-1.38, 1.002]
                                      ],
                                      "o": [
                                        [0.554, 1.917],
                                        [-1.596, 1.198],
                                        [1.698, 0.152],
                                        [1.38, -1.002]
                                      ],
                                      "v": [
                                        [-82.771, -122.88],
                                        [-84.556, -117.541],
                                        [-90.181, -117.317],
                                        [-85.467, -118.925]
                                      ],
                                      "c": true
                                    },
                                    "a": 0
                                  }
                                },
                                {
                                  "ty": "fl",
                                  "nm": "Fill 1",
                                  "bm": 0,
                                  "mn": "ADBE Vector Graphic - Fill",
                                  "c": { "a": 0, "k": [1.0, 1.0, 1.0, 1.0] },
                                  "o": { "a": 0, "k": 100.0 },
                                  "r": 1
                                },
                                {
                                  "ty": "tr",
                                  "o": { "a": 0, "k": 100.0 },
                                  "r": { "a": 0, "k": 0.0 },
                                  "p": { "a": 0, "k": [0.0, 0.0] },
                                  "a": { "a": 0, "k": [0.0, 0.0] },
                                  "s": { "a": 0, "k": [100.0, 100.0] },
                                  "nm": "Transform",
                                  "sk": { "a": 0, "k": 0.0 },
                                  "sa": { "a": 0, "k": 0.0 }
                                }
                              ]
                            },
                            {
                              "ty": "gr",
                              "nm": "Group 2",
                              "bm": 0,
                              "mn": "ADBE Vector Group",
                              "it": [
                                {
                                  "ty": "sh",
                                  "nm": "Path 1",
                                  "mn": "ADBE Vector Shape - Group",
                                  "ind": 0,
                                  "ks": {
                                    "k": {
                                      "i": [
                                        [0.152, -1.716],
                                        [1.716, 0.152],
                                        [-0.152, 1.716],
                                        [-1.716, -0.152]
                                      ],
                                      "o": [
                                        [-0.152, 1.716],
                                        [-1.716, -0.152],
                                        [0.152, -1.716],
                                        [1.716, 0.152]
                                      ],
                                      "v": [
                                        [-88.429, -125.232],
                                        [-91.811, -122.4],
                                        [-94.644, -125.781],
                                        [-91.262, -128.614]
                                      ],
                                      "c": true
                                    },
                                    "a": 0
                                  }
                                },
                                {
                                  "ty": "fl",
                                  "nm": "Fill 1",
                                  "bm": 0,
                                  "mn": "ADBE Vector Graphic - Fill",
                                  "c": { "a": 0, "k": [1.0, 1.0, 1.0, 1.0] },
                                  "o": { "a": 0, "k": 100.0 },
                                  "r": 1
                                },
                                {
                                  "ty": "tr",
                                  "o": { "a": 0, "k": 100.0 },
                                  "r": { "a": 0, "k": 0.0 },
                                  "p": { "a": 0, "k": [0.0, 0.0] },
                                  "a": { "a": 0, "k": [0.0, 0.0] },
                                  "s": { "a": 0, "k": [100.0, 100.0] },
                                  "nm": "Transform",
                                  "sk": { "a": 0, "k": 0.0 },
                                  "sa": { "a": 0, "k": 0.0 }
                                }
                              ]
                            },
                            {
                              "ty": "gr",
                              "nm": "Group 3",
                              "bm": 0,
                              "mn": "ADBE Vector Group",
                              "it": [
                                {
                                  "ty": "sh",
                                  "nm": "Path 1",
                                  "mn": "ADBE Vector Shape - Group",
                                  "ind": 0,
                                  "ks": {
                                    "k": {
                                      "i": [
                                        [0.444, -5.016],
                                        [5.016, 0.444],
                                        [-0.444, 5.016],
                                        [-5.016, -0.444]
                                      ],
                                      "o": [
                                        [-0.444, 5.016],
                                        [-5.016, -0.444],
                                        [0.444, -5.016],
                                        [5.016, 0.444]
                                      ],
                                      "v": [
                                        [-79.826, -122.038],
                                        [-89.711, -113.759],
                                        [-97.99, -123.644],
                                        [-88.105, -131.923]
                                      ],
                                      "c": true
                                    },
                                    "a": 0
                                  }
                                },
                                {
                                  "ty": "st",
                                  "nm": "Stroke 1",
                                  "bm": 0,
                                  "mn": "ADBE Vector Graphic - Stroke",
                                  "lc": 2,
                                  "lj": 2,
                                  "o": { "a": 0, "k": 100.0 },
                                  "w": { "a": 0, "k": 0.684 },
                                  "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] }
                                },
                                {
                                  "ty": "fl",
                                  "nm": "Fill 1",
                                  "bm": 0,
                                  "mn": "ADBE Vector Graphic - Fill",
                                  "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] },
                                  "o": { "a": 0, "k": 100.0 },
                                  "r": 1
                                },
                                {
                                  "ty": "tr",
                                  "o": { "a": 0, "k": 100.0 },
                                  "r": { "a": 0, "k": 0.0 },
                                  "p": { "a": 0, "k": [0.0, 0.0] },
                                  "a": { "a": 0, "k": [0.0, 0.0] },
                                  "s": { "a": 0, "k": [100.0, 100.0] },
                                  "nm": "Transform",
                                  "sk": { "a": 0, "k": 0.0 },
                                  "sa": { "a": 0, "k": 0.0 }
                                }
                              ]
                            },
                            {
                              "ty": "tr",
                              "o": { "a": 0, "k": 100.0 },
                              "r": { "a": 0, "k": 0.0 },
                              "p": { "a": 0, "k": [0.0, 0.0] },
                              "a": { "a": 0, "k": [0.0, 0.0] },
                              "s": { "a": 0, "k": [100.0, 100.0] },
                              "nm": "Transform",
                              "sk": { "a": 0, "k": 0.0 },
                              "sa": { "a": 0, "k": 0.0 }
                            }
                          ]
                        },
                        {
                          "ty": "tr",
                          "o": { "a": 0, "k": 100.0 },
                          "r": { "a": 0, "k": 0.0 },
                          "p": { "a": 0, "k": [0.0, 0.0] },
                          "a": { "a": 0, "k": [0.0, 0.0] },
                          "s": { "a": 0, "k": [100.0, 100.0] },
                          "nm": "Transform",
                          "sk": { "a": 0, "k": 0.0 },
                          "sa": { "a": 0, "k": 0.0 }
                        }
                      ]
                    },
                    {
                      "ty": "gr",
                      "nm": "Group 2",
                      "bm": 0,
                      "mn": "ADBE Vector Group",
                      "it": [
                        {
                          "ty": "sh",
                          "nm": "Path 1",
                          "mn": "ADBE Vector Shape - Group",
                          "ind": 0,
                          "ks": {
                            "k": {
                              "i": [
                                [-1.94, 1.988],
                                [-4.527, 0.757],
                                [-4.585, -0.207],
                                [-4.578, -0.206],
                                [-3.28, -1.251],
                                [-1.809, -3.737],
                                [5.125, -3.209],
                                [2.906, -0.522],
                                [11.854, 2.502],
                                [3.361, 1.948],
                                [0.762, 0.901],
                                [0.27, 1.11],
                                [-0.22, 1.365]
                              ],
                              "o": [
                                [3.205, -3.285],
                                [4.527, -0.757],
                                [4.578, 0.206],
                                [3.507, 0.158],
                                [3.879, 1.48],
                                [2.465, 5.092],
                                [-2.503, 1.567],
                                [-11.924, 2.142],
                                [-3.77, -0.796],
                                [-1.022, -0.592],
                                [-0.727, -0.86],
                                [-0.326, -1.344],
                                [0.446, -2.768]
                              ],
                              "v": [
                                [-135.414, -130.993],
                                [-123.201, -136.837],
                                [-109.464, -137.183],
                                [-95.73, -136.564],
                                [-85.367, -134.983],
                                [-76.405, -126.764],
                                [-79.31, -113.16],
                                [-87.663, -110.387],
                                [-123.78, -110.933],
                                [-134.759, -114.641],
                                [-137.446, -116.65],
                                [-139.137, -119.611],
                                [-139.291, -123.722]
                              ],
                              "c": true
                            },
                            "a": 0
                          }
                        },
                        {
                          "ty": "st",
                          "nm": "Stroke 1",
                          "bm": 0,
                          "mn": "ADBE Vector Graphic - Stroke",
                          "lc": 2,
                          "lj": 2,
                          "o": { "a": 0, "k": 100.0 },
                          "w": { "a": 0, "k": 0.684 },
                          "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] }
                        },
                        {
                          "ty": "fl",
                          "nm": "Fill 1",
                          "bm": 0,
                          "mn": "ADBE Vector Graphic - Fill",
                          "c": { "a": 0, "k": [1.0, 1.0, 1.0, 1.0] },
                          "o": { "a": 0, "k": 100.0 },
                          "r": 1
                        },
                        {
                          "ty": "tr",
                          "o": { "a": 0, "k": 100.0 },
                          "r": { "a": 0, "k": 0.0 },
                          "p": { "a": 0, "k": [0.0, 0.0] },
                          "a": { "a": 0, "k": [0.0, 0.0] },
                          "s": { "a": 0, "k": [100.0, 100.0] },
                          "nm": "Transform",
                          "sk": { "a": 0, "k": 0.0 },
                          "sa": { "a": 0, "k": 0.0 }
                        }
                      ]
                    },
                    {
                      "ty": "tr",
                      "o": { "a": 0, "k": 100.0 },
                      "r": { "a": 0, "k": 0.0 },
                      "p": { "a": 0, "k": [0.0, 0.0] },
                      "a": { "a": 0, "k": [0.0, 0.0] },
                      "s": { "a": 0, "k": [100.0, 100.0] },
                      "nm": "Transform",
                      "sk": { "a": 0, "k": 0.0 },
                      "sa": { "a": 0, "k": 0.0 }
                    }
                  ]
                },
                {
                  "ty": "tr",
                  "o": { "a": 0, "k": 100.0 },
                  "r": { "a": 0, "k": 0.0 },
                  "p": { "a": 0, "k": [0.0, 0.0] },
                  "a": { "a": 0, "k": [0.0, 0.0] },
                  "s": { "a": 0, "k": [100.0, 100.0] },
                  "nm": "Transform",
                  "sk": { "a": 0, "k": 0.0 },
                  "sa": { "a": 0, "k": 0.0 }
                }
              ]
            },
            {
              "ty": "gr",
              "nm": "Group 2",
              "bm": 0,
              "mn": "ADBE Vector Group",
              "it": [
                {
                  "ty": "gr",
                  "nm": "Group 1",
                  "bm": 0,
                  "mn": "ADBE Vector Group",
                  "it": [
                    {
                      "ty": "sh",
                      "nm": "Path 1",
                      "mn": "ADBE Vector Shape - Group",
                      "ind": 0,
                      "ks": {
                        "k": {
                          "i": [
                            [-1.835, 14.536],
                            [0.0, 0.0],
                            [-19.823, 1.26],
                            [0.0, 0.0],
                            [-2.574, -21.845],
                            [0.0, 0.0],
                            [13.174, -2.735],
                            [13.991, 1.452]
                          ],
                          "o": [
                            [0.0, 0.0],
                            [2.487, -19.706],
                            [0.0, 0.0],
                            [21.952, -1.395],
                            [0.0, 0.0],
                            [1.575, 13.362],
                            [-14.452, 3.0],
                            [-14.573, -1.513]
                          ],
                          "v": [
                            [-154.433, -106.855],
                            [-152.152, -124.928],
                            [-113.708, -161.056],
                            [-113.708, -161.056],
                            [-69.972, -124.589],
                            [-68.083, -108.553],
                            [-88.521, -80.008],
                            [-131.189, -77.65]
                          ],
                          "c": true
                        },
                        "a": 0
                      }
                    },
                    {
                      "ty": "st",
                      "nm": "Stroke 1",
                      "bm": 0,
                      "mn": "ADBE Vector Graphic - Stroke",
                      "lc": 2,
                      "lj": 2,
                      "o": { "a": 0, "k": 100.0 },
                      "w": { "a": 0, "k": 0.684 },
                      "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] }
                    },
                    {
                      "ty": "fl",
                      "nm": "Fill 1",
                      "bm": 0,
                      "mn": "ADBE Vector Graphic - Fill",
                      "c": { "a": 0, "k": [1.0, 1.0, 1.0, 1.0] },
                      "o": { "a": 0, "k": 100.0 },
                      "r": 1
                    },
                    {
                      "ty": "tr",
                      "o": { "a": 0, "k": 100.0 },
                      "r": { "a": 0, "k": 0.0 },
                      "p": { "a": 0, "k": [0.0, 0.0] },
                      "a": { "a": 0, "k": [0.0, 0.0] },
                      "s": { "a": 0, "k": [100.0, 100.0] },
                      "nm": "Transform",
                      "sk": { "a": 0, "k": 0.0 },
                      "sa": { "a": 0, "k": 0.0 }
                    }
                  ]
                },
                {
                  "ty": "gr",
                  "nm": "Group 2",
                  "bm": 0,
                  "mn": "ADBE Vector Group",
                  "it": [
                    {
                      "ty": "sh",
                      "nm": "Path 1",
                      "mn": "ADBE Vector Shape - Group",
                      "ind": 0,
                      "ks": {
                        "k": {
                          "i": [
                            [0.0, 0.0],
                            [-1.588, 5.768],
                            [-5.87, 1.156]
                          ],
                          "o": [
                            [-4.451, -3.998],
                            [1.588, -5.768],
                            [0.0, 0.0]
                          ],
                          "v": [
                            [-153.373, -115.001],
                            [-158.169, -131.357],
                            [-145.677, -142.955]
                          ],
                          "c": false
                        },
                        "a": 0
                      }
                    },
                    {
                      "ty": "st",
                      "nm": "Stroke 1",
                      "bm": 0,
                      "mn": "ADBE Vector Graphic - Stroke",
                      "lc": 2,
                      "lj": 2,
                      "o": { "a": 0, "k": 100.0 },
                      "w": { "a": 0, "k": 0.684 },
                      "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] }
                    },
                    {
                      "ty": "fl",
                      "nm": "Fill 1",
                      "bm": 0,
                      "mn": "ADBE Vector Graphic - Fill",
                      "c": { "a": 0, "k": [1.0, 1.0, 1.0, 1.0] },
                      "o": { "a": 0, "k": 100.0 },
                      "r": 1
                    },
                    {
                      "ty": "tr",
                      "o": { "a": 0, "k": 100.0 },
                      "r": { "a": 0, "k": 0.0 },
                      "p": { "a": 0, "k": [0.0, 0.0] },
                      "a": { "a": 0, "k": [0.0, 0.0] },
                      "s": { "a": 0, "k": [100.0, 100.0] },
                      "nm": "Transform",
                      "sk": { "a": 0, "k": 0.0 },
                      "sa": { "a": 0, "k": 0.0 }
                    }
                  ]
                },
                {
                  "ty": "tr",
                  "o": { "a": 0, "k": 100.0 },
                  "r": { "a": 0, "k": 0.0 },
                  "p": { "a": 0, "k": [0.0, 0.0] },
                  "a": { "a": 0, "k": [0.0, 0.0] },
                  "s": { "a": 0, "k": [100.0, 100.0] },
                  "nm": "Transform",
                  "sk": { "a": 0, "k": 0.0 },
                  "sa": { "a": 0, "k": 0.0 }
                }
              ]
            },
            {
              "ty": "tr",
              "o": { "a": 0, "k": 100.0 },
              "r": {
                "a": 1,
                "k": [
                  {
                    "i": { "x": [0.667], "y": [1] },
                    "o": { "x": [0.333], "y": [0] },
                    "t": 19,
                    "s": [0.0]
                  },
                  {
                    "i": { "x": [0.667], "y": [1] },
                    "o": { "x": [0.333], "y": [0] },
                    "t": 29,
                    "s": [8.0]
                  },
                  {
                    "i": { "x": [0.667], "y": [1] },
                    "o": { "x": [0.333], "y": [0] },
                    "t": 39,
                    "s": [0.0]
                  },
                  {
                    "i": { "x": [0.667], "y": [1] },
                    "o": { "x": [0.333], "y": [0] },
                    "t": 49,
                    "s": [8.0]
                  },
                  {
                    "i": { "x": [0.667], "y": [1] },
                    "o": { "x": [0.333], "y": [0] },
                    "t": 59,
                    "s": [0.0]
                  },
                  {
                    "i": { "x": [0.667], "y": [1] },
                    "o": { "x": [0.333], "y": [0] },
                    "t": 69,
                    "s": [8.0]
                  },
                  {
                    "i": { "x": [0.667], "y": [1] },
                    "o": { "x": [0.333], "y": [0] },
                    "t": 79,
                    "s": [0.0]
                  },
                  {
                    "i": { "x": [0.667], "y": [1] },
                    "o": { "x": [0.333], "y": [0] },
                    "t": 89,
                    "s": [8.0]
                  },
                  { "t": 99, "s": [0.0] }
                ]
              },
              "p": { "a": 0, "k": [-114.762, -78.116] },
              "a": { "a": 0, "k": [-114.762, -78.116] },
              "s": { "a": 0, "k": [100.0, 100.0] },
              "nm": "Transform",
              "sk": { "a": 0, "k": 0.0 },
              "sa": { "a": 0, "k": 0.0 }
            }
          ]
        },
        {
          "ty": "gr",
          "nm": "Group 2",
          "bm": 0,
          "mn": "ADBE Vector Group",
          "it": [
            {
              "ty": "gr",
              "nm": "Group 7",
              "bm": 0,
              "mn": "ADBE Vector Group",
              "it": [
                {
                  "ty": "gr",
                  "nm": "Group 1",
                  "bm": 0,
                  "mn": "ADBE Vector Group",
                  "it": [
                    {
                      "ty": "gr",
                      "nm": "Group 1",
                      "bm": 0,
                      "mn": "ADBE Vector Group",
                      "it": [
                        {
                          "ty": "sh",
                          "nm": "Path 1",
                          "mn": "ADBE Vector Shape - Group",
                          "ind": 0,
                          "ks": {
                            "k": {
                              "i": [
                                [0.0, -5.986],
                                [5.986, 0.0],
                                [0.0, 5.986],
                                [-5.986, 0.0]
                              ],
                              "o": [
                                [0.0, 5.986],
                                [-5.986, 0.0],
                                [0.0, -5.986],
                                [5.986, 0.0]
                              ],
                              "v": [
                                [-68.951, -62.251],
                                [-79.79, -51.412],
                                [-90.628, -62.251],
                                [-79.79, -73.089]
                              ],
                              "c": true
                            },
                            "a": 0
                          }
                        },
                        {
                          "ty": "st",
                          "nm": "Stroke 1",
                          "bm": 0,
                          "mn": "ADBE Vector Graphic - Stroke",
                          "lc": 2,
                          "lj": 2,
                          "o": { "a": 0, "k": 100.0 },
                          "w": { "a": 0, "k": 0.684 },
                          "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] }
                        },
                        {
                          "ty": "fl",
                          "nm": "Fill 1",
                          "bm": 0,
                          "mn": "ADBE Vector Graphic - Fill",
                          "c": { "a": 0, "k": [1.0, 1.0, 1.0, 1.0] },
                          "o": { "a": 0, "k": 100.0 },
                          "r": 1
                        },
                        {
                          "ty": "tr",
                          "o": { "a": 0, "k": 100.0 },
                          "r": { "a": 0, "k": 0.0 },
                          "p": { "a": 0, "k": [0.0, 0.0] },
                          "a": { "a": 0, "k": [0.0, 0.0] },
                          "s": { "a": 0, "k": [100.0, 100.0] },
                          "nm": "Transform",
                          "sk": { "a": 0, "k": 0.0 },
                          "sa": { "a": 0, "k": 0.0 }
                        }
                      ]
                    },
                    {
                      "ty": "gr",
                      "nm": "Group 2",
                      "bm": 0,
                      "mn": "ADBE Vector Group",
                      "it": [
                        {
                          "ty": "gr",
                          "nm": "Group 1",
                          "bm": 0,
                          "mn": "ADBE Vector Group",
                          "it": [
                            {
                              "ty": "sh",
                              "nm": "Path 1",
                              "mn": "ADBE Vector Shape - Group",
                              "ind": 0,
                              "ks": {
                                "k": {
                                  "i": [
                                    [-0.545, -1.482],
                                    [-0.01, -0.027],
                                    [1.524, -0.549],
                                    [0.008, -0.003],
                                    [-0.815, 2.351],
                                    [-1.074, 0.381],
                                    [-1.091, 0.376],
                                    [-2.479, 0.835],
                                    [-1.439, 0.481]
                                  ],
                                  "o": [
                                    [0.01, 0.027],
                                    [0.559, 1.52],
                                    [0.0, 0.0],
                                    [-2.492, 0.898],
                                    [0.414, -1.193],
                                    [1.087, -0.385],
                                    [2.473, -0.853],
                                    [1.438, -0.484],
                                    [1.498, -0.501]
                                  ],
                                  "v": [
                                    [-72.83, -18.592],
                                    [-72.8, -18.511],
                                    [-74.551, -14.757],
                                    [-90.188, -9.124],
                                    [-94.054, -13.319],
                                    [-91.508, -15.238],
                                    [-88.24, -16.378],
                                    [-80.811, -18.906],
                                    [-76.496, -20.354]
                                  ],
                                  "c": true
                                },
                                "a": 0
                              }
                            },
                            {
                              "ty": "st",
                              "nm": "Stroke 1",
                              "bm": 0,
                              "mn": "ADBE Vector Graphic - Stroke",
                              "lc": 2,
                              "lj": 2,
                              "o": { "a": 0, "k": 100.0 },
                              "w": { "a": 0, "k": 0.684 },
                              "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] }
                            },
                            {
                              "ty": "fl",
                              "nm": "Fill 1",
                              "bm": 0,
                              "mn": "ADBE Vector Graphic - Fill",
                              "c": { "a": 0, "k": [1.0, 1.0, 1.0, 1.0] },
                              "o": { "a": 0, "k": 100.0 },
                              "r": 1
                            },
                            {
                              "ty": "tr",
                              "o": { "a": 0, "k": 100.0 },
                              "r": { "a": 0, "k": 0.0 },
                              "p": { "a": 0, "k": [0.0, 0.0] },
                              "a": { "a": 0, "k": [0.0, 0.0] },
                              "s": { "a": 0, "k": [100.0, 100.0] },
                              "nm": "Transform",
                              "sk": { "a": 0, "k": 0.0 },
                              "sa": { "a": 0, "k": 0.0 }
                            }
                          ]
                        },
                        {
                          "ty": "gr",
                          "nm": "Group 2",
                          "bm": 0,
                          "mn": "ADBE Vector Group",
                          "it": [
                            {
                              "ty": "sh",
                              "nm": "Path 1",
                              "mn": "ADBE Vector Shape - Group",
                              "ind": 0,
                              "ks": {
                                "k": {
                                  "i": [
                                    [0.923, -0.916],
                                    [3.466, -1.74],
                                    [-2.844, -0.265],
                                    [-1.813, 1.071],
                                    [-1.82, 1.689],
                                    [2.018, 0.92]
                                  ],
                                  "o": [
                                    [-1.808, 1.794],
                                    [-2.15, 1.079],
                                    [2.206, 0.205],
                                    [2.133, -1.26],
                                    [1.626, -1.509],
                                    [-1.183, -0.539]
                                  ],
                                  "v": [
                                    [-71.933, -13.148],
                                    [-80.459, -6.677],
                                    [-80.037, -1.713],
                                    [-73.593, -4.286],
                                    [-67.57, -8.647],
                                    [-68.435, -13.767]
                                  ],
                                  "c": true
                                },
                                "a": 0
                              }
                            },
                            {
                              "ty": "st",
                              "nm": "Stroke 1",
                              "bm": 0,
                              "mn": "ADBE Vector Graphic - Stroke",
                              "lc": 2,
                              "lj": 2,
                              "o": { "a": 0, "k": 100.0 },
                              "w": { "a": 0, "k": 0.684 },
                              "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] }
                            },
                            {
                              "ty": "fl",
                              "nm": "Fill 1",
                              "bm": 0,
                              "mn": "ADBE Vector Graphic - Fill",
                              "c": { "a": 0, "k": [1.0, 1.0, 1.0, 1.0] },
                              "o": { "a": 0, "k": 100.0 },
                              "r": 1
                            },
                            {
                              "ty": "tr",
                              "o": { "a": 0, "k": 100.0 },
                              "r": { "a": 0, "k": 0.0 },
                              "p": { "a": 0, "k": [0.0, 0.0] },
                              "a": { "a": 0, "k": [0.0, 0.0] },
                              "s": { "a": 0, "k": [100.0, 100.0] },
                              "nm": "Transform",
                              "sk": { "a": 0, "k": 0.0 },
                              "sa": { "a": 0, "k": 0.0 }
                            }
                          ]
                        },
                        {
                          "ty": "gr",
                          "nm": "Group 3",
                          "bm": 0,
                          "mn": "ADBE Vector Group",
                          "it": [
                            {
                              "ty": "sh",
                              "nm": "Path 1",
                              "mn": "ADBE Vector Shape - Group",
                              "ind": 0,
                              "ks": {
                                "k": {
                                  "i": [
                                    [-1.867, 0.41],
                                    [-4.287, 0.95],
                                    [-0.341, -1.987],
                                    [0.0, 0.0],
                                    [1.814, -0.429],
                                    [0.0, 0.0],
                                    [0.376, 1.975],
                                    [0.0, 0.0]
                                  ],
                                  "o": [
                                    [4.171, -0.915],
                                    [1.969, -0.436],
                                    [0.0, 0.0],
                                    [0.315, 1.837],
                                    [0.0, 0.0],
                                    [-1.957, 0.463],
                                    [0.0, 0.0],
                                    [-0.358, -1.878]
                                  ],
                                  "v": [
                                    [-94.328, -26.591],
                                    [-78.78, -30.026],
                                    [-74.54, -27.176],
                                    [-74.54, -27.176],
                                    [-77.207, -23.143],
                                    [-92.711, -19.474],
                                    [-96.991, -22.248],
                                    [-97.036, -22.483]
                                  ],
                                  "c": true
                                },
                                "a": 0
                              }
                            },
                            {
                              "ty": "st",
                              "nm": "Stroke 1",
                              "bm": 0,
                              "mn": "ADBE Vector Graphic - Stroke",
                              "lc": 2,
                              "lj": 2,
                              "o": { "a": 0, "k": 100.0 },
                              "w": { "a": 0, "k": 0.684 },
                              "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] }
                            },
                            {
                              "ty": "fl",
                              "nm": "Fill 1",
                              "bm": 0,
                              "mn": "ADBE Vector Graphic - Fill",
                              "c": { "a": 0, "k": [1.0, 1.0, 1.0, 1.0] },
                              "o": { "a": 0, "k": 100.0 },
                              "r": 1
                            },
                            {
                              "ty": "tr",
                              "o": { "a": 0, "k": 100.0 },
                              "r": { "a": 0, "k": 0.0 },
                              "p": { "a": 0, "k": [0.0, 0.0] },
                              "a": { "a": 0, "k": [0.0, 0.0] },
                              "s": { "a": 0, "k": [100.0, 100.0] },
                              "nm": "Transform",
                              "sk": { "a": 0, "k": 0.0 },
                              "sa": { "a": 0, "k": 0.0 }
                            }
                          ]
                        },
                        {
                          "ty": "gr",
                          "nm": "Group 4",
                          "bm": 0,
                          "mn": "ADBE Vector Group",
                          "it": [
                            {
                              "ty": "sh",
                              "nm": "Path 1",
                              "mn": "ADBE Vector Shape - Group",
                              "ind": 0,
                              "ks": {
                                "k": {
                                  "i": [
                                    [-0.498, -6.728],
                                    [6.728, -0.498],
                                    [0.498, 6.728],
                                    [-6.728, 0.498]
                                  ],
                                  "o": [
                                    [0.498, 6.728],
                                    [-6.728, 0.498],
                                    [-0.498, -6.728],
                                    [6.728, -0.498]
                                  ],
                                  "v": [
                                    [-54.145, -25.075],
                                    [-65.425, -11.991],
                                    [-78.509, -23.272],
                                    [-67.228, -36.356]
                                  ],
                                  "c": true
                                },
                                "a": 0
                              }
                            },
                            {
                              "ty": "st",
                              "nm": "Stroke 1",
                              "bm": 0,
                              "mn": "ADBE Vector Graphic - Stroke",
                              "lc": 2,
                              "lj": 2,
                              "o": { "a": 0, "k": 100.0 },
                              "w": { "a": 0, "k": 0.684 },
                              "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] }
                            },
                            {
                              "ty": "fl",
                              "nm": "Fill 1",
                              "bm": 0,
                              "mn": "ADBE Vector Graphic - Fill",
                              "c": { "a": 0, "k": [1.0, 1.0, 1.0, 1.0] },
                              "o": { "a": 0, "k": 100.0 },
                              "r": 1
                            },
                            {
                              "ty": "tr",
                              "o": { "a": 0, "k": 100.0 },
                              "r": { "a": 0, "k": 0.0 },
                              "p": { "a": 0, "k": [0.0, 0.0] },
                              "a": { "a": 0, "k": [0.0, 0.0] },
                              "s": { "a": 0, "k": [100.0, 100.0] },
                              "nm": "Transform",
                              "sk": { "a": 0, "k": 0.0 },
                              "sa": { "a": 0, "k": 0.0 }
                            }
                          ]
                        },
                        {
                          "ty": "gr",
                          "nm": "Group 5",
                          "bm": 0,
                          "mn": "ADBE Vector Group",
                          "it": [
                            {
                              "ty": "sh",
                              "nm": "Path 1",
                              "mn": "ADBE Vector Shape - Group",
                              "ind": 0,
                              "ks": {
                                "k": {
                                  "i": [
                                    [-1.734, -0.999],
                                    [-3.414, -3.872],
                                    [0.98, -4.945],
                                    [2.797, -2.403],
                                    [1.81, 1.06],
                                    [1.268, 1.633],
                                    [0.149, 0.931],
                                    [-0.722, 0.606],
                                    [-0.049, 1.57],
                                    [0.89, 0.969],
                                    [2.899, 2.569],
                                    [2.639, 2.366],
                                    [0.224, 1.557],
                                    [-1.954, 0.815],
                                    [-2.968, -1.694]
                                  ],
                                  "o": [
                                    [4.35, 2.504],
                                    [3.334, 3.781],
                                    [-0.731, 3.687],
                                    [-1.439, 1.237],
                                    [-1.801, -1.054],
                                    [-0.578, -0.745],
                                    [-0.149, -0.931],
                                    [1.203, -1.01],
                                    [0.041, -1.315],
                                    [-2.656, -2.892],
                                    [-2.615, -2.317],
                                    [-1.171, -1.05],
                                    [-0.302, -2.095],
                                    [3.515, -1.467],
                                    [1.762, 1.005]
                                  ],
                                  "v": [
                                    [-62.182, -58.404],
                                    [-50.262, -49.344],
                                    [-45.737, -35.47],
                                    [-51.641, -26.306],
                                    [-55.981, -25.028],
                                    [-60.667, -29.454],
                                    [-61.936, -31.948],
                                    [-61.131, -34.251],
                                    [-58.576, -38.036],
                                    [-60.294, -41.476],
                                    [-69.195, -48.806],
                                    [-77.79, -54.59],
                                    [-80.294, -58.473],
                                    [-77.147, -63.463],
                                    [-67.443, -61.377]
                                  ],
                                  "c": true
                                },
                                "a": 0
                              }
                            },
                            {
                              "ty": "fl",
                              "nm": "Fill 1",
                              "bm": 0,
                              "mn": "ADBE Vector Graphic - Fill",
                              "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] },
                              "o": { "a": 0, "k": 100.0 },
                              "r": 1
                            },
                            {
                              "ty": "tr",
                              "o": { "a": 0, "k": 100.0 },
                              "r": { "a": 0, "k": 0.0 },
                              "p": { "a": 0, "k": [0.0, 0.0] },
                              "a": { "a": 0, "k": [0.0, 0.0] },
                              "s": { "a": 0, "k": [100.0, 100.0] },
                              "nm": "Transform",
                              "sk": { "a": 0, "k": 0.0 },
                              "sa": { "a": 0, "k": 0.0 }
                            }
                          ]
                        },
                        {
                          "ty": "tr",
                          "o": { "a": 0, "k": 100.0 },
                          "r": { "a": 0, "k": 0.0 },
                          "p": { "a": 0, "k": [0.0, 0.0] },
                          "a": { "a": 0, "k": [0.0, 0.0] },
                          "s": { "a": 0, "k": [100.0, 100.0] },
                          "nm": "Transform",
                          "sk": { "a": 0, "k": 0.0 },
                          "sa": { "a": 0, "k": 0.0 }
                        }
                      ]
                    },
                    {
                      "ty": "tr",
                      "o": { "a": 0, "k": 100.0 },
                      "r": { "a": 0, "k": 0.0 },
                      "p": { "a": 0, "k": [0.0, 0.0] },
                      "a": { "a": 0, "k": [0.0, 0.0] },
                      "s": { "a": 0, "k": [100.0, 100.0] },
                      "nm": "Transform",
                      "sk": { "a": 0, "k": 0.0 },
                      "sa": { "a": 0, "k": 0.0 }
                    }
                  ]
                },
                {
                  "ty": "gr",
                  "nm": "Group 2",
                  "bm": 0,
                  "mn": "ADBE Vector Group",
                  "it": [
                    {
                      "ty": "gr",
                      "nm": "Group 1",
                      "bm": 0,
                      "mn": "ADBE Vector Group",
                      "it": [
                        {
                          "ty": "gr",
                          "nm": "Group 1",
                          "bm": 0,
                          "mn": "ADBE Vector Group",
                          "it": [
                            {
                              "ty": "sh",
                              "nm": "Path 1",
                              "mn": "ADBE Vector Shape - Group",
                              "ind": 0,
                              "ks": {
                                "k": {
                                  "i": [
                                    [0.032, 0.087],
                                    [-0.003, 0.089],
                                    [-0.035, 0.078],
                                    [-0.064, 0.063],
                                    [-0.085, 0.031],
                                    [-0.089, -0.007],
                                    [-0.077, -0.037],
                                    [-0.06, -0.067],
                                    [-0.031, -0.087],
                                    [0.003, -0.089],
                                    [0.035, -0.078],
                                    [0.064, -0.062],
                                    [0.09, -0.033],
                                    [0.089, 0.007],
                                    [0.077, 0.037],
                                    [0.06, 0.067]
                                  ],
                                  "o": [
                                    [-0.031, -0.087],
                                    [0.003, -0.09],
                                    [0.035, -0.077],
                                    [0.064, -0.063],
                                    [0.09, -0.033],
                                    [0.089, 0.007],
                                    [0.077, 0.037],
                                    [0.06, 0.065],
                                    [0.032, 0.087],
                                    [-0.003, 0.091],
                                    [-0.035, 0.077],
                                    [-0.064, 0.062],
                                    [-0.085, 0.031],
                                    [-0.089, -0.006],
                                    [-0.077, -0.037],
                                    [-0.06, -0.066]
                                  ],
                                  "v": [
                                    [-92.972, -2.238],
                                    [-93.014, -2.502],
                                    [-92.957, -2.754],
                                    [-92.807, -2.963],
                                    [-92.583, -3.104],
                                    [-92.314, -3.142],
                                    [-92.064, -3.078],
                                    [-91.859, -2.921],
                                    [-91.721, -2.692],
                                    [-91.678, -2.427],
                                    [-91.736, -2.176],
                                    [-91.886, -1.966],
                                    [-92.118, -1.824],
                                    [-92.379, -1.787],
                                    [-92.629, -1.852],
                                    [-92.835, -2.007]
                                  ],
                                  "c": true
                                },
                                "a": 0
                              }
                            },
                            {
                              "ty": "sh",
                              "nm": "Path 2",
                              "mn": "ADBE Vector Shape - Group",
                              "ind": 1,
                              "ks": {
                                "k": {
                                  "i": [
                                    [0.0, 0.0],
                                    [0.031, -0.055],
                                    [0.058, -0.021],
                                    [0.0, 0.0],
                                    [0.053, 0.028],
                                    [0.03, 0.083],
                                    [0.0, 0.0],
                                    [-0.055, 0.261],
                                    [-0.115, 0.246],
                                    [-0.14, 0.204],
                                    [-0.084, 0.118],
                                    [-0.118, 0.207],
                                    [-0.058, 0.218],
                                    [0.013, 0.239],
                                    [0.102, 0.28],
                                    [0.235, 0.205],
                                    [0.297, 0.093],
                                    [0.329, -0.013],
                                    [0.306, -0.111],
                                    [0.259, -0.242],
                                    [0.147, -0.304],
                                    [0.021, -0.348],
                                    [-0.125, -0.344],
                                    [0.01, -0.042],
                                    [0.076, -0.027],
                                    [0.0, 0.0],
                                    [0.043, 0.025],
                                    [0.022, 0.06],
                                    [-0.027, 0.464],
                                    [-0.193, 0.397],
                                    [-0.344, 0.309],
                                    [-0.46, 0.167],
                                    [-0.452, -0.015],
                                    [-0.383, -0.16],
                                    [-0.286, -0.288],
                                    [-0.135, -0.371],
                                    [-0.033, -0.282],
                                    [0.049, -0.257],
                                    [0.126, -0.244],
                                    [0.197, -0.259],
                                    [0.128, -0.186],
                                    [0.09, -0.202],
                                    [0.031, -0.208],
                                    [-0.075, -0.206]
                                  ],
                                  "o": [
                                    [0.031, 0.087],
                                    [-0.031, 0.055],
                                    [0.0, 0.0],
                                    [-0.05, 0.018],
                                    [-0.053, -0.027],
                                    [0.0, 0.0],
                                    [-0.085, -0.234],
                                    [0.055, -0.262],
                                    [0.114, -0.247],
                                    [0.14, -0.204],
                                    [0.159, -0.208],
                                    [0.119, -0.206],
                                    [0.058, -0.219],
                                    [-0.013, -0.24],
                                    [-0.118, -0.326],
                                    [-0.235, -0.206],
                                    [-0.296, -0.092],
                                    [-0.329, 0.013],
                                    [-0.352, 0.128],
                                    [-0.259, 0.241],
                                    [-0.147, 0.306],
                                    [-0.021, 0.348],
                                    [0.025, 0.069],
                                    [-0.01, 0.043],
                                    [0.0, 0.0],
                                    [-0.05, 0.018],
                                    [-0.043, -0.027],
                                    [-0.173, -0.477],
                                    [0.028, -0.464],
                                    [0.192, -0.397],
                                    [0.344, -0.309],
                                    [0.464, -0.168],
                                    [0.452, 0.015],
                                    [0.382, 0.16],
                                    [0.286, 0.288],
                                    [0.122, 0.335],
                                    [0.033, 0.281],
                                    [-0.05, 0.257],
                                    [-0.126, 0.243],
                                    [-0.123, 0.153],
                                    [-0.129, 0.187],
                                    [-0.09, 0.201],
                                    [-0.031, 0.209],
                                    [0.0, 0.0]
                                  ],
                                  "v": [
                                    [-92.577, -4.437],
                                    [-92.576, -4.223],
                                    [-92.71, -4.108],
                                    [-93.13, -3.956],
                                    [-93.284, -3.971],
                                    [-93.409, -4.135],
                                    [-93.935, -5.58],
                                    [-93.979, -6.323],
                                    [-93.724, -7.085],
                                    [-93.343, -7.762],
                                    [-93.006, -8.246],
                                    [-92.59, -8.869],
                                    [-92.324, -9.506],
                                    [-92.256, -10.193],
                                    [-92.428, -10.972],
                                    [-92.958, -11.768],
                                    [-93.756, -12.215],
                                    [-94.694, -12.334],
                                    [-95.648, -12.147],
                                    [-96.564, -11.592],
                                    [-97.172, -10.773],
                                    [-97.425, -9.792],
                                    [-97.269, -8.755],
                                    [-97.247, -8.588],
                                    [-97.377, -8.482],
                                    [-97.816, -8.323],
                                    [-97.955, -8.334],
                                    [-98.052, -8.464],
                                    [-98.27, -9.875],
                                    [-97.939, -11.167],
                                    [-97.135, -12.227],
                                    [-95.929, -12.941],
                                    [-94.555, -13.171],
                                    [-93.304, -12.908],
                                    [-92.302, -12.237],
                                    [-91.671, -11.247],
                                    [-91.438, -10.322],
                                    [-91.462, -9.515],
                                    [-91.725, -8.765],
                                    [-92.209, -8.013],
                                    [-92.586, -7.503],
                                    [-92.914, -6.92],
                                    [-93.096, -6.305],
                                    [-93.03, -5.683]
                                  ],
                                  "c": true
                                },
                                "a": 0
                              }
                            },
                            {
                              "ty": "fl",
                              "nm": "Fill 1",
                              "bm": 0,
                              "mn": "ADBE Vector Graphic - Fill",
                              "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] },
                              "o": { "a": 0, "k": 100.0 },
                              "r": 1
                            },
                            {
                              "ty": "tr",
                              "o": { "a": 0, "k": 100.0 },
                              "r": { "a": 0, "k": 0.0 },
                              "p": {
                                "k": [
                                  {
                                    "i": { "x": 0.667, "y": 1.0 },
                                    "o": { "x": 0.333, "y": 0.0 },
                                    "t": 49.521,
                                    "s": [0, 0],
                                    "ti": [0, 0],
                                    "to": [-1.037, -2.814]
                                  },
                                  {
                                    "i": { "x": 0.667, "y": 1.0 },
                                    "o": { "x": 0.333, "y": 0.0 },
                                    "t": 54.087,
                                    "s": [-6.222, -16.885],
                                    "ti": [-1.037, -2.814],
                                    "to": [0, 0]
                                  },
                                  { "t": 58, "s": [0, 0] }
                                ],
                                "x": "var $bm_rt;\nvar fx = effect('\u015dlosilo pli pura 3');\nvar doAnticipation = fx(1).value;\nvar doInterpolation = fx(2).value;\nvar doFollowThrough = fx(3).value;\nvar damping = $bm_div(fx(15).value, 10);\nvar elasticity = $bm_div(fx(13).value, 10);\nvar bounce = fx(17).value;\nvar anticipationDuration = fx(5).value;\nvar anticipationQuantity = $bm_div(fx(6).value, 100);\nvar slowIn = $bm_div(fx(9).value, 100);\nvar slowOut = $bm_div(fx(10).value, 100);\nvar spatialMode = fx(21).value;\nvar spatialDoInterpolation = fx(20).value;\nvar moBlurPrecision = fx(32).value;\nvar elasticityRandom = fx(14).value;\nvar dampingRandom = fx(16).value;\nvar softBody = fx(28).value;\nvar flexibility = $bm_div(fx(29).value, 100);\nvar doOverlap = fx(23).value;\nvar overlapDuration = fx(24).value;\nvar overlapRandom = fx(25).value;\nvar threshold = $bm_div($bm_div(1, moBlurPrecision), 1000);\nvar zeroValue;\nif ($bm_isInstanceOfArray(value)) {\n    if (value.length == 2)\n        zeroValue = [\n            0,\n            0\n        ];\n    else if (value.length == 3)\n        zeroValue = [\n            0,\n            0,\n            0\n        ];\n    else if (value.length == 4)\n        zeroValue = [\n            0,\n            0,\n            0,\n            0\n        ];\n} else\n    zeroValue = 0;\nvar isThisSpatial = isSpatial(thisProperty);\nvar isThisPosition = thisProperty === $bm_transform.position;\nvar simulate = false;\nif (isThisSpatial) {\n    doInterpolation = doInterpolation && spatialDoInterpolation;\n    if (isThisPosition && thisProperty.numKeys > 0) {\n        doOverlap = false;\n        simulate = false;\n    } else {\n        simulate = spatialMode == 2;\n        doOverlap = overlapDuration != 0 && doOverlap && simulate;\n    }\n} else {\n    doOverlap = false;\n}\nif (!doOverlap) {\n    overlapDuration = 0;\n}\nif (simulate && softBody && isThisSpatial && !isThisPosition && (doFollowThrough || doOverlap)) {\n    var distanceRatio = $bm_div(length(valueAtTime(0), $bm_transform.anchorPoint), $bm_div(thisLayer.width, 2));\n    distanceRatio = $bm_div($bm_sum(1, $bm_mul(distanceRatio, flexibility)), 2);\n    if (doFollowThrough) {\n        elasticity = $bm_div(elasticity, distanceRatio);\n        damping = $bm_div(damping, distanceRatio);\n    }\n    if (doOverlap) {\n        overlapDuration = $bm_mul(overlapDuration, distanceRatio);\n    }\n}\nseedRandom(0, true);\nif (doFollowThrough) {\n    if (elasticityRandom > 0)\n        elasticity = addNoise(elasticity, elasticityRandom);\n    if (dampingRandom > 0)\n        damping = addNoise(damping, dampingRandom);\n}\nif (doOverlap) {\n    if (doOverlap && overlapRandom > 0)\n        overlapDuration = addNoise(overlapDuration, overlapRandom);\n}\nvar result = value;\nfunction isSpatial(prop) {\n    if (!(prop.value instanceof Array))\n        return false;\n    if (prop.value.length != 2 && prop.value.length != 3)\n        return false;\n    try {\n        if (typeof prop.speed !== 'undefined')\n            return true;\n    } catch (e) {\n        return false;\n    }\n}\nfunction addNoise(val, quantity) {\n    var randomValue = random(0.9, 1.1);\n    var noiseValue = noise($bm_mul(valueAtTime(0), randomValue));\n    noiseValue = $bm_mul(noiseValue, $bm_div(quantity, 100));\n    return $bm_mul(val, $bm_sum(noiseValue, 1));\n}\nfunction isAfterLastKey() {\n    if (numKeys == 0)\n        return false;\n    var nKey = nearestKey(time);\n    return nKey.time <= time && nKey.index == numKeys;\n}\nfunction isStill(t, threshold) {\n    var d = $bm_sub(valueAtTime(t), valueAtTime($bm_sum(t, framesToTime(1))));\n    if ($bm_isInstanceOfArray(d)) {\n        for (var i = 0; i < d.length; i++) {\n            d[i] = Math.abs(d[i]);\n            if (d[i] >= threshold) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        d = Math.abs(d);\n        return d < threshold;\n    }\n}\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\n    if (arguments.length !== 5 && arguments.length !== 6)\n        return t;\n    var a = $bm_sub(value2, value1);\n    var b = $bm_sub(tMax, tMin);\n    if (b == 0)\n        return t;\n    var c = clamp($bm_div($bm_sub(t, tMin), b), 0, 1);\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4)\n        bezierPoints = [\n            0.33,\n            0,\n            0.66,\n            1\n        ];\n    return $bm_sum($bm_mul(a, h(c, bezierPoints)), value1);\n    function h(f, g) {\n        var x = $bm_mul(3, g[0]);\n        var j = $bm_sub($bm_mul(3, $bm_sub(g[2], g[0])), x);\n        var k = $bm_sub($bm_sub(1, x), j);\n        var l = $bm_mul(3, g[1]);\n        var m = $bm_sub($bm_mul(3, $bm_sub(g[3], g[1])), l);\n        var n = $bm_sub($bm_sub(1, l), m);\n        var d = f;\n        for (var i = 0; i < 5; i++) {\n            var z = $bm_sub($bm_mul(d, $bm_sum(x, $bm_mul(d, $bm_sum(j, $bm_mul(d, k))))), f);\n            if (Math.abs(z) < 0.001)\n                break;\n            d = $bm_sub(d, $bm_div(z, $bm_sum(x, $bm_mul(d, $bm_sum($bm_mul(2, j), $bm_mul($bm_mul(3, k), d))))));\n        }\n        return $bm_mul(d, $bm_sum(l, $bm_mul(d, $bm_sum(m, $bm_mul(d, n)))));\n    }\n}\nfunction getPropWorldSpeed(t, prop) {\n    return length(getPropWorldVelocity(t, prop));\n}\nfunction getPrevKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time <= t)\n        return nKey;\n    if (nKey.index > 1)\n        return key($bm_sub(nKey.index, 1));\n    return null;\n}\nfunction getNextKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time >= t)\n        return nKey;\n    if (nKey.index < numKeys)\n        return key($bm_sum(nKey.index, 1));\n    return null;\n}\nfunction getPropWorldVelocity(t, prop) {\n    return $bm_mul($bm_sub(getPropWorldValue($bm_sum(t, 0.005), prop), getPropWorldValue($bm_sub(t, 0.005), prop)), 100);\n}\nfunction getLayerWorldPos(t, l) {\n    return l.toWorld(l.anchorPoint, t);\n}\nfunction getPropWorldValue(t, prop) {\n    if (isPosition(prop))\n        return getLayerWorldPos(t, thisLayer);\n    return thisLayer.toWorld(prop.valueAtTime(t), t);\n}\nfunction isPosition(prop) {\n    return prop === $bm_transform.position;\n}\nfunction isKeyTop(k, axis) {\n    var prevSpeed = velocityAtTime($bm_sub(k.time, threshold));\n    var nextSpeed = velocityAtTime($bm_sum(k.time, threshold));\n    if ($bm_isInstanceOfArray(value)) {\n        prevSpeed = prevSpeed[axis];\n        nextSpeed = nextSpeed[axis];\n    }\n    if (Math.abs(prevSpeed) < 0.01 || Math.abs(nextSpeed) < 0.01)\n        return true;\n    return $bm_mul(prevSpeed, nextSpeed) < 0;\n}\nfunction anticipate() {\n    var anticipation = zeroValue;\n    if (isAfterLastKey())\n        return anticipation;\n    if (numKeys < 2)\n        return anticipation;\n    var nextKey = getNextKey(time);\n    var aKey = nextKey;\n    if (!isStill(aKey.time - 0.1, 0.1)) {\n        aKey = getPrevKey(time);\n        if (!isStill(aKey.time - 0.1, 0.1))\n            return anticipation;\n    }\n    if (aKey.index == numKeys)\n        return anticipation;\n    var anticipationMiddle = aKey.time;\n    var anticipationStart = $bm_sub(anticipationMiddle, anticipationDuration);\n    var anticipationEnd = key(aKey.index + 1).time;\n    var startValue = anticipation;\n    var midValue = $bm_mul($bm_sum($bm_neg(valueAtTime($bm_sum(anticipationMiddle, anticipationDuration))), aKey.value), anticipationQuantity);\n    var endValue = anticipation;\n    if (time < anticipationStart) {\n        return anticipation;\n    } else if (time < anticipationMiddle) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue[i], midValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue, midValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else if (time <= anticipationEnd) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue[i], endValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue, endValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else {\n        return anticipation;\n    }\n}\nfunction followThroughAtTime(t) {\n    var fThrough = zeroValue;\n    if (elasticity == 0)\n        return fThrough;\n    var propSpeed;\n    if (!simulate) {\n        if (numKeys < 2)\n            return fThrough;\n        if (nearestKey(t).index == 1)\n            return fThrough;\n        propSpeed = length(velocityAtTime(t));\n        if (propSpeed >= threshold)\n            return fThrough;\n    } else {\n        propSpeed = getPropWorldSpeed(t, thisProperty);\n        if (propSpeed >= threshold)\n            return fThrough;\n    }\n    var fThroughStart = 0;\n    var fThroughTime = 0;\n    if (simulate) {\n        var speedI = getPropWorldSpeed(t, thisProperty);\n        var i = t;\n        while (speedI < threshold && i > 0) {\n            i = $bm_sub(i, $bm_div(thisComp.frameDuration, moBlurPrecision));\n            speedI = getPropWorldSpeed(i, thisProperty);\n        }\n        fThroughStart = i;\n    } else {\n        var fThroughKey = getPrevKey(t);\n        fThroughStart = fThroughKey.time;\n    }\n    if (fThroughStart == 0)\n        return fThrough;\n    fThroughTime = $bm_sub(t, fThroughStart);\n    if (simulate)\n        fThrough = $bm_div(getPropWorldVelocity($bm_sub(fThroughStart, thisComp.frameDuration), thisProperty), 2);\n    else\n        fThrough = $bm_div(velocityAtTime($bm_sub(fThroughStart, thisComp.frameDuration)), 2);\n    if (bounce) {\n        var cycleDamp = Math.exp($bm_mul($bm_mul(fThroughTime, damping), 0.1));\n        var damp = $bm_div(Math.exp($bm_mul(fThroughTime, damping)), $bm_div(elasticity, 2));\n        var cycleDuration = $bm_div(1, $bm_mul(elasticity, 2));\n        cycleDuration = Math.round(timeToFrames(cycleDuration));\n        cycleDuration = framesToTime(cycleDuration);\n        var midDuration = $bm_div(cycleDuration, 2);\n        var maxValue = $bm_mul(fThrough, midDuration);\n        var cycvarime = fThroughTime;\n        var numEndCycles = 1;\n        while (cycvarime > cycleDuration) {\n            cycvarime = $bm_sub(cycvarime, cycleDuration);\n            cycleDuration = $bm_div(cycleDuration, cycleDamp);\n            cycleDuration = Math.round(timeToFrames(cycleDuration));\n            if (cycleDuration < 2) {\n                cycleDuration = 2;\n                numEndCycles++;\n            }\n            cycleDuration = framesToTime(cycleDuration);\n            midDuration = $bm_div(cycleDuration, 2);\n            maxValue = $bm_div($bm_mul(fThrough, midDuration), damp);\n            if (numEndCycles > 100 / damping && maxValue < threshold)\n                return zeroValue;\n        }\n        if (cycvarime < midDuration)\n            fThrough = bezierInterpolation(cycvarime, 0, midDuration, 0, maxValue, [\n                0,\n                0.1,\n                slowIn,\n                1\n            ]);\n        else\n            fThrough = bezierInterpolation(cycvarime, midDuration, cycleDuration, maxValue, 0, [\n                $bm_sub(1, slowIn),\n                0,\n                1,\n                0.9\n            ]);\n    } else {\n        var damp = Math.exp($bm_mul(fThroughTime, damping));\n        var sinus = $bm_mul($bm_mul($bm_mul(elasticity, fThroughTime), 2), Math.PI);\n        sinus = Math.sin(sinus);\n        sinus = $bm_mul($bm_div(0.3, elasticity), sinus);\n        sinus = $bm_div(sinus, damp);\n        if (Math.abs(sinus) < $bm_div(threshold, 100))\n            return 0;\n        fThrough = $bm_mul(fThrough, sinus);\n        if (threshold > 0) {\n            fThrough = $bm_mul(fThrough, $bm_sub(1, $bm_div(propSpeed, threshold)));\n        }\n    }\n    if (bounce) {\n        var prevValue = valueAtTime($bm_sub(fThroughStart, thisComp.frameDuration));\n        var startValue = valueAtTime(fThroughStart);\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < prevValue.length; i++) {\n                if (prevValue[i] > startValue[i])\n                    fThrough[i] = Math.abs(fThrough[i]);\n                if (prevValue[i] < startValue[i])\n                    fThrough[i] = $bm_neg(Math.abs(fThrough[i]));\n            }\n        } else {\n            if (prevValue > startValue)\n                fThrough = Math.abs(fThrough);\n            if (prevValue < startValue)\n                fThrough = $bm_neg(Math.abs(fThrough));\n        }\n    }\n    if (simulate) {\n        if (!isThisPosition) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer));\n            fThrough = $bm_sub(thisLayer.fromWorld(fThrough), thisLayer.anchorPoint);\n        } else if (thisLayer.hasParent) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer.parent));\n            fThrough = $bm_sub(thisLayer.parent.fromWorld(fThrough), thisLayer.parent.anchorPoint);\n        }\n    }\n    return fThrough;\n}\nfunction followThrough() {\n    var propSpeed = length(velocity);\n    if (propSpeed < threshold)\n        return followThroughAtTime($bm_sub(time, overlapDuration));\n    var fThrough = zeroValue;\n    var t = time;\n    while (t > 0) {\n        t = $bm_sub(t, thisComp.frameDuration);\n        if (simulate)\n            propSpeed = getPropWorldSpeed($bm_sub(t, overlapDuration), thisProperty);\n        else\n            propSpeed = length(velocityAtTime(t));\n        if (propSpeed < threshold) {\n            fThrough = followThroughAtTime($bm_sub(t, overlapDuration));\n            break;\n        }\n    }\n    return linear(time, t, $bm_sum(t, $bm_mul(anticipationDuration, 2)), fThrough, zeroValue);\n}\nfunction smartSmooth(axis) {\n    var startKey = nearestKey(time);\n    var endKey = startKey;\n    if (time == startKey.time)\n        return 0;\n    if (time < startKey.time && startKey.index == 1)\n        return 0;\n    if (time > startKey.time && startKey.index == numKeys)\n        return 0;\n    if (time < startKey.time)\n        startKey = key($bm_sub(startKey.index, 1));\n    if (time > startKey.time)\n        endKey = key($bm_sum(startKey.index, 1));\n    var sI = 0.66;\n    var sO = 0.33;\n    var sIV = 1;\n    var sOV = 0;\n    var sVal = startKey.value;\n    var eVal = endKey.value;\n    if ($bm_isInstanceOfArray(value)) {\n        sVal = sVal[axis];\n        eVal = eVal[axis];\n    }\n    var sTime = startKey.time;\n    var eTime = endKey.time;\n    if (isKeyTop(startKey, axis))\n        sO = slowOut;\n    else {\n        var prevKey = key($bm_sub(startKey.index, 1));\n        var pVal = prevKey.value;\n        if ($bm_isInstanceOfArray(value))\n            pVal = pVal[axis];\n        sOV = $bm_div($bm_sub(sVal, pVal), $bm_sub(eVal, pVal));\n    }\n    if (isKeyTop(endKey, axis)) {\n        sI = slowIn;\n        if (endKey.index != numKeys) {\n            var nextKey = key($bm_sum(endKey.index, 1));\n            var nVal = nextKey.value;\n            if ($bm_isInstanceOfArray(value))\n                nVal = nVal[axis];\n            if (Math.abs(nVal - eVal) < 0.01 && doFollowThrough)\n                sI = 1;\n        }\n    } else {\n        var nextKey = key($bm_sum(endKey.index, 1));\n        var nVal = nextKey.value;\n        if ($bm_isInstanceOfArray(value))\n            nVal = nVal[axis];\n        sIV = $bm_div($bm_sub(eVal, sVal), $bm_sub(nVal, sVal));\n    }\n    if (endKey.index == numKeys && doFollowThrough) {\n        sI = 1;\n    }\n    var val = value;\n    if ($bm_isInstanceOfArray(value))\n        val = val[axis];\n    return $bm_sub(bezierInterpolation(time, sTime, eTime, sVal, eVal, [\n        sO,\n        sOV,\n        sI,\n        sIV\n    ]), val);\n}\nfunction overlap() {\n    var ol = zeroValue;\n    if (isThisPosition && !hasParent)\n        return zeroValue;\n    ol = $bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisProperty), getPropWorldValue(time, thisProperty));\n    var motionRatio = $bm_div($bm_div(length(zeroValue, ol), thisLayer.width), 2);\n    if (isThisPosition) {\n        var originalDistance = length(valueAtTime(0));\n        motionRatio = $bm_div(length(zeroValue, ol), thisComp.width);\n    }\n    ol = $bm_sum(ol, getPropWorldValue(time, thisProperty));\n    ol = $bm_sum(ol, $bm_mul($bm_mul($bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisLayer.anchorPoint), ol), motionRatio), flexibility));\n    ol = thisLayer.fromWorld(ol);\n    if (!isThisPosition)\n        ol = $bm_sub(ol, value);\n    else {\n        ol = linear(flexibility, 0, 100, $bm_div(ol, 2), 0);\n        var prevParentWorldPos = getLayerWorldPos($bm_sub(time, overlapDuration), parent);\n        ol = $bm_sum(ol, $bm_mul($bm_mul($bm_mul(thisLayer.fromWorld(prevParentWorldPos), motionRatio), flexibility), 5));\n    }\n    return ol;\n}\nvar okToGo = false;\nif (simulate && fx.enabled)\n    okToGo = true;\nelse if (numKeys > 1 && fx.enabled)\n    okToGo = true;\nif (okToGo) {\n    var smartSmoothResult = zeroValue;\n    if (doInterpolation) {\n        if ($bm_isInstanceOfArray(value)) {\n            if (value.length == 2)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1)\n                ];\n            else if (value.length == 3)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2)\n                ];\n            else if (value.length == 4)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2),\n                    smartSmooth(3)\n                ];\n        } else {\n            smartSmoothResult = smartSmooth(0);\n        }\n    }\n    if (doAnticipation)\n        result = $bm_sum(result, anticipate());\n    result = $bm_sum(result, smartSmoothResult);\n    if (doFollowThrough)\n        result = $bm_sum(result, followThrough());\n    if (doOverlap)\n        result = $bm_sum(result, overlap());\n}\n$bm_rt = result;",
                                "a": 1
                              },
                              "a": { "a": 0, "k": [0.0, 0.0] },
                              "s": { "a": 0, "k": [100.0, 100.0] },
                              "nm": "Transform",
                              "sk": { "a": 0, "k": 0.0 },
                              "sa": { "a": 0, "k": 0.0 }
                            }
                          ]
                        },
                        {
                          "ty": "gr",
                          "nm": "Group 2",
                          "bm": 0,
                          "mn": "ADBE Vector Group",
                          "it": [
                            {
                              "ty": "sh",
                              "nm": "Path 1",
                              "mn": "ADBE Vector Shape - Group",
                              "ind": 0,
                              "ks": {
                                "k": {
                                  "i": [
                                    [-0.137, -0.376],
                                    [-0.252, -0.286],
                                    [-0.316, -0.168],
                                    [-0.35, -0.037],
                                    [-0.334, 0.121],
                                    [-0.245, 0.253],
                                    [-0.132, 0.33],
                                    [-0.007, 0.382],
                                    [0.137, 0.375],
                                    [0.25, 0.288],
                                    [0.314, 0.17],
                                    [0.35, 0.037],
                                    [0.334, -0.121],
                                    [0.245, -0.252],
                                    [0.134, -0.331],
                                    [0.009, -0.383]
                                  ],
                                  "o": [
                                    [0.137, 0.376],
                                    [0.253, 0.288],
                                    [0.316, 0.168],
                                    [0.35, 0.037],
                                    [0.333, -0.121],
                                    [0.245, -0.252],
                                    [0.132, -0.331],
                                    [0.007, -0.381],
                                    [-0.137, -0.377],
                                    [-0.25, -0.288],
                                    [-0.314, -0.169],
                                    [-0.35, -0.036],
                                    [-0.334, 0.121],
                                    [-0.245, 0.252],
                                    [-0.135, 0.332],
                                    [-0.009, 0.383]
                                  ],
                                  "v": [
                                    [-103.146, -1.871],
                                    [-102.562, -0.876],
                                    [-101.709, -0.192],
                                    [-100.71, 0.115],
                                    [-99.684, -0.011],
                                    [-98.817, -0.572],
                                    [-98.251, -1.447],
                                    [-98.043, -2.516],
                                    [-98.238, -3.652],
                                    [-98.819, -4.648],
                                    [-99.665, -5.335],
                                    [-100.66, -5.643],
                                    [-101.686, -5.516],
                                    [-102.553, -4.955],
                                    [-103.122, -4.08],
                                    [-103.337, -3.008]
                                  ],
                                  "c": true
                                },
                                "a": 0
                              }
                            },
                            {
                              "ty": "sh",
                              "nm": "Path 2",
                              "mn": "ADBE Vector Shape - Group",
                              "ind": 1,
                              "ks": {
                                "k": {
                                  "i": [
                                    [0.0, 0.0],
                                    [-0.031, 0.049],
                                    [-0.068, 0.025],
                                    [0.0, 0.0],
                                    [-0.049, -0.023],
                                    [-0.021, -0.059],
                                    [0.0, 0.0],
                                    [-0.063, 0.192],
                                    [-0.144, 0.207],
                                    [-0.251, 0.2],
                                    [-0.397, 0.144],
                                    [-0.452, -0.043],
                                    [-0.403, -0.212],
                                    [-0.32, -0.368],
                                    [-0.176, -0.486],
                                    [0.01, -0.487],
                                    [0.173, -0.423],
                                    [0.318, -0.322],
                                    [0.441, -0.161],
                                    [0.289, -0.011],
                                    [0.258, 0.071],
                                    [0.223, 0.137],
                                    [0.184, 0.183],
                                    [0.0, 0.0],
                                    [0.005, -0.049],
                                    [0.085, -0.031],
                                    [0.0, 0.0],
                                    [0.037, 0.031],
                                    [0.023, 0.064]
                                  ],
                                  "o": [
                                    [-0.027, -0.073],
                                    [0.03, -0.049],
                                    [0.0, 0.0],
                                    [0.058, -0.021],
                                    [0.05, 0.024],
                                    [0.0, 0.0],
                                    [0.022, -0.122],
                                    [0.063, -0.191],
                                    [0.144, -0.208],
                                    [0.251, -0.201],
                                    [0.442, -0.16],
                                    [0.452, 0.043],
                                    [0.404, 0.212],
                                    [0.32, 0.369],
                                    [0.177, 0.486],
                                    [-0.009, 0.487],
                                    [-0.172, 0.423],
                                    [-0.319, 0.324],
                                    [-0.311, 0.113],
                                    [-0.289, 0.011],
                                    [-0.258, -0.069],
                                    [-0.223, -0.137],
                                    [0.0, 0.0],
                                    [0.023, 0.065],
                                    [-0.006, 0.048],
                                    [0.0, 0.0],
                                    [-0.063, 0.023],
                                    [-0.037, -0.03],
                                    [0.0, 0.0]
                                  ],
                                  "v": [
                                    [-105.006, -4.692],
                                    [-105.0, -4.877],
                                    [-104.854, -4.989],
                                    [-104.522, -5.11],
                                    [-104.36, -5.106],
                                    [-104.254, -4.981],
                                    [-103.908, -4.094],
                                    [-103.781, -4.565],
                                    [-103.471, -5.164],
                                    [-102.878, -5.776],
                                    [-101.907, -6.293],
                                    [-100.566, -6.467],
                                    [-99.283, -6.084],
                                    [-98.197, -5.213],
                                    [-97.451, -3.93],
                                    [-97.2, -2.471],
                                    [-97.473, -1.106],
                                    [-98.21, 0.014],
                                    [-99.35, 0.74],
                                    [-100.251, 0.927],
                                    [-101.071, 0.838],
                                    [-101.792, 0.527],
                                    [-102.402, 0.048],
                                    [-100.974, 3.977],
                                    [-100.947, 4.147],
                                    [-101.084, 4.266],
                                    [-101.51, 4.421],
                                    [-101.659, 4.409],
                                    [-101.749, 4.266]
                                  ],
                                  "c": true
                                },
                                "a": 0
                              }
                            },
                            {
                              "ty": "fl",
                              "nm": "Fill 1",
                              "bm": 0,
                              "mn": "ADBE Vector Graphic - Fill",
                              "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] },
                              "o": { "a": 0, "k": 100.0 },
                              "r": 1
                            },
                            {
                              "ty": "tr",
                              "o": { "a": 0, "k": 100.0 },
                              "r": { "a": 0, "k": 0.0 },
                              "p": {
                                "k": [
                                  {
                                    "i": { "x": 0.667, "y": 1.0 },
                                    "o": { "x": 0.333, "y": 0.0 },
                                    "t": 44.956,
                                    "s": [0, 0],
                                    "ti": [0, 0],
                                    "to": [-1.037, -2.814]
                                  },
                                  {
                                    "i": { "x": 0.667, "y": 1.0 },
                                    "o": { "x": 0.333, "y": 0.0 },
                                    "t": 49.521,
                                    "s": [-6.222, -16.885],
                                    "ti": [-1.037, -2.814],
                                    "to": [0, 0]
                                  },
                                  { "t": 53.435, "s": [0, 0] }
                                ],
                                "x": "var $bm_rt;\nvar fx = effect('\u015dlosilo pli pura 3');\nvar doAnticipation = fx(1).value;\nvar doInterpolation = fx(2).value;\nvar doFollowThrough = fx(3).value;\nvar damping = $bm_div(fx(15).value, 10);\nvar elasticity = $bm_div(fx(13).value, 10);\nvar bounce = fx(17).value;\nvar anticipationDuration = fx(5).value;\nvar anticipationQuantity = $bm_div(fx(6).value, 100);\nvar slowIn = $bm_div(fx(9).value, 100);\nvar slowOut = $bm_div(fx(10).value, 100);\nvar spatialMode = fx(21).value;\nvar spatialDoInterpolation = fx(20).value;\nvar moBlurPrecision = fx(32).value;\nvar elasticityRandom = fx(14).value;\nvar dampingRandom = fx(16).value;\nvar softBody = fx(28).value;\nvar flexibility = $bm_div(fx(29).value, 100);\nvar doOverlap = fx(23).value;\nvar overlapDuration = fx(24).value;\nvar overlapRandom = fx(25).value;\nvar threshold = $bm_div($bm_div(1, moBlurPrecision), 1000);\nvar zeroValue;\nif ($bm_isInstanceOfArray(value)) {\n    if (value.length == 2)\n        zeroValue = [\n            0,\n            0\n        ];\n    else if (value.length == 3)\n        zeroValue = [\n            0,\n            0,\n            0\n        ];\n    else if (value.length == 4)\n        zeroValue = [\n            0,\n            0,\n            0,\n            0\n        ];\n} else\n    zeroValue = 0;\nvar isThisSpatial = isSpatial(thisProperty);\nvar isThisPosition = thisProperty === $bm_transform.position;\nvar simulate = false;\nif (isThisSpatial) {\n    doInterpolation = doInterpolation && spatialDoInterpolation;\n    if (isThisPosition && thisProperty.numKeys > 0) {\n        doOverlap = false;\n        simulate = false;\n    } else {\n        simulate = spatialMode == 2;\n        doOverlap = overlapDuration != 0 && doOverlap && simulate;\n    }\n} else {\n    doOverlap = false;\n}\nif (!doOverlap) {\n    overlapDuration = 0;\n}\nif (simulate && softBody && isThisSpatial && !isThisPosition && (doFollowThrough || doOverlap)) {\n    var distanceRatio = $bm_div(length(valueAtTime(0), $bm_transform.anchorPoint), $bm_div(thisLayer.width, 2));\n    distanceRatio = $bm_div($bm_sum(1, $bm_mul(distanceRatio, flexibility)), 2);\n    if (doFollowThrough) {\n        elasticity = $bm_div(elasticity, distanceRatio);\n        damping = $bm_div(damping, distanceRatio);\n    }\n    if (doOverlap) {\n        overlapDuration = $bm_mul(overlapDuration, distanceRatio);\n    }\n}\nseedRandom(0, true);\nif (doFollowThrough) {\n    if (elasticityRandom > 0)\n        elasticity = addNoise(elasticity, elasticityRandom);\n    if (dampingRandom > 0)\n        damping = addNoise(damping, dampingRandom);\n}\nif (doOverlap) {\n    if (doOverlap && overlapRandom > 0)\n        overlapDuration = addNoise(overlapDuration, overlapRandom);\n}\nvar result = value;\nfunction isSpatial(prop) {\n    if (!(prop.value instanceof Array))\n        return false;\n    if (prop.value.length != 2 && prop.value.length != 3)\n        return false;\n    try {\n        if (typeof prop.speed !== 'undefined')\n            return true;\n    } catch (e) {\n        return false;\n    }\n}\nfunction addNoise(val, quantity) {\n    var randomValue = random(0.9, 1.1);\n    var noiseValue = noise($bm_mul(valueAtTime(0), randomValue));\n    noiseValue = $bm_mul(noiseValue, $bm_div(quantity, 100));\n    return $bm_mul(val, $bm_sum(noiseValue, 1));\n}\nfunction isAfterLastKey() {\n    if (numKeys == 0)\n        return false;\n    var nKey = nearestKey(time);\n    return nKey.time <= time && nKey.index == numKeys;\n}\nfunction isStill(t, threshold) {\n    var d = $bm_sub(valueAtTime(t), valueAtTime($bm_sum(t, framesToTime(1))));\n    if ($bm_isInstanceOfArray(d)) {\n        for (var i = 0; i < d.length; i++) {\n            d[i] = Math.abs(d[i]);\n            if (d[i] >= threshold) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        d = Math.abs(d);\n        return d < threshold;\n    }\n}\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\n    if (arguments.length !== 5 && arguments.length !== 6)\n        return t;\n    var a = $bm_sub(value2, value1);\n    var b = $bm_sub(tMax, tMin);\n    if (b == 0)\n        return t;\n    var c = clamp($bm_div($bm_sub(t, tMin), b), 0, 1);\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4)\n        bezierPoints = [\n            0.33,\n            0,\n            0.66,\n            1\n        ];\n    return $bm_sum($bm_mul(a, h(c, bezierPoints)), value1);\n    function h(f, g) {\n        var x = $bm_mul(3, g[0]);\n        var j = $bm_sub($bm_mul(3, $bm_sub(g[2], g[0])), x);\n        var k = $bm_sub($bm_sub(1, x), j);\n        var l = $bm_mul(3, g[1]);\n        var m = $bm_sub($bm_mul(3, $bm_sub(g[3], g[1])), l);\n        var n = $bm_sub($bm_sub(1, l), m);\n        var d = f;\n        for (var i = 0; i < 5; i++) {\n            var z = $bm_sub($bm_mul(d, $bm_sum(x, $bm_mul(d, $bm_sum(j, $bm_mul(d, k))))), f);\n            if (Math.abs(z) < 0.001)\n                break;\n            d = $bm_sub(d, $bm_div(z, $bm_sum(x, $bm_mul(d, $bm_sum($bm_mul(2, j), $bm_mul($bm_mul(3, k), d))))));\n        }\n        return $bm_mul(d, $bm_sum(l, $bm_mul(d, $bm_sum(m, $bm_mul(d, n)))));\n    }\n}\nfunction getPropWorldSpeed(t, prop) {\n    return length(getPropWorldVelocity(t, prop));\n}\nfunction getPrevKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time <= t)\n        return nKey;\n    if (nKey.index > 1)\n        return key($bm_sub(nKey.index, 1));\n    return null;\n}\nfunction getNextKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time >= t)\n        return nKey;\n    if (nKey.index < numKeys)\n        return key($bm_sum(nKey.index, 1));\n    return null;\n}\nfunction getPropWorldVelocity(t, prop) {\n    return $bm_mul($bm_sub(getPropWorldValue($bm_sum(t, 0.005), prop), getPropWorldValue($bm_sub(t, 0.005), prop)), 100);\n}\nfunction getLayerWorldPos(t, l) {\n    return l.toWorld(l.anchorPoint, t);\n}\nfunction getPropWorldValue(t, prop) {\n    if (isPosition(prop))\n        return getLayerWorldPos(t, thisLayer);\n    return thisLayer.toWorld(prop.valueAtTime(t), t);\n}\nfunction isPosition(prop) {\n    return prop === $bm_transform.position;\n}\nfunction isKeyTop(k, axis) {\n    var prevSpeed = velocityAtTime($bm_sub(k.time, threshold));\n    var nextSpeed = velocityAtTime($bm_sum(k.time, threshold));\n    if ($bm_isInstanceOfArray(value)) {\n        prevSpeed = prevSpeed[axis];\n        nextSpeed = nextSpeed[axis];\n    }\n    if (Math.abs(prevSpeed) < 0.01 || Math.abs(nextSpeed) < 0.01)\n        return true;\n    return $bm_mul(prevSpeed, nextSpeed) < 0;\n}\nfunction anticipate() {\n    var anticipation = zeroValue;\n    if (isAfterLastKey())\n        return anticipation;\n    if (numKeys < 2)\n        return anticipation;\n    var nextKey = getNextKey(time);\n    var aKey = nextKey;\n    if (!isStill(aKey.time - 0.1, 0.1)) {\n        aKey = getPrevKey(time);\n        if (!isStill(aKey.time - 0.1, 0.1))\n            return anticipation;\n    }\n    if (aKey.index == numKeys)\n        return anticipation;\n    var anticipationMiddle = aKey.time;\n    var anticipationStart = $bm_sub(anticipationMiddle, anticipationDuration);\n    var anticipationEnd = key(aKey.index + 1).time;\n    var startValue = anticipation;\n    var midValue = $bm_mul($bm_sum($bm_neg(valueAtTime($bm_sum(anticipationMiddle, anticipationDuration))), aKey.value), anticipationQuantity);\n    var endValue = anticipation;\n    if (time < anticipationStart) {\n        return anticipation;\n    } else if (time < anticipationMiddle) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue[i], midValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue, midValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else if (time <= anticipationEnd) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue[i], endValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue, endValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else {\n        return anticipation;\n    }\n}\nfunction followThroughAtTime(t) {\n    var fThrough = zeroValue;\n    if (elasticity == 0)\n        return fThrough;\n    var propSpeed;\n    if (!simulate) {\n        if (numKeys < 2)\n            return fThrough;\n        if (nearestKey(t).index == 1)\n            return fThrough;\n        propSpeed = length(velocityAtTime(t));\n        if (propSpeed >= threshold)\n            return fThrough;\n    } else {\n        propSpeed = getPropWorldSpeed(t, thisProperty);\n        if (propSpeed >= threshold)\n            return fThrough;\n    }\n    var fThroughStart = 0;\n    var fThroughTime = 0;\n    if (simulate) {\n        var speedI = getPropWorldSpeed(t, thisProperty);\n        var i = t;\n        while (speedI < threshold && i > 0) {\n            i = $bm_sub(i, $bm_div(thisComp.frameDuration, moBlurPrecision));\n            speedI = getPropWorldSpeed(i, thisProperty);\n        }\n        fThroughStart = i;\n    } else {\n        var fThroughKey = getPrevKey(t);\n        fThroughStart = fThroughKey.time;\n    }\n    if (fThroughStart == 0)\n        return fThrough;\n    fThroughTime = $bm_sub(t, fThroughStart);\n    if (simulate)\n        fThrough = $bm_div(getPropWorldVelocity($bm_sub(fThroughStart, thisComp.frameDuration), thisProperty), 2);\n    else\n        fThrough = $bm_div(velocityAtTime($bm_sub(fThroughStart, thisComp.frameDuration)), 2);\n    if (bounce) {\n        var cycleDamp = Math.exp($bm_mul($bm_mul(fThroughTime, damping), 0.1));\n        var damp = $bm_div(Math.exp($bm_mul(fThroughTime, damping)), $bm_div(elasticity, 2));\n        var cycleDuration = $bm_div(1, $bm_mul(elasticity, 2));\n        cycleDuration = Math.round(timeToFrames(cycleDuration));\n        cycleDuration = framesToTime(cycleDuration);\n        var midDuration = $bm_div(cycleDuration, 2);\n        var maxValue = $bm_mul(fThrough, midDuration);\n        var cycvarime = fThroughTime;\n        var numEndCycles = 1;\n        while (cycvarime > cycleDuration) {\n            cycvarime = $bm_sub(cycvarime, cycleDuration);\n            cycleDuration = $bm_div(cycleDuration, cycleDamp);\n            cycleDuration = Math.round(timeToFrames(cycleDuration));\n            if (cycleDuration < 2) {\n                cycleDuration = 2;\n                numEndCycles++;\n            }\n            cycleDuration = framesToTime(cycleDuration);\n            midDuration = $bm_div(cycleDuration, 2);\n            maxValue = $bm_div($bm_mul(fThrough, midDuration), damp);\n            if (numEndCycles > 100 / damping && maxValue < threshold)\n                return zeroValue;\n        }\n        if (cycvarime < midDuration)\n            fThrough = bezierInterpolation(cycvarime, 0, midDuration, 0, maxValue, [\n                0,\n                0.1,\n                slowIn,\n                1\n            ]);\n        else\n            fThrough = bezierInterpolation(cycvarime, midDuration, cycleDuration, maxValue, 0, [\n                $bm_sub(1, slowIn),\n                0,\n                1,\n                0.9\n            ]);\n    } else {\n        var damp = Math.exp($bm_mul(fThroughTime, damping));\n        var sinus = $bm_mul($bm_mul($bm_mul(elasticity, fThroughTime), 2), Math.PI);\n        sinus = Math.sin(sinus);\n        sinus = $bm_mul($bm_div(0.3, elasticity), sinus);\n        sinus = $bm_div(sinus, damp);\n        if (Math.abs(sinus) < $bm_div(threshold, 100))\n            return 0;\n        fThrough = $bm_mul(fThrough, sinus);\n        if (threshold > 0) {\n            fThrough = $bm_mul(fThrough, $bm_sub(1, $bm_div(propSpeed, threshold)));\n        }\n    }\n    if (bounce) {\n        var prevValue = valueAtTime($bm_sub(fThroughStart, thisComp.frameDuration));\n        var startValue = valueAtTime(fThroughStart);\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < prevValue.length; i++) {\n                if (prevValue[i] > startValue[i])\n                    fThrough[i] = Math.abs(fThrough[i]);\n                if (prevValue[i] < startValue[i])\n                    fThrough[i] = $bm_neg(Math.abs(fThrough[i]));\n            }\n        } else {\n            if (prevValue > startValue)\n                fThrough = Math.abs(fThrough);\n            if (prevValue < startValue)\n                fThrough = $bm_neg(Math.abs(fThrough));\n        }\n    }\n    if (simulate) {\n        if (!isThisPosition) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer));\n            fThrough = $bm_sub(thisLayer.fromWorld(fThrough), thisLayer.anchorPoint);\n        } else if (thisLayer.hasParent) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer.parent));\n            fThrough = $bm_sub(thisLayer.parent.fromWorld(fThrough), thisLayer.parent.anchorPoint);\n        }\n    }\n    return fThrough;\n}\nfunction followThrough() {\n    var propSpeed = length(velocity);\n    if (propSpeed < threshold)\n        return followThroughAtTime($bm_sub(time, overlapDuration));\n    var fThrough = zeroValue;\n    var t = time;\n    while (t > 0) {\n        t = $bm_sub(t, thisComp.frameDuration);\n        if (simulate)\n            propSpeed = getPropWorldSpeed($bm_sub(t, overlapDuration), thisProperty);\n        else\n            propSpeed = length(velocityAtTime(t));\n        if (propSpeed < threshold) {\n            fThrough = followThroughAtTime($bm_sub(t, overlapDuration));\n            break;\n        }\n    }\n    return linear(time, t, $bm_sum(t, $bm_mul(anticipationDuration, 2)), fThrough, zeroValue);\n}\nfunction smartSmooth(axis) {\n    var startKey = nearestKey(time);\n    var endKey = startKey;\n    if (time == startKey.time)\n        return 0;\n    if (time < startKey.time && startKey.index == 1)\n        return 0;\n    if (time > startKey.time && startKey.index == numKeys)\n        return 0;\n    if (time < startKey.time)\n        startKey = key($bm_sub(startKey.index, 1));\n    if (time > startKey.time)\n        endKey = key($bm_sum(startKey.index, 1));\n    var sI = 0.66;\n    var sO = 0.33;\n    var sIV = 1;\n    var sOV = 0;\n    var sVal = startKey.value;\n    var eVal = endKey.value;\n    if ($bm_isInstanceOfArray(value)) {\n        sVal = sVal[axis];\n        eVal = eVal[axis];\n    }\n    var sTime = startKey.time;\n    var eTime = endKey.time;\n    if (isKeyTop(startKey, axis))\n        sO = slowOut;\n    else {\n        var prevKey = key($bm_sub(startKey.index, 1));\n        var pVal = prevKey.value;\n        if ($bm_isInstanceOfArray(value))\n            pVal = pVal[axis];\n        sOV = $bm_div($bm_sub(sVal, pVal), $bm_sub(eVal, pVal));\n    }\n    if (isKeyTop(endKey, axis)) {\n        sI = slowIn;\n        if (endKey.index != numKeys) {\n            var nextKey = key($bm_sum(endKey.index, 1));\n            var nVal = nextKey.value;\n            if ($bm_isInstanceOfArray(value))\n                nVal = nVal[axis];\n            if (Math.abs(nVal - eVal) < 0.01 && doFollowThrough)\n                sI = 1;\n        }\n    } else {\n        var nextKey = key($bm_sum(endKey.index, 1));\n        var nVal = nextKey.value;\n        if ($bm_isInstanceOfArray(value))\n            nVal = nVal[axis];\n        sIV = $bm_div($bm_sub(eVal, sVal), $bm_sub(nVal, sVal));\n    }\n    if (endKey.index == numKeys && doFollowThrough) {\n        sI = 1;\n    }\n    var val = value;\n    if ($bm_isInstanceOfArray(value))\n        val = val[axis];\n    return $bm_sub(bezierInterpolation(time, sTime, eTime, sVal, eVal, [\n        sO,\n        sOV,\n        sI,\n        sIV\n    ]), val);\n}\nfunction overlap() {\n    var ol = zeroValue;\n    if (isThisPosition && !hasParent)\n        return zeroValue;\n    ol = $bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisProperty), getPropWorldValue(time, thisProperty));\n    var motionRatio = $bm_div($bm_div(length(zeroValue, ol), thisLayer.width), 2);\n    if (isThisPosition) {\n        var originalDistance = length(valueAtTime(0));\n        motionRatio = $bm_div(length(zeroValue, ol), thisComp.width);\n    }\n    ol = $bm_sum(ol, getPropWorldValue(time, thisProperty));\n    ol = $bm_sum(ol, $bm_mul($bm_mul($bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisLayer.anchorPoint), ol), motionRatio), flexibility));\n    ol = thisLayer.fromWorld(ol);\n    if (!isThisPosition)\n        ol = $bm_sub(ol, value);\n    else {\n        ol = linear(flexibility, 0, 100, $bm_div(ol, 2), 0);\n        var prevParentWorldPos = getLayerWorldPos($bm_sub(time, overlapDuration), parent);\n        ol = $bm_sum(ol, $bm_mul($bm_mul($bm_mul(thisLayer.fromWorld(prevParentWorldPos), motionRatio), flexibility), 5));\n    }\n    return ol;\n}\nvar okToGo = false;\nif (simulate && fx.enabled)\n    okToGo = true;\nelse if (numKeys > 1 && fx.enabled)\n    okToGo = true;\nif (okToGo) {\n    var smartSmoothResult = zeroValue;\n    if (doInterpolation) {\n        if ($bm_isInstanceOfArray(value)) {\n            if (value.length == 2)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1)\n                ];\n            else if (value.length == 3)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2)\n                ];\n            else if (value.length == 4)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2),\n                    smartSmooth(3)\n                ];\n        } else {\n            smartSmoothResult = smartSmooth(0);\n        }\n    }\n    if (doAnticipation)\n        result = $bm_sum(result, anticipate());\n    result = $bm_sum(result, smartSmoothResult);\n    if (doFollowThrough)\n        result = $bm_sum(result, followThrough());\n    if (doOverlap)\n        result = $bm_sum(result, overlap());\n}\n$bm_rt = result;",
                                "a": 1
                              },
                              "a": { "a": 0, "k": [0.0, 0.0] },
                              "s": { "a": 0, "k": [100.0, 100.0] },
                              "nm": "Transform",
                              "sk": { "a": 0, "k": 0.0 },
                              "sa": { "a": 0, "k": 0.0 }
                            }
                          ]
                        },
                        {
                          "ty": "gr",
                          "nm": "Group 3",
                          "bm": 0,
                          "mn": "ADBE Vector Group",
                          "it": [
                            {
                              "ty": "sh",
                              "nm": "Path 1",
                              "mn": "ADBE Vector Shape - Group",
                              "ind": 0,
                              "ks": {
                                "k": {
                                  "i": [
                                    [0.0, 0.0],
                                    [-0.167, 0.061],
                                    [0.0, 0.0],
                                    [-0.06, -0.031],
                                    [-0.029, -0.079],
                                    [0.0, 0.0],
                                    [0.162, -0.059],
                                    [0.0, 0.0],
                                    [0.06, 0.165]
                                  ],
                                  "o": [
                                    [-0.062, -0.17],
                                    [0.0, 0.0],
                                    [0.076, -0.028],
                                    [0.059, 0.029],
                                    [0.0, 0.0],
                                    [0.06, 0.165],
                                    [0.0, 0.0],
                                    [-0.167, 0.061],
                                    [0.0, 0.0]
                                  ],
                                  "v": [
                                    [-109.204, -7.063],
                                    [-109.046, -7.409],
                                    [-108.762, -7.512],
                                    [-108.558, -7.507],
                                    [-108.426, -7.345],
                                    [-104.902, 2.373],
                                    [-105.055, 2.709],
                                    [-105.339, 2.812],
                                    [-105.679, 2.655]
                                  ],
                                  "c": true
                                },
                                "a": 0
                              }
                            },
                            {
                              "ty": "fl",
                              "nm": "Fill 1",
                              "bm": 0,
                              "mn": "ADBE Vector Graphic - Fill",
                              "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] },
                              "o": { "a": 0, "k": 100.0 },
                              "r": 1
                            },
                            {
                              "ty": "tr",
                              "o": { "a": 0, "k": 100.0 },
                              "r": { "a": 0, "k": 0.0 },
                              "p": {
                                "k": [
                                  {
                                    "i": { "x": 0.667, "y": 1.0 },
                                    "o": { "x": 0.333, "y": 0.0 },
                                    "t": 40.392,
                                    "s": [0, 0],
                                    "ti": [0, 0],
                                    "to": [-1.037, -2.814]
                                  },
                                  {
                                    "i": { "x": 0.667, "y": 1.0 },
                                    "o": { "x": 0.333, "y": 0.0 },
                                    "t": 44.956,
                                    "s": [-6.222, -16.885],
                                    "ti": [-1.037, -2.814],
                                    "to": [0, 0]
                                  },
                                  { "t": 48.869, "s": [0, 0] }
                                ],
                                "x": "var $bm_rt;\nvar fx = effect('\u015dlosilo pli pura 3');\nvar doAnticipation = fx(1).value;\nvar doInterpolation = fx(2).value;\nvar doFollowThrough = fx(3).value;\nvar damping = $bm_div(fx(15).value, 10);\nvar elasticity = $bm_div(fx(13).value, 10);\nvar bounce = fx(17).value;\nvar anticipationDuration = fx(5).value;\nvar anticipationQuantity = $bm_div(fx(6).value, 100);\nvar slowIn = $bm_div(fx(9).value, 100);\nvar slowOut = $bm_div(fx(10).value, 100);\nvar spatialMode = fx(21).value;\nvar spatialDoInterpolation = fx(20).value;\nvar moBlurPrecision = fx(32).value;\nvar elasticityRandom = fx(14).value;\nvar dampingRandom = fx(16).value;\nvar softBody = fx(28).value;\nvar flexibility = $bm_div(fx(29).value, 100);\nvar doOverlap = fx(23).value;\nvar overlapDuration = fx(24).value;\nvar overlapRandom = fx(25).value;\nvar threshold = $bm_div($bm_div(1, moBlurPrecision), 1000);\nvar zeroValue;\nif ($bm_isInstanceOfArray(value)) {\n    if (value.length == 2)\n        zeroValue = [\n            0,\n            0\n        ];\n    else if (value.length == 3)\n        zeroValue = [\n            0,\n            0,\n            0\n        ];\n    else if (value.length == 4)\n        zeroValue = [\n            0,\n            0,\n            0,\n            0\n        ];\n} else\n    zeroValue = 0;\nvar isThisSpatial = isSpatial(thisProperty);\nvar isThisPosition = thisProperty === $bm_transform.position;\nvar simulate = false;\nif (isThisSpatial) {\n    doInterpolation = doInterpolation && spatialDoInterpolation;\n    if (isThisPosition && thisProperty.numKeys > 0) {\n        doOverlap = false;\n        simulate = false;\n    } else {\n        simulate = spatialMode == 2;\n        doOverlap = overlapDuration != 0 && doOverlap && simulate;\n    }\n} else {\n    doOverlap = false;\n}\nif (!doOverlap) {\n    overlapDuration = 0;\n}\nif (simulate && softBody && isThisSpatial && !isThisPosition && (doFollowThrough || doOverlap)) {\n    var distanceRatio = $bm_div(length(valueAtTime(0), $bm_transform.anchorPoint), $bm_div(thisLayer.width, 2));\n    distanceRatio = $bm_div($bm_sum(1, $bm_mul(distanceRatio, flexibility)), 2);\n    if (doFollowThrough) {\n        elasticity = $bm_div(elasticity, distanceRatio);\n        damping = $bm_div(damping, distanceRatio);\n    }\n    if (doOverlap) {\n        overlapDuration = $bm_mul(overlapDuration, distanceRatio);\n    }\n}\nseedRandom(0, true);\nif (doFollowThrough) {\n    if (elasticityRandom > 0)\n        elasticity = addNoise(elasticity, elasticityRandom);\n    if (dampingRandom > 0)\n        damping = addNoise(damping, dampingRandom);\n}\nif (doOverlap) {\n    if (doOverlap && overlapRandom > 0)\n        overlapDuration = addNoise(overlapDuration, overlapRandom);\n}\nvar result = value;\nfunction isSpatial(prop) {\n    if (!(prop.value instanceof Array))\n        return false;\n    if (prop.value.length != 2 && prop.value.length != 3)\n        return false;\n    try {\n        if (typeof prop.speed !== 'undefined')\n            return true;\n    } catch (e) {\n        return false;\n    }\n}\nfunction addNoise(val, quantity) {\n    var randomValue = random(0.9, 1.1);\n    var noiseValue = noise($bm_mul(valueAtTime(0), randomValue));\n    noiseValue = $bm_mul(noiseValue, $bm_div(quantity, 100));\n    return $bm_mul(val, $bm_sum(noiseValue, 1));\n}\nfunction isAfterLastKey() {\n    if (numKeys == 0)\n        return false;\n    var nKey = nearestKey(time);\n    return nKey.time <= time && nKey.index == numKeys;\n}\nfunction isStill(t, threshold) {\n    var d = $bm_sub(valueAtTime(t), valueAtTime($bm_sum(t, framesToTime(1))));\n    if ($bm_isInstanceOfArray(d)) {\n        for (var i = 0; i < d.length; i++) {\n            d[i] = Math.abs(d[i]);\n            if (d[i] >= threshold) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        d = Math.abs(d);\n        return d < threshold;\n    }\n}\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\n    if (arguments.length !== 5 && arguments.length !== 6)\n        return t;\n    var a = $bm_sub(value2, value1);\n    var b = $bm_sub(tMax, tMin);\n    if (b == 0)\n        return t;\n    var c = clamp($bm_div($bm_sub(t, tMin), b), 0, 1);\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4)\n        bezierPoints = [\n            0.33,\n            0,\n            0.66,\n            1\n        ];\n    return $bm_sum($bm_mul(a, h(c, bezierPoints)), value1);\n    function h(f, g) {\n        var x = $bm_mul(3, g[0]);\n        var j = $bm_sub($bm_mul(3, $bm_sub(g[2], g[0])), x);\n        var k = $bm_sub($bm_sub(1, x), j);\n        var l = $bm_mul(3, g[1]);\n        var m = $bm_sub($bm_mul(3, $bm_sub(g[3], g[1])), l);\n        var n = $bm_sub($bm_sub(1, l), m);\n        var d = f;\n        for (var i = 0; i < 5; i++) {\n            var z = $bm_sub($bm_mul(d, $bm_sum(x, $bm_mul(d, $bm_sum(j, $bm_mul(d, k))))), f);\n            if (Math.abs(z) < 0.001)\n                break;\n            d = $bm_sub(d, $bm_div(z, $bm_sum(x, $bm_mul(d, $bm_sum($bm_mul(2, j), $bm_mul($bm_mul(3, k), d))))));\n        }\n        return $bm_mul(d, $bm_sum(l, $bm_mul(d, $bm_sum(m, $bm_mul(d, n)))));\n    }\n}\nfunction getPropWorldSpeed(t, prop) {\n    return length(getPropWorldVelocity(t, prop));\n}\nfunction getPrevKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time <= t)\n        return nKey;\n    if (nKey.index > 1)\n        return key($bm_sub(nKey.index, 1));\n    return null;\n}\nfunction getNextKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time >= t)\n        return nKey;\n    if (nKey.index < numKeys)\n        return key($bm_sum(nKey.index, 1));\n    return null;\n}\nfunction getPropWorldVelocity(t, prop) {\n    return $bm_mul($bm_sub(getPropWorldValue($bm_sum(t, 0.005), prop), getPropWorldValue($bm_sub(t, 0.005), prop)), 100);\n}\nfunction getLayerWorldPos(t, l) {\n    return l.toWorld(l.anchorPoint, t);\n}\nfunction getPropWorldValue(t, prop) {\n    if (isPosition(prop))\n        return getLayerWorldPos(t, thisLayer);\n    return thisLayer.toWorld(prop.valueAtTime(t), t);\n}\nfunction isPosition(prop) {\n    return prop === $bm_transform.position;\n}\nfunction isKeyTop(k, axis) {\n    var prevSpeed = velocityAtTime($bm_sub(k.time, threshold));\n    var nextSpeed = velocityAtTime($bm_sum(k.time, threshold));\n    if ($bm_isInstanceOfArray(value)) {\n        prevSpeed = prevSpeed[axis];\n        nextSpeed = nextSpeed[axis];\n    }\n    if (Math.abs(prevSpeed) < 0.01 || Math.abs(nextSpeed) < 0.01)\n        return true;\n    return $bm_mul(prevSpeed, nextSpeed) < 0;\n}\nfunction anticipate() {\n    var anticipation = zeroValue;\n    if (isAfterLastKey())\n        return anticipation;\n    if (numKeys < 2)\n        return anticipation;\n    var nextKey = getNextKey(time);\n    var aKey = nextKey;\n    if (!isStill(aKey.time - 0.1, 0.1)) {\n        aKey = getPrevKey(time);\n        if (!isStill(aKey.time - 0.1, 0.1))\n            return anticipation;\n    }\n    if (aKey.index == numKeys)\n        return anticipation;\n    var anticipationMiddle = aKey.time;\n    var anticipationStart = $bm_sub(anticipationMiddle, anticipationDuration);\n    var anticipationEnd = key(aKey.index + 1).time;\n    var startValue = anticipation;\n    var midValue = $bm_mul($bm_sum($bm_neg(valueAtTime($bm_sum(anticipationMiddle, anticipationDuration))), aKey.value), anticipationQuantity);\n    var endValue = anticipation;\n    if (time < anticipationStart) {\n        return anticipation;\n    } else if (time < anticipationMiddle) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue[i], midValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue, midValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else if (time <= anticipationEnd) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue[i], endValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue, endValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else {\n        return anticipation;\n    }\n}\nfunction followThroughAtTime(t) {\n    var fThrough = zeroValue;\n    if (elasticity == 0)\n        return fThrough;\n    var propSpeed;\n    if (!simulate) {\n        if (numKeys < 2)\n            return fThrough;\n        if (nearestKey(t).index == 1)\n            return fThrough;\n        propSpeed = length(velocityAtTime(t));\n        if (propSpeed >= threshold)\n            return fThrough;\n    } else {\n        propSpeed = getPropWorldSpeed(t, thisProperty);\n        if (propSpeed >= threshold)\n            return fThrough;\n    }\n    var fThroughStart = 0;\n    var fThroughTime = 0;\n    if (simulate) {\n        var speedI = getPropWorldSpeed(t, thisProperty);\n        var i = t;\n        while (speedI < threshold && i > 0) {\n            i = $bm_sub(i, $bm_div(thisComp.frameDuration, moBlurPrecision));\n            speedI = getPropWorldSpeed(i, thisProperty);\n        }\n        fThroughStart = i;\n    } else {\n        var fThroughKey = getPrevKey(t);\n        fThroughStart = fThroughKey.time;\n    }\n    if (fThroughStart == 0)\n        return fThrough;\n    fThroughTime = $bm_sub(t, fThroughStart);\n    if (simulate)\n        fThrough = $bm_div(getPropWorldVelocity($bm_sub(fThroughStart, thisComp.frameDuration), thisProperty), 2);\n    else\n        fThrough = $bm_div(velocityAtTime($bm_sub(fThroughStart, thisComp.frameDuration)), 2);\n    if (bounce) {\n        var cycleDamp = Math.exp($bm_mul($bm_mul(fThroughTime, damping), 0.1));\n        var damp = $bm_div(Math.exp($bm_mul(fThroughTime, damping)), $bm_div(elasticity, 2));\n        var cycleDuration = $bm_div(1, $bm_mul(elasticity, 2));\n        cycleDuration = Math.round(timeToFrames(cycleDuration));\n        cycleDuration = framesToTime(cycleDuration);\n        var midDuration = $bm_div(cycleDuration, 2);\n        var maxValue = $bm_mul(fThrough, midDuration);\n        var cycvarime = fThroughTime;\n        var numEndCycles = 1;\n        while (cycvarime > cycleDuration) {\n            cycvarime = $bm_sub(cycvarime, cycleDuration);\n            cycleDuration = $bm_div(cycleDuration, cycleDamp);\n            cycleDuration = Math.round(timeToFrames(cycleDuration));\n            if (cycleDuration < 2) {\n                cycleDuration = 2;\n                numEndCycles++;\n            }\n            cycleDuration = framesToTime(cycleDuration);\n            midDuration = $bm_div(cycleDuration, 2);\n            maxValue = $bm_div($bm_mul(fThrough, midDuration), damp);\n            if (numEndCycles > 100 / damping && maxValue < threshold)\n                return zeroValue;\n        }\n        if (cycvarime < midDuration)\n            fThrough = bezierInterpolation(cycvarime, 0, midDuration, 0, maxValue, [\n                0,\n                0.1,\n                slowIn,\n                1\n            ]);\n        else\n            fThrough = bezierInterpolation(cycvarime, midDuration, cycleDuration, maxValue, 0, [\n                $bm_sub(1, slowIn),\n                0,\n                1,\n                0.9\n            ]);\n    } else {\n        var damp = Math.exp($bm_mul(fThroughTime, damping));\n        var sinus = $bm_mul($bm_mul($bm_mul(elasticity, fThroughTime), 2), Math.PI);\n        sinus = Math.sin(sinus);\n        sinus = $bm_mul($bm_div(0.3, elasticity), sinus);\n        sinus = $bm_div(sinus, damp);\n        if (Math.abs(sinus) < $bm_div(threshold, 100))\n            return 0;\n        fThrough = $bm_mul(fThrough, sinus);\n        if (threshold > 0) {\n            fThrough = $bm_mul(fThrough, $bm_sub(1, $bm_div(propSpeed, threshold)));\n        }\n    }\n    if (bounce) {\n        var prevValue = valueAtTime($bm_sub(fThroughStart, thisComp.frameDuration));\n        var startValue = valueAtTime(fThroughStart);\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < prevValue.length; i++) {\n                if (prevValue[i] > startValue[i])\n                    fThrough[i] = Math.abs(fThrough[i]);\n                if (prevValue[i] < startValue[i])\n                    fThrough[i] = $bm_neg(Math.abs(fThrough[i]));\n            }\n        } else {\n            if (prevValue > startValue)\n                fThrough = Math.abs(fThrough);\n            if (prevValue < startValue)\n                fThrough = $bm_neg(Math.abs(fThrough));\n        }\n    }\n    if (simulate) {\n        if (!isThisPosition) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer));\n            fThrough = $bm_sub(thisLayer.fromWorld(fThrough), thisLayer.anchorPoint);\n        } else if (thisLayer.hasParent) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer.parent));\n            fThrough = $bm_sub(thisLayer.parent.fromWorld(fThrough), thisLayer.parent.anchorPoint);\n        }\n    }\n    return fThrough;\n}\nfunction followThrough() {\n    var propSpeed = length(velocity);\n    if (propSpeed < threshold)\n        return followThroughAtTime($bm_sub(time, overlapDuration));\n    var fThrough = zeroValue;\n    var t = time;\n    while (t > 0) {\n        t = $bm_sub(t, thisComp.frameDuration);\n        if (simulate)\n            propSpeed = getPropWorldSpeed($bm_sub(t, overlapDuration), thisProperty);\n        else\n            propSpeed = length(velocityAtTime(t));\n        if (propSpeed < threshold) {\n            fThrough = followThroughAtTime($bm_sub(t, overlapDuration));\n            break;\n        }\n    }\n    return linear(time, t, $bm_sum(t, $bm_mul(anticipationDuration, 2)), fThrough, zeroValue);\n}\nfunction smartSmooth(axis) {\n    var startKey = nearestKey(time);\n    var endKey = startKey;\n    if (time == startKey.time)\n        return 0;\n    if (time < startKey.time && startKey.index == 1)\n        return 0;\n    if (time > startKey.time && startKey.index == numKeys)\n        return 0;\n    if (time < startKey.time)\n        startKey = key($bm_sub(startKey.index, 1));\n    if (time > startKey.time)\n        endKey = key($bm_sum(startKey.index, 1));\n    var sI = 0.66;\n    var sO = 0.33;\n    var sIV = 1;\n    var sOV = 0;\n    var sVal = startKey.value;\n    var eVal = endKey.value;\n    if ($bm_isInstanceOfArray(value)) {\n        sVal = sVal[axis];\n        eVal = eVal[axis];\n    }\n    var sTime = startKey.time;\n    var eTime = endKey.time;\n    if (isKeyTop(startKey, axis))\n        sO = slowOut;\n    else {\n        var prevKey = key($bm_sub(startKey.index, 1));\n        var pVal = prevKey.value;\n        if ($bm_isInstanceOfArray(value))\n            pVal = pVal[axis];\n        sOV = $bm_div($bm_sub(sVal, pVal), $bm_sub(eVal, pVal));\n    }\n    if (isKeyTop(endKey, axis)) {\n        sI = slowIn;\n        if (endKey.index != numKeys) {\n            var nextKey = key($bm_sum(endKey.index, 1));\n            var nVal = nextKey.value;\n            if ($bm_isInstanceOfArray(value))\n                nVal = nVal[axis];\n            if (Math.abs(nVal - eVal) < 0.01 && doFollowThrough)\n                sI = 1;\n        }\n    } else {\n        var nextKey = key($bm_sum(endKey.index, 1));\n        var nVal = nextKey.value;\n        if ($bm_isInstanceOfArray(value))\n            nVal = nVal[axis];\n        sIV = $bm_div($bm_sub(eVal, sVal), $bm_sub(nVal, sVal));\n    }\n    if (endKey.index == numKeys && doFollowThrough) {\n        sI = 1;\n    }\n    var val = value;\n    if ($bm_isInstanceOfArray(value))\n        val = val[axis];\n    return $bm_sub(bezierInterpolation(time, sTime, eTime, sVal, eVal, [\n        sO,\n        sOV,\n        sI,\n        sIV\n    ]), val);\n}\nfunction overlap() {\n    var ol = zeroValue;\n    if (isThisPosition && !hasParent)\n        return zeroValue;\n    ol = $bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisProperty), getPropWorldValue(time, thisProperty));\n    var motionRatio = $bm_div($bm_div(length(zeroValue, ol), thisLayer.width), 2);\n    if (isThisPosition) {\n        var originalDistance = length(valueAtTime(0));\n        motionRatio = $bm_div(length(zeroValue, ol), thisComp.width);\n    }\n    ol = $bm_sum(ol, getPropWorldValue(time, thisProperty));\n    ol = $bm_sum(ol, $bm_mul($bm_mul($bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisLayer.anchorPoint), ol), motionRatio), flexibility));\n    ol = thisLayer.fromWorld(ol);\n    if (!isThisPosition)\n        ol = $bm_sub(ol, value);\n    else {\n        ol = linear(flexibility, 0, 100, $bm_div(ol, 2), 0);\n        var prevParentWorldPos = getLayerWorldPos($bm_sub(time, overlapDuration), parent);\n        ol = $bm_sum(ol, $bm_mul($bm_mul($bm_mul(thisLayer.fromWorld(prevParentWorldPos), motionRatio), flexibility), 5));\n    }\n    return ol;\n}\nvar okToGo = false;\nif (simulate && fx.enabled)\n    okToGo = true;\nelse if (numKeys > 1 && fx.enabled)\n    okToGo = true;\nif (okToGo) {\n    var smartSmoothResult = zeroValue;\n    if (doInterpolation) {\n        if ($bm_isInstanceOfArray(value)) {\n            if (value.length == 2)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1)\n                ];\n            else if (value.length == 3)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2)\n                ];\n            else if (value.length == 4)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2),\n                    smartSmooth(3)\n                ];\n        } else {\n            smartSmoothResult = smartSmooth(0);\n        }\n    }\n    if (doAnticipation)\n        result = $bm_sum(result, anticipate());\n    result = $bm_sum(result, smartSmoothResult);\n    if (doFollowThrough)\n        result = $bm_sum(result, followThrough());\n    if (doOverlap)\n        result = $bm_sum(result, overlap());\n}\n$bm_rt = result;",
                                "a": 1
                              },
                              "a": { "a": 0, "k": [0.0, 0.0] },
                              "s": { "a": 0, "k": [100.0, 100.0] },
                              "nm": "Transform",
                              "sk": { "a": 0, "k": 0.0 },
                              "sa": { "a": 0, "k": 0.0 }
                            }
                          ]
                        },
                        {
                          "ty": "gr",
                          "nm": "Group 4",
                          "bm": 0,
                          "mn": "ADBE Vector Group",
                          "it": [
                            {
                              "ty": "sh",
                              "nm": "Path 1",
                              "mn": "ADBE Vector Shape - Group",
                              "ind": 0,
                              "ks": {
                                "k": {
                                  "i": [
                                    [0.288, -0.105],
                                    [0.222, -0.21],
                                    [0.134, -0.278],
                                    [0.041, -0.329],
                                    [-0.064, -0.346],
                                    [0.0, 0.0],
                                    [0.243, 0.226],
                                    [0.284, 0.128],
                                    [0.31, 0.017]
                                  ],
                                  "o": [
                                    [-0.293, 0.106],
                                    [-0.222, 0.21],
                                    [-0.134, 0.277],
                                    [-0.041, 0.329],
                                    [0.0, 0.0],
                                    [-0.157, -0.306],
                                    [-0.243, -0.225],
                                    [-0.283, -0.128],
                                    [-0.31, -0.017]
                                  ],
                                  "v": [
                                    [-112.316, -1.563],
                                    [-113.089, -1.089],
                                    [-113.623, -0.357],
                                    [-113.885, 0.552],
                                    [-113.85, 1.563],
                                    [-109.139, -0.147],
                                    [-109.739, -0.946],
                                    [-110.529, -1.477],
                                    [-111.419, -1.695]
                                  ],
                                  "c": true
                                },
                                "a": 0
                              }
                            },
                            {
                              "ty": "sh",
                              "nm": "Path 2",
                              "mn": "ADBE Vector Shape - Group",
                              "ind": 1,
                              "ks": {
                                "k": {
                                  "i": [
                                    [0.0, 0.0],
                                    [0.462, 0.043],
                                    [0.409, 0.212],
                                    [0.323, 0.362],
                                    [0.176, 0.482],
                                    [-0.011, 0.489],
                                    [-0.175, 0.425],
                                    [-0.318, 0.323],
                                    [-0.442, 0.16],
                                    [-0.442, -0.041],
                                    [-0.395, -0.202],
                                    [-0.315, -0.354],
                                    [-0.17, -0.468],
                                    [0.082, -0.089],
                                    [0.153, -0.055],
                                    [0.0, 0.0],
                                    [-0.246, -0.246],
                                    [-0.301, -0.14],
                                    [-0.335, -0.024],
                                    [-0.328, 0.108],
                                    [0.0, 0.0],
                                    [-0.28, 0.275],
                                    [-0.155, 0.348],
                                    [-0.067, 0.026],
                                    [-0.054, -0.037],
                                    [0.0, 0.0],
                                    [-0.012, -0.061],
                                    [0.073, -0.135],
                                    [0.33, -0.326],
                                    [0.464, -0.169]
                                  ],
                                  "o": [
                                    [-0.451, 0.164],
                                    [-0.462, -0.043],
                                    [-0.409, -0.212],
                                    [-0.323, -0.362],
                                    [-0.177, -0.486],
                                    [0.011, -0.489],
                                    [0.174, -0.425],
                                    [0.319, -0.324],
                                    [0.419, -0.152],
                                    [0.441, 0.042],
                                    [0.395, 0.202],
                                    [0.314, 0.352],
                                    [0.061, 0.17],
                                    [-0.082, 0.089],
                                    [0.0, 0.0],
                                    [0.143, 0.338],
                                    [0.245, 0.246],
                                    [0.301, 0.14],
                                    [0.335, 0.023],
                                    [0.0, 0.0],
                                    [0.383, -0.139],
                                    [0.28, -0.276],
                                    [0.035, -0.085],
                                    [0.066, -0.027],
                                    [0.0, 0.0],
                                    [0.086, 0.057],
                                    [0.012, 0.06],
                                    [-0.219, 0.408],
                                    [-0.33, 0.324],
                                    [0.0, 0.0]
                                  ],
                                  "v": [
                                    [-109.968, 4.664],
                                    [-111.338, 4.845],
                                    [-112.643, 4.463],
                                    [-113.742, 3.6],
                                    [-114.489, 2.332],
                                    [-114.738, 0.869],
                                    [-114.459, -0.501],
                                    [-113.719, -1.623],
                                    [-112.579, -2.349],
                                    [-111.288, -2.513],
                                    [-110.034, -2.147],
                                    [-108.97, -1.314],
                                    [-108.243, -0.082],
                                    [-108.273, 0.306],
                                    [-108.627, 0.524],
                                    [-113.602, 2.33],
                                    [-113.02, 3.205],
                                    [-112.201, 3.784],
                                    [-111.247, 4.03],
                                    [-110.253, 3.903],
                                    [-110.233, 3.895],
                                    [-109.238, 3.274],
                                    [-108.587, 2.34],
                                    [-108.433, 2.172],
                                    [-108.252, 2.187],
                                    [-108.0, 2.352],
                                    [-107.852, 2.529],
                                    [-107.944, 2.822],
                                    [-108.769, 3.921],
                                    [-109.962, 4.662]
                                  ],
                                  "c": true
                                },
                                "a": 0
                              }
                            },
                            {
                              "ty": "fl",
                              "nm": "Fill 1",
                              "bm": 0,
                              "mn": "ADBE Vector Graphic - Fill",
                              "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] },
                              "o": { "a": 0, "k": 100.0 },
                              "r": 1
                            },
                            {
                              "ty": "tr",
                              "o": { "a": 0, "k": 100.0 },
                              "r": { "a": 0, "k": 0.0 },
                              "p": {
                                "k": [
                                  {
                                    "i": { "x": 0.667, "y": 1.0 },
                                    "o": { "x": 0.333, "y": 0.0 },
                                    "t": 35.826,
                                    "s": [0, 0],
                                    "ti": [0, 0],
                                    "to": [-1.037, -2.814]
                                  },
                                  {
                                    "i": { "x": 0.667, "y": 1.0 },
                                    "o": { "x": 0.333, "y": 0.0 },
                                    "t": 40.392,
                                    "s": [-6.222, -16.885],
                                    "ti": [-1.037, -2.814],
                                    "to": [0, 0]
                                  },
                                  { "t": 44.305, "s": [0, 0] }
                                ],
                                "x": "var $bm_rt;\nvar fx = effect('\u015dlosilo pli pura 3');\nvar doAnticipation = fx(1).value;\nvar doInterpolation = fx(2).value;\nvar doFollowThrough = fx(3).value;\nvar damping = $bm_div(fx(15).value, 10);\nvar elasticity = $bm_div(fx(13).value, 10);\nvar bounce = fx(17).value;\nvar anticipationDuration = fx(5).value;\nvar anticipationQuantity = $bm_div(fx(6).value, 100);\nvar slowIn = $bm_div(fx(9).value, 100);\nvar slowOut = $bm_div(fx(10).value, 100);\nvar spatialMode = fx(21).value;\nvar spatialDoInterpolation = fx(20).value;\nvar moBlurPrecision = fx(32).value;\nvar elasticityRandom = fx(14).value;\nvar dampingRandom = fx(16).value;\nvar softBody = fx(28).value;\nvar flexibility = $bm_div(fx(29).value, 100);\nvar doOverlap = fx(23).value;\nvar overlapDuration = fx(24).value;\nvar overlapRandom = fx(25).value;\nvar threshold = $bm_div($bm_div(1, moBlurPrecision), 1000);\nvar zeroValue;\nif ($bm_isInstanceOfArray(value)) {\n    if (value.length == 2)\n        zeroValue = [\n            0,\n            0\n        ];\n    else if (value.length == 3)\n        zeroValue = [\n            0,\n            0,\n            0\n        ];\n    else if (value.length == 4)\n        zeroValue = [\n            0,\n            0,\n            0,\n            0\n        ];\n} else\n    zeroValue = 0;\nvar isThisSpatial = isSpatial(thisProperty);\nvar isThisPosition = thisProperty === $bm_transform.position;\nvar simulate = false;\nif (isThisSpatial) {\n    doInterpolation = doInterpolation && spatialDoInterpolation;\n    if (isThisPosition && thisProperty.numKeys > 0) {\n        doOverlap = false;\n        simulate = false;\n    } else {\n        simulate = spatialMode == 2;\n        doOverlap = overlapDuration != 0 && doOverlap && simulate;\n    }\n} else {\n    doOverlap = false;\n}\nif (!doOverlap) {\n    overlapDuration = 0;\n}\nif (simulate && softBody && isThisSpatial && !isThisPosition && (doFollowThrough || doOverlap)) {\n    var distanceRatio = $bm_div(length(valueAtTime(0), $bm_transform.anchorPoint), $bm_div(thisLayer.width, 2));\n    distanceRatio = $bm_div($bm_sum(1, $bm_mul(distanceRatio, flexibility)), 2);\n    if (doFollowThrough) {\n        elasticity = $bm_div(elasticity, distanceRatio);\n        damping = $bm_div(damping, distanceRatio);\n    }\n    if (doOverlap) {\n        overlapDuration = $bm_mul(overlapDuration, distanceRatio);\n    }\n}\nseedRandom(0, true);\nif (doFollowThrough) {\n    if (elasticityRandom > 0)\n        elasticity = addNoise(elasticity, elasticityRandom);\n    if (dampingRandom > 0)\n        damping = addNoise(damping, dampingRandom);\n}\nif (doOverlap) {\n    if (doOverlap && overlapRandom > 0)\n        overlapDuration = addNoise(overlapDuration, overlapRandom);\n}\nvar result = value;\nfunction isSpatial(prop) {\n    if (!(prop.value instanceof Array))\n        return false;\n    if (prop.value.length != 2 && prop.value.length != 3)\n        return false;\n    try {\n        if (typeof prop.speed !== 'undefined')\n            return true;\n    } catch (e) {\n        return false;\n    }\n}\nfunction addNoise(val, quantity) {\n    var randomValue = random(0.9, 1.1);\n    var noiseValue = noise($bm_mul(valueAtTime(0), randomValue));\n    noiseValue = $bm_mul(noiseValue, $bm_div(quantity, 100));\n    return $bm_mul(val, $bm_sum(noiseValue, 1));\n}\nfunction isAfterLastKey() {\n    if (numKeys == 0)\n        return false;\n    var nKey = nearestKey(time);\n    return nKey.time <= time && nKey.index == numKeys;\n}\nfunction isStill(t, threshold) {\n    var d = $bm_sub(valueAtTime(t), valueAtTime($bm_sum(t, framesToTime(1))));\n    if ($bm_isInstanceOfArray(d)) {\n        for (var i = 0; i < d.length; i++) {\n            d[i] = Math.abs(d[i]);\n            if (d[i] >= threshold) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        d = Math.abs(d);\n        return d < threshold;\n    }\n}\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\n    if (arguments.length !== 5 && arguments.length !== 6)\n        return t;\n    var a = $bm_sub(value2, value1);\n    var b = $bm_sub(tMax, tMin);\n    if (b == 0)\n        return t;\n    var c = clamp($bm_div($bm_sub(t, tMin), b), 0, 1);\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4)\n        bezierPoints = [\n            0.33,\n            0,\n            0.66,\n            1\n        ];\n    return $bm_sum($bm_mul(a, h(c, bezierPoints)), value1);\n    function h(f, g) {\n        var x = $bm_mul(3, g[0]);\n        var j = $bm_sub($bm_mul(3, $bm_sub(g[2], g[0])), x);\n        var k = $bm_sub($bm_sub(1, x), j);\n        var l = $bm_mul(3, g[1]);\n        var m = $bm_sub($bm_mul(3, $bm_sub(g[3], g[1])), l);\n        var n = $bm_sub($bm_sub(1, l), m);\n        var d = f;\n        for (var i = 0; i < 5; i++) {\n            var z = $bm_sub($bm_mul(d, $bm_sum(x, $bm_mul(d, $bm_sum(j, $bm_mul(d, k))))), f);\n            if (Math.abs(z) < 0.001)\n                break;\n            d = $bm_sub(d, $bm_div(z, $bm_sum(x, $bm_mul(d, $bm_sum($bm_mul(2, j), $bm_mul($bm_mul(3, k), d))))));\n        }\n        return $bm_mul(d, $bm_sum(l, $bm_mul(d, $bm_sum(m, $bm_mul(d, n)))));\n    }\n}\nfunction getPropWorldSpeed(t, prop) {\n    return length(getPropWorldVelocity(t, prop));\n}\nfunction getPrevKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time <= t)\n        return nKey;\n    if (nKey.index > 1)\n        return key($bm_sub(nKey.index, 1));\n    return null;\n}\nfunction getNextKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time >= t)\n        return nKey;\n    if (nKey.index < numKeys)\n        return key($bm_sum(nKey.index, 1));\n    return null;\n}\nfunction getPropWorldVelocity(t, prop) {\n    return $bm_mul($bm_sub(getPropWorldValue($bm_sum(t, 0.005), prop), getPropWorldValue($bm_sub(t, 0.005), prop)), 100);\n}\nfunction getLayerWorldPos(t, l) {\n    return l.toWorld(l.anchorPoint, t);\n}\nfunction getPropWorldValue(t, prop) {\n    if (isPosition(prop))\n        return getLayerWorldPos(t, thisLayer);\n    return thisLayer.toWorld(prop.valueAtTime(t), t);\n}\nfunction isPosition(prop) {\n    return prop === $bm_transform.position;\n}\nfunction isKeyTop(k, axis) {\n    var prevSpeed = velocityAtTime($bm_sub(k.time, threshold));\n    var nextSpeed = velocityAtTime($bm_sum(k.time, threshold));\n    if ($bm_isInstanceOfArray(value)) {\n        prevSpeed = prevSpeed[axis];\n        nextSpeed = nextSpeed[axis];\n    }\n    if (Math.abs(prevSpeed) < 0.01 || Math.abs(nextSpeed) < 0.01)\n        return true;\n    return $bm_mul(prevSpeed, nextSpeed) < 0;\n}\nfunction anticipate() {\n    var anticipation = zeroValue;\n    if (isAfterLastKey())\n        return anticipation;\n    if (numKeys < 2)\n        return anticipation;\n    var nextKey = getNextKey(time);\n    var aKey = nextKey;\n    if (!isStill(aKey.time - 0.1, 0.1)) {\n        aKey = getPrevKey(time);\n        if (!isStill(aKey.time - 0.1, 0.1))\n            return anticipation;\n    }\n    if (aKey.index == numKeys)\n        return anticipation;\n    var anticipationMiddle = aKey.time;\n    var anticipationStart = $bm_sub(anticipationMiddle, anticipationDuration);\n    var anticipationEnd = key(aKey.index + 1).time;\n    var startValue = anticipation;\n    var midValue = $bm_mul($bm_sum($bm_neg(valueAtTime($bm_sum(anticipationMiddle, anticipationDuration))), aKey.value), anticipationQuantity);\n    var endValue = anticipation;\n    if (time < anticipationStart) {\n        return anticipation;\n    } else if (time < anticipationMiddle) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue[i], midValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue, midValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else if (time <= anticipationEnd) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue[i], endValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue, endValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else {\n        return anticipation;\n    }\n}\nfunction followThroughAtTime(t) {\n    var fThrough = zeroValue;\n    if (elasticity == 0)\n        return fThrough;\n    var propSpeed;\n    if (!simulate) {\n        if (numKeys < 2)\n            return fThrough;\n        if (nearestKey(t).index == 1)\n            return fThrough;\n        propSpeed = length(velocityAtTime(t));\n        if (propSpeed >= threshold)\n            return fThrough;\n    } else {\n        propSpeed = getPropWorldSpeed(t, thisProperty);\n        if (propSpeed >= threshold)\n            return fThrough;\n    }\n    var fThroughStart = 0;\n    var fThroughTime = 0;\n    if (simulate) {\n        var speedI = getPropWorldSpeed(t, thisProperty);\n        var i = t;\n        while (speedI < threshold && i > 0) {\n            i = $bm_sub(i, $bm_div(thisComp.frameDuration, moBlurPrecision));\n            speedI = getPropWorldSpeed(i, thisProperty);\n        }\n        fThroughStart = i;\n    } else {\n        var fThroughKey = getPrevKey(t);\n        fThroughStart = fThroughKey.time;\n    }\n    if (fThroughStart == 0)\n        return fThrough;\n    fThroughTime = $bm_sub(t, fThroughStart);\n    if (simulate)\n        fThrough = $bm_div(getPropWorldVelocity($bm_sub(fThroughStart, thisComp.frameDuration), thisProperty), 2);\n    else\n        fThrough = $bm_div(velocityAtTime($bm_sub(fThroughStart, thisComp.frameDuration)), 2);\n    if (bounce) {\n        var cycleDamp = Math.exp($bm_mul($bm_mul(fThroughTime, damping), 0.1));\n        var damp = $bm_div(Math.exp($bm_mul(fThroughTime, damping)), $bm_div(elasticity, 2));\n        var cycleDuration = $bm_div(1, $bm_mul(elasticity, 2));\n        cycleDuration = Math.round(timeToFrames(cycleDuration));\n        cycleDuration = framesToTime(cycleDuration);\n        var midDuration = $bm_div(cycleDuration, 2);\n        var maxValue = $bm_mul(fThrough, midDuration);\n        var cycvarime = fThroughTime;\n        var numEndCycles = 1;\n        while (cycvarime > cycleDuration) {\n            cycvarime = $bm_sub(cycvarime, cycleDuration);\n            cycleDuration = $bm_div(cycleDuration, cycleDamp);\n            cycleDuration = Math.round(timeToFrames(cycleDuration));\n            if (cycleDuration < 2) {\n                cycleDuration = 2;\n                numEndCycles++;\n            }\n            cycleDuration = framesToTime(cycleDuration);\n            midDuration = $bm_div(cycleDuration, 2);\n            maxValue = $bm_div($bm_mul(fThrough, midDuration), damp);\n            if (numEndCycles > 100 / damping && maxValue < threshold)\n                return zeroValue;\n        }\n        if (cycvarime < midDuration)\n            fThrough = bezierInterpolation(cycvarime, 0, midDuration, 0, maxValue, [\n                0,\n                0.1,\n                slowIn,\n                1\n            ]);\n        else\n            fThrough = bezierInterpolation(cycvarime, midDuration, cycleDuration, maxValue, 0, [\n                $bm_sub(1, slowIn),\n                0,\n                1,\n                0.9\n            ]);\n    } else {\n        var damp = Math.exp($bm_mul(fThroughTime, damping));\n        var sinus = $bm_mul($bm_mul($bm_mul(elasticity, fThroughTime), 2), Math.PI);\n        sinus = Math.sin(sinus);\n        sinus = $bm_mul($bm_div(0.3, elasticity), sinus);\n        sinus = $bm_div(sinus, damp);\n        if (Math.abs(sinus) < $bm_div(threshold, 100))\n            return 0;\n        fThrough = $bm_mul(fThrough, sinus);\n        if (threshold > 0) {\n            fThrough = $bm_mul(fThrough, $bm_sub(1, $bm_div(propSpeed, threshold)));\n        }\n    }\n    if (bounce) {\n        var prevValue = valueAtTime($bm_sub(fThroughStart, thisComp.frameDuration));\n        var startValue = valueAtTime(fThroughStart);\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < prevValue.length; i++) {\n                if (prevValue[i] > startValue[i])\n                    fThrough[i] = Math.abs(fThrough[i]);\n                if (prevValue[i] < startValue[i])\n                    fThrough[i] = $bm_neg(Math.abs(fThrough[i]));\n            }\n        } else {\n            if (prevValue > startValue)\n                fThrough = Math.abs(fThrough);\n            if (prevValue < startValue)\n                fThrough = $bm_neg(Math.abs(fThrough));\n        }\n    }\n    if (simulate) {\n        if (!isThisPosition) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer));\n            fThrough = $bm_sub(thisLayer.fromWorld(fThrough), thisLayer.anchorPoint);\n        } else if (thisLayer.hasParent) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer.parent));\n            fThrough = $bm_sub(thisLayer.parent.fromWorld(fThrough), thisLayer.parent.anchorPoint);\n        }\n    }\n    return fThrough;\n}\nfunction followThrough() {\n    var propSpeed = length(velocity);\n    if (propSpeed < threshold)\n        return followThroughAtTime($bm_sub(time, overlapDuration));\n    var fThrough = zeroValue;\n    var t = time;\n    while (t > 0) {\n        t = $bm_sub(t, thisComp.frameDuration);\n        if (simulate)\n            propSpeed = getPropWorldSpeed($bm_sub(t, overlapDuration), thisProperty);\n        else\n            propSpeed = length(velocityAtTime(t));\n        if (propSpeed < threshold) {\n            fThrough = followThroughAtTime($bm_sub(t, overlapDuration));\n            break;\n        }\n    }\n    return linear(time, t, $bm_sum(t, $bm_mul(anticipationDuration, 2)), fThrough, zeroValue);\n}\nfunction smartSmooth(axis) {\n    var startKey = nearestKey(time);\n    var endKey = startKey;\n    if (time == startKey.time)\n        return 0;\n    if (time < startKey.time && startKey.index == 1)\n        return 0;\n    if (time > startKey.time && startKey.index == numKeys)\n        return 0;\n    if (time < startKey.time)\n        startKey = key($bm_sub(startKey.index, 1));\n    if (time > startKey.time)\n        endKey = key($bm_sum(startKey.index, 1));\n    var sI = 0.66;\n    var sO = 0.33;\n    var sIV = 1;\n    var sOV = 0;\n    var sVal = startKey.value;\n    var eVal = endKey.value;\n    if ($bm_isInstanceOfArray(value)) {\n        sVal = sVal[axis];\n        eVal = eVal[axis];\n    }\n    var sTime = startKey.time;\n    var eTime = endKey.time;\n    if (isKeyTop(startKey, axis))\n        sO = slowOut;\n    else {\n        var prevKey = key($bm_sub(startKey.index, 1));\n        var pVal = prevKey.value;\n        if ($bm_isInstanceOfArray(value))\n            pVal = pVal[axis];\n        sOV = $bm_div($bm_sub(sVal, pVal), $bm_sub(eVal, pVal));\n    }\n    if (isKeyTop(endKey, axis)) {\n        sI = slowIn;\n        if (endKey.index != numKeys) {\n            var nextKey = key($bm_sum(endKey.index, 1));\n            var nVal = nextKey.value;\n            if ($bm_isInstanceOfArray(value))\n                nVal = nVal[axis];\n            if (Math.abs(nVal - eVal) < 0.01 && doFollowThrough)\n                sI = 1;\n        }\n    } else {\n        var nextKey = key($bm_sum(endKey.index, 1));\n        var nVal = nextKey.value;\n        if ($bm_isInstanceOfArray(value))\n            nVal = nVal[axis];\n        sIV = $bm_div($bm_sub(eVal, sVal), $bm_sub(nVal, sVal));\n    }\n    if (endKey.index == numKeys && doFollowThrough) {\n        sI = 1;\n    }\n    var val = value;\n    if ($bm_isInstanceOfArray(value))\n        val = val[axis];\n    return $bm_sub(bezierInterpolation(time, sTime, eTime, sVal, eVal, [\n        sO,\n        sOV,\n        sI,\n        sIV\n    ]), val);\n}\nfunction overlap() {\n    var ol = zeroValue;\n    if (isThisPosition && !hasParent)\n        return zeroValue;\n    ol = $bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisProperty), getPropWorldValue(time, thisProperty));\n    var motionRatio = $bm_div($bm_div(length(zeroValue, ol), thisLayer.width), 2);\n    if (isThisPosition) {\n        var originalDistance = length(valueAtTime(0));\n        motionRatio = $bm_div(length(zeroValue, ol), thisComp.width);\n    }\n    ol = $bm_sum(ol, getPropWorldValue(time, thisProperty));\n    ol = $bm_sum(ol, $bm_mul($bm_mul($bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisLayer.anchorPoint), ol), motionRatio), flexibility));\n    ol = thisLayer.fromWorld(ol);\n    if (!isThisPosition)\n        ol = $bm_sub(ol, value);\n    else {\n        ol = linear(flexibility, 0, 100, $bm_div(ol, 2), 0);\n        var prevParentWorldPos = getLayerWorldPos($bm_sub(time, overlapDuration), parent);\n        ol = $bm_sum(ol, $bm_mul($bm_mul($bm_mul(thisLayer.fromWorld(prevParentWorldPos), motionRatio), flexibility), 5));\n    }\n    return ol;\n}\nvar okToGo = false;\nif (simulate && fx.enabled)\n    okToGo = true;\nelse if (numKeys > 1 && fx.enabled)\n    okToGo = true;\nif (okToGo) {\n    var smartSmoothResult = zeroValue;\n    if (doInterpolation) {\n        if ($bm_isInstanceOfArray(value)) {\n            if (value.length == 2)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1)\n                ];\n            else if (value.length == 3)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2)\n                ];\n            else if (value.length == 4)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2),\n                    smartSmooth(3)\n                ];\n        } else {\n            smartSmoothResult = smartSmooth(0);\n        }\n    }\n    if (doAnticipation)\n        result = $bm_sum(result, anticipate());\n    result = $bm_sum(result, smartSmoothResult);\n    if (doFollowThrough)\n        result = $bm_sum(result, followThrough());\n    if (doOverlap)\n        result = $bm_sum(result, overlap());\n}\n$bm_rt = result;",
                                "a": 1
                              },
                              "a": { "a": 0, "k": [0.0, 0.0] },
                              "s": { "a": 0, "k": [100.0, 100.0] },
                              "nm": "Transform",
                              "sk": { "a": 0, "k": 0.0 },
                              "sa": { "a": 0, "k": 0.0 }
                            }
                          ]
                        },
                        {
                          "ty": "gr",
                          "nm": "Group 5",
                          "bm": 0,
                          "mn": "ADBE Vector Group",
                          "it": [
                            {
                              "ty": "sh",
                              "nm": "Path 1",
                              "mn": "ADBE Vector Shape - Group",
                              "ind": 0,
                              "ks": {
                                "k": {
                                  "i": [
                                    [0.0, 0.0],
                                    [0.0, 0.0],
                                    [0.0, 0.0],
                                    [0.016, -0.055],
                                    [0.077, -0.028],
                                    [0.0, 0.0],
                                    [0.051, 0.029],
                                    [0.027, 0.073],
                                    [0.0, 0.0],
                                    [-0.019, 0.062],
                                    [-0.072, 0.026],
                                    [0.0, 0.0],
                                    [-0.058, -0.16],
                                    [0.0, 0.0],
                                    [0.0, 0.0],
                                    [0.0, 0.0],
                                    [-0.014, 0.061],
                                    [-0.077, 0.028],
                                    [0.0, 0.0],
                                    [-0.058, -0.16],
                                    [0.0, 0.0],
                                    [0.02, -0.057],
                                    [0.077, -0.028],
                                    [0.0, 0.0],
                                    [0.047, 0.031],
                                    [0.027, 0.073]
                                  ],
                                  "o": [
                                    [0.0, 0.0],
                                    [0.0, 0.0],
                                    [0.027, 0.073],
                                    [-0.016, 0.055],
                                    [0.0, 0.0],
                                    [-0.072, 0.026],
                                    [-0.052, -0.031],
                                    [0.0, 0.0],
                                    [-0.025, -0.069],
                                    [0.018, -0.061],
                                    [0.0, 0.0],
                                    [0.136, -0.049],
                                    [0.0, 0.0],
                                    [0.0, 0.0],
                                    [0.0, 0.0],
                                    [-0.025, -0.069],
                                    [0.014, -0.059],
                                    [0.0, 0.0],
                                    [0.14, -0.051],
                                    [0.0, 0.0],
                                    [0.027, 0.073],
                                    [-0.02, 0.055],
                                    [0.0, 0.0],
                                    [-0.077, 0.028],
                                    [-0.048, -0.032],
                                    [0.0, 0.0]
                                  ],
                                  "v": [
                                    [-117.602, 1.788],
                                    [-124.2, 4.183],
                                    [-122.529, 8.779],
                                    [-122.513, 8.972],
                                    [-122.652, 9.096],
                                    [-123.003, 9.224],
                                    [-123.189, 9.218],
                                    [-123.307, 9.061],
                                    [-126.844, -0.668],
                                    [-126.854, -0.863],
                                    [-126.717, -0.994],
                                    [-126.359, -1.124],
                                    [-126.069, -0.957],
                                    [-124.483, 3.406],
                                    [-117.885, 1.011],
                                    [-119.468, -3.345],
                                    [-119.485, -3.538],
                                    [-119.349, -3.669],
                                    [-118.991, -3.799],
                                    [-118.694, -3.634],
                                    [-115.154, 6.102],
                                    [-115.144, 6.298],
                                    [-115.29, 6.424],
                                    [-115.634, 6.549],
                                    [-115.82, 6.543],
                                    [-115.931, 6.384]
                                  ],
                                  "c": true
                                },
                                "a": 0
                              }
                            },
                            {
                              "ty": "fl",
                              "nm": "Fill 1",
                              "bm": 0,
                              "mn": "ADBE Vector Graphic - Fill",
                              "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] },
                              "o": { "a": 0, "k": 100.0 },
                              "r": 1
                            },
                            {
                              "ty": "tr",
                              "o": { "a": 0, "k": 100.0 },
                              "r": { "a": 0, "k": 0.0 },
                              "p": {
                                "k": [
                                  {
                                    "i": { "x": 0.667, "y": 1.0 },
                                    "o": { "x": 0.333, "y": 0.0 },
                                    "t": 31.261,
                                    "s": [0, 0],
                                    "ti": [0, 0],
                                    "to": [-1.037, -2.814]
                                  },
                                  {
                                    "i": { "x": 0.667, "y": 1.0 },
                                    "o": { "x": 0.333, "y": 0.0 },
                                    "t": 35.826,
                                    "s": [-6.222, -16.885],
                                    "ti": [-1.037, -2.814],
                                    "to": [0, 0]
                                  },
                                  { "t": 39.739, "s": [0, 0] }
                                ],
                                "x": "var $bm_rt;\nvar fx = effect('\u015dlosilo pli pura 3');\nvar doAnticipation = fx(1).value;\nvar doInterpolation = fx(2).value;\nvar doFollowThrough = fx(3).value;\nvar damping = $bm_div(fx(15).value, 10);\nvar elasticity = $bm_div(fx(13).value, 10);\nvar bounce = fx(17).value;\nvar anticipationDuration = fx(5).value;\nvar anticipationQuantity = $bm_div(fx(6).value, 100);\nvar slowIn = $bm_div(fx(9).value, 100);\nvar slowOut = $bm_div(fx(10).value, 100);\nvar spatialMode = fx(21).value;\nvar spatialDoInterpolation = fx(20).value;\nvar moBlurPrecision = fx(32).value;\nvar elasticityRandom = fx(14).value;\nvar dampingRandom = fx(16).value;\nvar softBody = fx(28).value;\nvar flexibility = $bm_div(fx(29).value, 100);\nvar doOverlap = fx(23).value;\nvar overlapDuration = fx(24).value;\nvar overlapRandom = fx(25).value;\nvar threshold = $bm_div($bm_div(1, moBlurPrecision), 1000);\nvar zeroValue;\nif ($bm_isInstanceOfArray(value)) {\n    if (value.length == 2)\n        zeroValue = [\n            0,\n            0\n        ];\n    else if (value.length == 3)\n        zeroValue = [\n            0,\n            0,\n            0\n        ];\n    else if (value.length == 4)\n        zeroValue = [\n            0,\n            0,\n            0,\n            0\n        ];\n} else\n    zeroValue = 0;\nvar isThisSpatial = isSpatial(thisProperty);\nvar isThisPosition = thisProperty === $bm_transform.position;\nvar simulate = false;\nif (isThisSpatial) {\n    doInterpolation = doInterpolation && spatialDoInterpolation;\n    if (isThisPosition && thisProperty.numKeys > 0) {\n        doOverlap = false;\n        simulate = false;\n    } else {\n        simulate = spatialMode == 2;\n        doOverlap = overlapDuration != 0 && doOverlap && simulate;\n    }\n} else {\n    doOverlap = false;\n}\nif (!doOverlap) {\n    overlapDuration = 0;\n}\nif (simulate && softBody && isThisSpatial && !isThisPosition && (doFollowThrough || doOverlap)) {\n    var distanceRatio = $bm_div(length(valueAtTime(0), $bm_transform.anchorPoint), $bm_div(thisLayer.width, 2));\n    distanceRatio = $bm_div($bm_sum(1, $bm_mul(distanceRatio, flexibility)), 2);\n    if (doFollowThrough) {\n        elasticity = $bm_div(elasticity, distanceRatio);\n        damping = $bm_div(damping, distanceRatio);\n    }\n    if (doOverlap) {\n        overlapDuration = $bm_mul(overlapDuration, distanceRatio);\n    }\n}\nseedRandom(0, true);\nif (doFollowThrough) {\n    if (elasticityRandom > 0)\n        elasticity = addNoise(elasticity, elasticityRandom);\n    if (dampingRandom > 0)\n        damping = addNoise(damping, dampingRandom);\n}\nif (doOverlap) {\n    if (doOverlap && overlapRandom > 0)\n        overlapDuration = addNoise(overlapDuration, overlapRandom);\n}\nvar result = value;\nfunction isSpatial(prop) {\n    if (!(prop.value instanceof Array))\n        return false;\n    if (prop.value.length != 2 && prop.value.length != 3)\n        return false;\n    try {\n        if (typeof prop.speed !== 'undefined')\n            return true;\n    } catch (e) {\n        return false;\n    }\n}\nfunction addNoise(val, quantity) {\n    var randomValue = random(0.9, 1.1);\n    var noiseValue = noise($bm_mul(valueAtTime(0), randomValue));\n    noiseValue = $bm_mul(noiseValue, $bm_div(quantity, 100));\n    return $bm_mul(val, $bm_sum(noiseValue, 1));\n}\nfunction isAfterLastKey() {\n    if (numKeys == 0)\n        return false;\n    var nKey = nearestKey(time);\n    return nKey.time <= time && nKey.index == numKeys;\n}\nfunction isStill(t, threshold) {\n    var d = $bm_sub(valueAtTime(t), valueAtTime($bm_sum(t, framesToTime(1))));\n    if ($bm_isInstanceOfArray(d)) {\n        for (var i = 0; i < d.length; i++) {\n            d[i] = Math.abs(d[i]);\n            if (d[i] >= threshold) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        d = Math.abs(d);\n        return d < threshold;\n    }\n}\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\n    if (arguments.length !== 5 && arguments.length !== 6)\n        return t;\n    var a = $bm_sub(value2, value1);\n    var b = $bm_sub(tMax, tMin);\n    if (b == 0)\n        return t;\n    var c = clamp($bm_div($bm_sub(t, tMin), b), 0, 1);\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4)\n        bezierPoints = [\n            0.33,\n            0,\n            0.66,\n            1\n        ];\n    return $bm_sum($bm_mul(a, h(c, bezierPoints)), value1);\n    function h(f, g) {\n        var x = $bm_mul(3, g[0]);\n        var j = $bm_sub($bm_mul(3, $bm_sub(g[2], g[0])), x);\n        var k = $bm_sub($bm_sub(1, x), j);\n        var l = $bm_mul(3, g[1]);\n        var m = $bm_sub($bm_mul(3, $bm_sub(g[3], g[1])), l);\n        var n = $bm_sub($bm_sub(1, l), m);\n        var d = f;\n        for (var i = 0; i < 5; i++) {\n            var z = $bm_sub($bm_mul(d, $bm_sum(x, $bm_mul(d, $bm_sum(j, $bm_mul(d, k))))), f);\n            if (Math.abs(z) < 0.001)\n                break;\n            d = $bm_sub(d, $bm_div(z, $bm_sum(x, $bm_mul(d, $bm_sum($bm_mul(2, j), $bm_mul($bm_mul(3, k), d))))));\n        }\n        return $bm_mul(d, $bm_sum(l, $bm_mul(d, $bm_sum(m, $bm_mul(d, n)))));\n    }\n}\nfunction getPropWorldSpeed(t, prop) {\n    return length(getPropWorldVelocity(t, prop));\n}\nfunction getPrevKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time <= t)\n        return nKey;\n    if (nKey.index > 1)\n        return key($bm_sub(nKey.index, 1));\n    return null;\n}\nfunction getNextKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time >= t)\n        return nKey;\n    if (nKey.index < numKeys)\n        return key($bm_sum(nKey.index, 1));\n    return null;\n}\nfunction getPropWorldVelocity(t, prop) {\n    return $bm_mul($bm_sub(getPropWorldValue($bm_sum(t, 0.005), prop), getPropWorldValue($bm_sub(t, 0.005), prop)), 100);\n}\nfunction getLayerWorldPos(t, l) {\n    return l.toWorld(l.anchorPoint, t);\n}\nfunction getPropWorldValue(t, prop) {\n    if (isPosition(prop))\n        return getLayerWorldPos(t, thisLayer);\n    return thisLayer.toWorld(prop.valueAtTime(t), t);\n}\nfunction isPosition(prop) {\n    return prop === $bm_transform.position;\n}\nfunction isKeyTop(k, axis) {\n    var prevSpeed = velocityAtTime($bm_sub(k.time, threshold));\n    var nextSpeed = velocityAtTime($bm_sum(k.time, threshold));\n    if ($bm_isInstanceOfArray(value)) {\n        prevSpeed = prevSpeed[axis];\n        nextSpeed = nextSpeed[axis];\n    }\n    if (Math.abs(prevSpeed) < 0.01 || Math.abs(nextSpeed) < 0.01)\n        return true;\n    return $bm_mul(prevSpeed, nextSpeed) < 0;\n}\nfunction anticipate() {\n    var anticipation = zeroValue;\n    if (isAfterLastKey())\n        return anticipation;\n    if (numKeys < 2)\n        return anticipation;\n    var nextKey = getNextKey(time);\n    var aKey = nextKey;\n    if (!isStill(aKey.time - 0.1, 0.1)) {\n        aKey = getPrevKey(time);\n        if (!isStill(aKey.time - 0.1, 0.1))\n            return anticipation;\n    }\n    if (aKey.index == numKeys)\n        return anticipation;\n    var anticipationMiddle = aKey.time;\n    var anticipationStart = $bm_sub(anticipationMiddle, anticipationDuration);\n    var anticipationEnd = key(aKey.index + 1).time;\n    var startValue = anticipation;\n    var midValue = $bm_mul($bm_sum($bm_neg(valueAtTime($bm_sum(anticipationMiddle, anticipationDuration))), aKey.value), anticipationQuantity);\n    var endValue = anticipation;\n    if (time < anticipationStart) {\n        return anticipation;\n    } else if (time < anticipationMiddle) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue[i], midValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue, midValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else if (time <= anticipationEnd) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue[i], endValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue, endValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else {\n        return anticipation;\n    }\n}\nfunction followThroughAtTime(t) {\n    var fThrough = zeroValue;\n    if (elasticity == 0)\n        return fThrough;\n    var propSpeed;\n    if (!simulate) {\n        if (numKeys < 2)\n            return fThrough;\n        if (nearestKey(t).index == 1)\n            return fThrough;\n        propSpeed = length(velocityAtTime(t));\n        if (propSpeed >= threshold)\n            return fThrough;\n    } else {\n        propSpeed = getPropWorldSpeed(t, thisProperty);\n        if (propSpeed >= threshold)\n            return fThrough;\n    }\n    var fThroughStart = 0;\n    var fThroughTime = 0;\n    if (simulate) {\n        var speedI = getPropWorldSpeed(t, thisProperty);\n        var i = t;\n        while (speedI < threshold && i > 0) {\n            i = $bm_sub(i, $bm_div(thisComp.frameDuration, moBlurPrecision));\n            speedI = getPropWorldSpeed(i, thisProperty);\n        }\n        fThroughStart = i;\n    } else {\n        var fThroughKey = getPrevKey(t);\n        fThroughStart = fThroughKey.time;\n    }\n    if (fThroughStart == 0)\n        return fThrough;\n    fThroughTime = $bm_sub(t, fThroughStart);\n    if (simulate)\n        fThrough = $bm_div(getPropWorldVelocity($bm_sub(fThroughStart, thisComp.frameDuration), thisProperty), 2);\n    else\n        fThrough = $bm_div(velocityAtTime($bm_sub(fThroughStart, thisComp.frameDuration)), 2);\n    if (bounce) {\n        var cycleDamp = Math.exp($bm_mul($bm_mul(fThroughTime, damping), 0.1));\n        var damp = $bm_div(Math.exp($bm_mul(fThroughTime, damping)), $bm_div(elasticity, 2));\n        var cycleDuration = $bm_div(1, $bm_mul(elasticity, 2));\n        cycleDuration = Math.round(timeToFrames(cycleDuration));\n        cycleDuration = framesToTime(cycleDuration);\n        var midDuration = $bm_div(cycleDuration, 2);\n        var maxValue = $bm_mul(fThrough, midDuration);\n        var cycvarime = fThroughTime;\n        var numEndCycles = 1;\n        while (cycvarime > cycleDuration) {\n            cycvarime = $bm_sub(cycvarime, cycleDuration);\n            cycleDuration = $bm_div(cycleDuration, cycleDamp);\n            cycleDuration = Math.round(timeToFrames(cycleDuration));\n            if (cycleDuration < 2) {\n                cycleDuration = 2;\n                numEndCycles++;\n            }\n            cycleDuration = framesToTime(cycleDuration);\n            midDuration = $bm_div(cycleDuration, 2);\n            maxValue = $bm_div($bm_mul(fThrough, midDuration), damp);\n            if (numEndCycles > 100 / damping && maxValue < threshold)\n                return zeroValue;\n        }\n        if (cycvarime < midDuration)\n            fThrough = bezierInterpolation(cycvarime, 0, midDuration, 0, maxValue, [\n                0,\n                0.1,\n                slowIn,\n                1\n            ]);\n        else\n            fThrough = bezierInterpolation(cycvarime, midDuration, cycleDuration, maxValue, 0, [\n                $bm_sub(1, slowIn),\n                0,\n                1,\n                0.9\n            ]);\n    } else {\n        var damp = Math.exp($bm_mul(fThroughTime, damping));\n        var sinus = $bm_mul($bm_mul($bm_mul(elasticity, fThroughTime), 2), Math.PI);\n        sinus = Math.sin(sinus);\n        sinus = $bm_mul($bm_div(0.3, elasticity), sinus);\n        sinus = $bm_div(sinus, damp);\n        if (Math.abs(sinus) < $bm_div(threshold, 100))\n            return 0;\n        fThrough = $bm_mul(fThrough, sinus);\n        if (threshold > 0) {\n            fThrough = $bm_mul(fThrough, $bm_sub(1, $bm_div(propSpeed, threshold)));\n        }\n    }\n    if (bounce) {\n        var prevValue = valueAtTime($bm_sub(fThroughStart, thisComp.frameDuration));\n        var startValue = valueAtTime(fThroughStart);\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < prevValue.length; i++) {\n                if (prevValue[i] > startValue[i])\n                    fThrough[i] = Math.abs(fThrough[i]);\n                if (prevValue[i] < startValue[i])\n                    fThrough[i] = $bm_neg(Math.abs(fThrough[i]));\n            }\n        } else {\n            if (prevValue > startValue)\n                fThrough = Math.abs(fThrough);\n            if (prevValue < startValue)\n                fThrough = $bm_neg(Math.abs(fThrough));\n        }\n    }\n    if (simulate) {\n        if (!isThisPosition) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer));\n            fThrough = $bm_sub(thisLayer.fromWorld(fThrough), thisLayer.anchorPoint);\n        } else if (thisLayer.hasParent) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer.parent));\n            fThrough = $bm_sub(thisLayer.parent.fromWorld(fThrough), thisLayer.parent.anchorPoint);\n        }\n    }\n    return fThrough;\n}\nfunction followThrough() {\n    var propSpeed = length(velocity);\n    if (propSpeed < threshold)\n        return followThroughAtTime($bm_sub(time, overlapDuration));\n    var fThrough = zeroValue;\n    var t = time;\n    while (t > 0) {\n        t = $bm_sub(t, thisComp.frameDuration);\n        if (simulate)\n            propSpeed = getPropWorldSpeed($bm_sub(t, overlapDuration), thisProperty);\n        else\n            propSpeed = length(velocityAtTime(t));\n        if (propSpeed < threshold) {\n            fThrough = followThroughAtTime($bm_sub(t, overlapDuration));\n            break;\n        }\n    }\n    return linear(time, t, $bm_sum(t, $bm_mul(anticipationDuration, 2)), fThrough, zeroValue);\n}\nfunction smartSmooth(axis) {\n    var startKey = nearestKey(time);\n    var endKey = startKey;\n    if (time == startKey.time)\n        return 0;\n    if (time < startKey.time && startKey.index == 1)\n        return 0;\n    if (time > startKey.time && startKey.index == numKeys)\n        return 0;\n    if (time < startKey.time)\n        startKey = key($bm_sub(startKey.index, 1));\n    if (time > startKey.time)\n        endKey = key($bm_sum(startKey.index, 1));\n    var sI = 0.66;\n    var sO = 0.33;\n    var sIV = 1;\n    var sOV = 0;\n    var sVal = startKey.value;\n    var eVal = endKey.value;\n    if ($bm_isInstanceOfArray(value)) {\n        sVal = sVal[axis];\n        eVal = eVal[axis];\n    }\n    var sTime = startKey.time;\n    var eTime = endKey.time;\n    if (isKeyTop(startKey, axis))\n        sO = slowOut;\n    else {\n        var prevKey = key($bm_sub(startKey.index, 1));\n        var pVal = prevKey.value;\n        if ($bm_isInstanceOfArray(value))\n            pVal = pVal[axis];\n        sOV = $bm_div($bm_sub(sVal, pVal), $bm_sub(eVal, pVal));\n    }\n    if (isKeyTop(endKey, axis)) {\n        sI = slowIn;\n        if (endKey.index != numKeys) {\n            var nextKey = key($bm_sum(endKey.index, 1));\n            var nVal = nextKey.value;\n            if ($bm_isInstanceOfArray(value))\n                nVal = nVal[axis];\n            if (Math.abs(nVal - eVal) < 0.01 && doFollowThrough)\n                sI = 1;\n        }\n    } else {\n        var nextKey = key($bm_sum(endKey.index, 1));\n        var nVal = nextKey.value;\n        if ($bm_isInstanceOfArray(value))\n            nVal = nVal[axis];\n        sIV = $bm_div($bm_sub(eVal, sVal), $bm_sub(nVal, sVal));\n    }\n    if (endKey.index == numKeys && doFollowThrough) {\n        sI = 1;\n    }\n    var val = value;\n    if ($bm_isInstanceOfArray(value))\n        val = val[axis];\n    return $bm_sub(bezierInterpolation(time, sTime, eTime, sVal, eVal, [\n        sO,\n        sOV,\n        sI,\n        sIV\n    ]), val);\n}\nfunction overlap() {\n    var ol = zeroValue;\n    if (isThisPosition && !hasParent)\n        return zeroValue;\n    ol = $bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisProperty), getPropWorldValue(time, thisProperty));\n    var motionRatio = $bm_div($bm_div(length(zeroValue, ol), thisLayer.width), 2);\n    if (isThisPosition) {\n        var originalDistance = length(valueAtTime(0));\n        motionRatio = $bm_div(length(zeroValue, ol), thisComp.width);\n    }\n    ol = $bm_sum(ol, getPropWorldValue(time, thisProperty));\n    ol = $bm_sum(ol, $bm_mul($bm_mul($bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisLayer.anchorPoint), ol), motionRatio), flexibility));\n    ol = thisLayer.fromWorld(ol);\n    if (!isThisPosition)\n        ol = $bm_sub(ol, value);\n    else {\n        ol = linear(flexibility, 0, 100, $bm_div(ol, 2), 0);\n        var prevParentWorldPos = getLayerWorldPos($bm_sub(time, overlapDuration), parent);\n        ol = $bm_sum(ol, $bm_mul($bm_mul($bm_mul(thisLayer.fromWorld(prevParentWorldPos), motionRatio), flexibility), 5));\n    }\n    return ol;\n}\nvar okToGo = false;\nif (simulate && fx.enabled)\n    okToGo = true;\nelse if (numKeys > 1 && fx.enabled)\n    okToGo = true;\nif (okToGo) {\n    var smartSmoothResult = zeroValue;\n    if (doInterpolation) {\n        if ($bm_isInstanceOfArray(value)) {\n            if (value.length == 2)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1)\n                ];\n            else if (value.length == 3)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2)\n                ];\n            else if (value.length == 4)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2),\n                    smartSmooth(3)\n                ];\n        } else {\n            smartSmoothResult = smartSmooth(0);\n        }\n    }\n    if (doAnticipation)\n        result = $bm_sum(result, anticipate());\n    result = $bm_sum(result, smartSmoothResult);\n    if (doFollowThrough)\n        result = $bm_sum(result, followThrough());\n    if (doOverlap)\n        result = $bm_sum(result, overlap());\n}\n$bm_rt = result;",
                                "a": 1
                              },
                              "a": { "a": 0, "k": [0.0, 0.0] },
                              "s": { "a": 0, "k": [100.0, 100.0] },
                              "nm": "Transform",
                              "sk": { "a": 0, "k": 0.0 },
                              "sa": { "a": 0, "k": 0.0 }
                            }
                          ]
                        },
                        {
                          "ty": "gr",
                          "nm": "Group 6",
                          "bm": 0,
                          "mn": "ADBE Vector Group",
                          "it": [
                            {
                              "ty": "sh",
                              "nm": "Path 1",
                              "mn": "ADBE Vector Shape - Group",
                              "ind": 0,
                              "ks": {
                                "k": {
                                  "i": [
                                    [0.0, 0.0],
                                    [-0.167, 0.06],
                                    [0.0, 0.0],
                                    [-0.058, -0.028],
                                    [-0.029, -0.078],
                                    [0.0, 0.0],
                                    [0.167, -0.061],
                                    [0.0, 0.0],
                                    [0.06, 0.165]
                                  ],
                                  "o": [
                                    [-0.06, -0.165],
                                    [0.0, 0.0],
                                    [0.081, -0.029],
                                    [0.059, 0.029],
                                    [0.0, 0.0],
                                    [0.06, 0.165],
                                    [0.0, 0.0],
                                    [-0.167, 0.06],
                                    [0.0, 0.0]
                                  ],
                                  "v": [
                                    [-134.03, 1.941],
                                    [-133.869, 1.602],
                                    [-133.592, 1.501],
                                    [-133.383, 1.499],
                                    [-133.252, 1.658],
                                    [-129.718, 11.381],
                                    [-129.878, 11.719],
                                    [-130.155, 11.82],
                                    [-130.496, 11.663]
                                  ],
                                  "c": true
                                },
                                "a": 0
                              }
                            },
                            {
                              "ty": "fl",
                              "nm": "Fill 1",
                              "bm": 0,
                              "mn": "ADBE Vector Graphic - Fill",
                              "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] },
                              "o": { "a": 0, "k": 100.0 },
                              "r": 1
                            },
                            {
                              "ty": "tr",
                              "o": { "a": 0, "k": 100.0 },
                              "r": { "a": 0, "k": 0.0 },
                              "p": {
                                "k": [
                                  {
                                    "i": { "x": 0.667, "y": 1.0 },
                                    "o": { "x": 0.333, "y": 0.0 },
                                    "t": 26.695,
                                    "s": [0, 0],
                                    "ti": [0, 0],
                                    "to": [-1.037, -2.814]
                                  },
                                  {
                                    "i": { "x": 0.667, "y": 1.0 },
                                    "o": { "x": 0.333, "y": 0.0 },
                                    "t": 31.261,
                                    "s": [-6.222, -16.885],
                                    "ti": [-1.037, -2.814],
                                    "to": [0, 0]
                                  },
                                  { "t": 35.174, "s": [0, 0] }
                                ],
                                "x": "var $bm_rt;\nvar fx = effect('\u015dlosilo pli pura 3');\nvar doAnticipation = fx(1).value;\nvar doInterpolation = fx(2).value;\nvar doFollowThrough = fx(3).value;\nvar damping = $bm_div(fx(15).value, 10);\nvar elasticity = $bm_div(fx(13).value, 10);\nvar bounce = fx(17).value;\nvar anticipationDuration = fx(5).value;\nvar anticipationQuantity = $bm_div(fx(6).value, 100);\nvar slowIn = $bm_div(fx(9).value, 100);\nvar slowOut = $bm_div(fx(10).value, 100);\nvar spatialMode = fx(21).value;\nvar spatialDoInterpolation = fx(20).value;\nvar moBlurPrecision = fx(32).value;\nvar elasticityRandom = fx(14).value;\nvar dampingRandom = fx(16).value;\nvar softBody = fx(28).value;\nvar flexibility = $bm_div(fx(29).value, 100);\nvar doOverlap = fx(23).value;\nvar overlapDuration = fx(24).value;\nvar overlapRandom = fx(25).value;\nvar threshold = $bm_div($bm_div(1, moBlurPrecision), 1000);\nvar zeroValue;\nif ($bm_isInstanceOfArray(value)) {\n    if (value.length == 2)\n        zeroValue = [\n            0,\n            0\n        ];\n    else if (value.length == 3)\n        zeroValue = [\n            0,\n            0,\n            0\n        ];\n    else if (value.length == 4)\n        zeroValue = [\n            0,\n            0,\n            0,\n            0\n        ];\n} else\n    zeroValue = 0;\nvar isThisSpatial = isSpatial(thisProperty);\nvar isThisPosition = thisProperty === $bm_transform.position;\nvar simulate = false;\nif (isThisSpatial) {\n    doInterpolation = doInterpolation && spatialDoInterpolation;\n    if (isThisPosition && thisProperty.numKeys > 0) {\n        doOverlap = false;\n        simulate = false;\n    } else {\n        simulate = spatialMode == 2;\n        doOverlap = overlapDuration != 0 && doOverlap && simulate;\n    }\n} else {\n    doOverlap = false;\n}\nif (!doOverlap) {\n    overlapDuration = 0;\n}\nif (simulate && softBody && isThisSpatial && !isThisPosition && (doFollowThrough || doOverlap)) {\n    var distanceRatio = $bm_div(length(valueAtTime(0), $bm_transform.anchorPoint), $bm_div(thisLayer.width, 2));\n    distanceRatio = $bm_div($bm_sum(1, $bm_mul(distanceRatio, flexibility)), 2);\n    if (doFollowThrough) {\n        elasticity = $bm_div(elasticity, distanceRatio);\n        damping = $bm_div(damping, distanceRatio);\n    }\n    if (doOverlap) {\n        overlapDuration = $bm_mul(overlapDuration, distanceRatio);\n    }\n}\nseedRandom(0, true);\nif (doFollowThrough) {\n    if (elasticityRandom > 0)\n        elasticity = addNoise(elasticity, elasticityRandom);\n    if (dampingRandom > 0)\n        damping = addNoise(damping, dampingRandom);\n}\nif (doOverlap) {\n    if (doOverlap && overlapRandom > 0)\n        overlapDuration = addNoise(overlapDuration, overlapRandom);\n}\nvar result = value;\nfunction isSpatial(prop) {\n    if (!(prop.value instanceof Array))\n        return false;\n    if (prop.value.length != 2 && prop.value.length != 3)\n        return false;\n    try {\n        if (typeof prop.speed !== 'undefined')\n            return true;\n    } catch (e) {\n        return false;\n    }\n}\nfunction addNoise(val, quantity) {\n    var randomValue = random(0.9, 1.1);\n    var noiseValue = noise($bm_mul(valueAtTime(0), randomValue));\n    noiseValue = $bm_mul(noiseValue, $bm_div(quantity, 100));\n    return $bm_mul(val, $bm_sum(noiseValue, 1));\n}\nfunction isAfterLastKey() {\n    if (numKeys == 0)\n        return false;\n    var nKey = nearestKey(time);\n    return nKey.time <= time && nKey.index == numKeys;\n}\nfunction isStill(t, threshold) {\n    var d = $bm_sub(valueAtTime(t), valueAtTime($bm_sum(t, framesToTime(1))));\n    if ($bm_isInstanceOfArray(d)) {\n        for (var i = 0; i < d.length; i++) {\n            d[i] = Math.abs(d[i]);\n            if (d[i] >= threshold) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        d = Math.abs(d);\n        return d < threshold;\n    }\n}\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\n    if (arguments.length !== 5 && arguments.length !== 6)\n        return t;\n    var a = $bm_sub(value2, value1);\n    var b = $bm_sub(tMax, tMin);\n    if (b == 0)\n        return t;\n    var c = clamp($bm_div($bm_sub(t, tMin), b), 0, 1);\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4)\n        bezierPoints = [\n            0.33,\n            0,\n            0.66,\n            1\n        ];\n    return $bm_sum($bm_mul(a, h(c, bezierPoints)), value1);\n    function h(f, g) {\n        var x = $bm_mul(3, g[0]);\n        var j = $bm_sub($bm_mul(3, $bm_sub(g[2], g[0])), x);\n        var k = $bm_sub($bm_sub(1, x), j);\n        var l = $bm_mul(3, g[1]);\n        var m = $bm_sub($bm_mul(3, $bm_sub(g[3], g[1])), l);\n        var n = $bm_sub($bm_sub(1, l), m);\n        var d = f;\n        for (var i = 0; i < 5; i++) {\n            var z = $bm_sub($bm_mul(d, $bm_sum(x, $bm_mul(d, $bm_sum(j, $bm_mul(d, k))))), f);\n            if (Math.abs(z) < 0.001)\n                break;\n            d = $bm_sub(d, $bm_div(z, $bm_sum(x, $bm_mul(d, $bm_sum($bm_mul(2, j), $bm_mul($bm_mul(3, k), d))))));\n        }\n        return $bm_mul(d, $bm_sum(l, $bm_mul(d, $bm_sum(m, $bm_mul(d, n)))));\n    }\n}\nfunction getPropWorldSpeed(t, prop) {\n    return length(getPropWorldVelocity(t, prop));\n}\nfunction getPrevKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time <= t)\n        return nKey;\n    if (nKey.index > 1)\n        return key($bm_sub(nKey.index, 1));\n    return null;\n}\nfunction getNextKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time >= t)\n        return nKey;\n    if (nKey.index < numKeys)\n        return key($bm_sum(nKey.index, 1));\n    return null;\n}\nfunction getPropWorldVelocity(t, prop) {\n    return $bm_mul($bm_sub(getPropWorldValue($bm_sum(t, 0.005), prop), getPropWorldValue($bm_sub(t, 0.005), prop)), 100);\n}\nfunction getLayerWorldPos(t, l) {\n    return l.toWorld(l.anchorPoint, t);\n}\nfunction getPropWorldValue(t, prop) {\n    if (isPosition(prop))\n        return getLayerWorldPos(t, thisLayer);\n    return thisLayer.toWorld(prop.valueAtTime(t), t);\n}\nfunction isPosition(prop) {\n    return prop === $bm_transform.position;\n}\nfunction isKeyTop(k, axis) {\n    var prevSpeed = velocityAtTime($bm_sub(k.time, threshold));\n    var nextSpeed = velocityAtTime($bm_sum(k.time, threshold));\n    if ($bm_isInstanceOfArray(value)) {\n        prevSpeed = prevSpeed[axis];\n        nextSpeed = nextSpeed[axis];\n    }\n    if (Math.abs(prevSpeed) < 0.01 || Math.abs(nextSpeed) < 0.01)\n        return true;\n    return $bm_mul(prevSpeed, nextSpeed) < 0;\n}\nfunction anticipate() {\n    var anticipation = zeroValue;\n    if (isAfterLastKey())\n        return anticipation;\n    if (numKeys < 2)\n        return anticipation;\n    var nextKey = getNextKey(time);\n    var aKey = nextKey;\n    if (!isStill(aKey.time - 0.1, 0.1)) {\n        aKey = getPrevKey(time);\n        if (!isStill(aKey.time - 0.1, 0.1))\n            return anticipation;\n    }\n    if (aKey.index == numKeys)\n        return anticipation;\n    var anticipationMiddle = aKey.time;\n    var anticipationStart = $bm_sub(anticipationMiddle, anticipationDuration);\n    var anticipationEnd = key(aKey.index + 1).time;\n    var startValue = anticipation;\n    var midValue = $bm_mul($bm_sum($bm_neg(valueAtTime($bm_sum(anticipationMiddle, anticipationDuration))), aKey.value), anticipationQuantity);\n    var endValue = anticipation;\n    if (time < anticipationStart) {\n        return anticipation;\n    } else if (time < anticipationMiddle) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue[i], midValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue, midValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else if (time <= anticipationEnd) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue[i], endValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue, endValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else {\n        return anticipation;\n    }\n}\nfunction followThroughAtTime(t) {\n    var fThrough = zeroValue;\n    if (elasticity == 0)\n        return fThrough;\n    var propSpeed;\n    if (!simulate) {\n        if (numKeys < 2)\n            return fThrough;\n        if (nearestKey(t).index == 1)\n            return fThrough;\n        propSpeed = length(velocityAtTime(t));\n        if (propSpeed >= threshold)\n            return fThrough;\n    } else {\n        propSpeed = getPropWorldSpeed(t, thisProperty);\n        if (propSpeed >= threshold)\n            return fThrough;\n    }\n    var fThroughStart = 0;\n    var fThroughTime = 0;\n    if (simulate) {\n        var speedI = getPropWorldSpeed(t, thisProperty);\n        var i = t;\n        while (speedI < threshold && i > 0) {\n            i = $bm_sub(i, $bm_div(thisComp.frameDuration, moBlurPrecision));\n            speedI = getPropWorldSpeed(i, thisProperty);\n        }\n        fThroughStart = i;\n    } else {\n        var fThroughKey = getPrevKey(t);\n        fThroughStart = fThroughKey.time;\n    }\n    if (fThroughStart == 0)\n        return fThrough;\n    fThroughTime = $bm_sub(t, fThroughStart);\n    if (simulate)\n        fThrough = $bm_div(getPropWorldVelocity($bm_sub(fThroughStart, thisComp.frameDuration), thisProperty), 2);\n    else\n        fThrough = $bm_div(velocityAtTime($bm_sub(fThroughStart, thisComp.frameDuration)), 2);\n    if (bounce) {\n        var cycleDamp = Math.exp($bm_mul($bm_mul(fThroughTime, damping), 0.1));\n        var damp = $bm_div(Math.exp($bm_mul(fThroughTime, damping)), $bm_div(elasticity, 2));\n        var cycleDuration = $bm_div(1, $bm_mul(elasticity, 2));\n        cycleDuration = Math.round(timeToFrames(cycleDuration));\n        cycleDuration = framesToTime(cycleDuration);\n        var midDuration = $bm_div(cycleDuration, 2);\n        var maxValue = $bm_mul(fThrough, midDuration);\n        var cycvarime = fThroughTime;\n        var numEndCycles = 1;\n        while (cycvarime > cycleDuration) {\n            cycvarime = $bm_sub(cycvarime, cycleDuration);\n            cycleDuration = $bm_div(cycleDuration, cycleDamp);\n            cycleDuration = Math.round(timeToFrames(cycleDuration));\n            if (cycleDuration < 2) {\n                cycleDuration = 2;\n                numEndCycles++;\n            }\n            cycleDuration = framesToTime(cycleDuration);\n            midDuration = $bm_div(cycleDuration, 2);\n            maxValue = $bm_div($bm_mul(fThrough, midDuration), damp);\n            if (numEndCycles > 100 / damping && maxValue < threshold)\n                return zeroValue;\n        }\n        if (cycvarime < midDuration)\n            fThrough = bezierInterpolation(cycvarime, 0, midDuration, 0, maxValue, [\n                0,\n                0.1,\n                slowIn,\n                1\n            ]);\n        else\n            fThrough = bezierInterpolation(cycvarime, midDuration, cycleDuration, maxValue, 0, [\n                $bm_sub(1, slowIn),\n                0,\n                1,\n                0.9\n            ]);\n    } else {\n        var damp = Math.exp($bm_mul(fThroughTime, damping));\n        var sinus = $bm_mul($bm_mul($bm_mul(elasticity, fThroughTime), 2), Math.PI);\n        sinus = Math.sin(sinus);\n        sinus = $bm_mul($bm_div(0.3, elasticity), sinus);\n        sinus = $bm_div(sinus, damp);\n        if (Math.abs(sinus) < $bm_div(threshold, 100))\n            return 0;\n        fThrough = $bm_mul(fThrough, sinus);\n        if (threshold > 0) {\n            fThrough = $bm_mul(fThrough, $bm_sub(1, $bm_div(propSpeed, threshold)));\n        }\n    }\n    if (bounce) {\n        var prevValue = valueAtTime($bm_sub(fThroughStart, thisComp.frameDuration));\n        var startValue = valueAtTime(fThroughStart);\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < prevValue.length; i++) {\n                if (prevValue[i] > startValue[i])\n                    fThrough[i] = Math.abs(fThrough[i]);\n                if (prevValue[i] < startValue[i])\n                    fThrough[i] = $bm_neg(Math.abs(fThrough[i]));\n            }\n        } else {\n            if (prevValue > startValue)\n                fThrough = Math.abs(fThrough);\n            if (prevValue < startValue)\n                fThrough = $bm_neg(Math.abs(fThrough));\n        }\n    }\n    if (simulate) {\n        if (!isThisPosition) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer));\n            fThrough = $bm_sub(thisLayer.fromWorld(fThrough), thisLayer.anchorPoint);\n        } else if (thisLayer.hasParent) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer.parent));\n            fThrough = $bm_sub(thisLayer.parent.fromWorld(fThrough), thisLayer.parent.anchorPoint);\n        }\n    }\n    return fThrough;\n}\nfunction followThrough() {\n    var propSpeed = length(velocity);\n    if (propSpeed < threshold)\n        return followThroughAtTime($bm_sub(time, overlapDuration));\n    var fThrough = zeroValue;\n    var t = time;\n    while (t > 0) {\n        t = $bm_sub(t, thisComp.frameDuration);\n        if (simulate)\n            propSpeed = getPropWorldSpeed($bm_sub(t, overlapDuration), thisProperty);\n        else\n            propSpeed = length(velocityAtTime(t));\n        if (propSpeed < threshold) {\n            fThrough = followThroughAtTime($bm_sub(t, overlapDuration));\n            break;\n        }\n    }\n    return linear(time, t, $bm_sum(t, $bm_mul(anticipationDuration, 2)), fThrough, zeroValue);\n}\nfunction smartSmooth(axis) {\n    var startKey = nearestKey(time);\n    var endKey = startKey;\n    if (time == startKey.time)\n        return 0;\n    if (time < startKey.time && startKey.index == 1)\n        return 0;\n    if (time > startKey.time && startKey.index == numKeys)\n        return 0;\n    if (time < startKey.time)\n        startKey = key($bm_sub(startKey.index, 1));\n    if (time > startKey.time)\n        endKey = key($bm_sum(startKey.index, 1));\n    var sI = 0.66;\n    var sO = 0.33;\n    var sIV = 1;\n    var sOV = 0;\n    var sVal = startKey.value;\n    var eVal = endKey.value;\n    if ($bm_isInstanceOfArray(value)) {\n        sVal = sVal[axis];\n        eVal = eVal[axis];\n    }\n    var sTime = startKey.time;\n    var eTime = endKey.time;\n    if (isKeyTop(startKey, axis))\n        sO = slowOut;\n    else {\n        var prevKey = key($bm_sub(startKey.index, 1));\n        var pVal = prevKey.value;\n        if ($bm_isInstanceOfArray(value))\n            pVal = pVal[axis];\n        sOV = $bm_div($bm_sub(sVal, pVal), $bm_sub(eVal, pVal));\n    }\n    if (isKeyTop(endKey, axis)) {\n        sI = slowIn;\n        if (endKey.index != numKeys) {\n            var nextKey = key($bm_sum(endKey.index, 1));\n            var nVal = nextKey.value;\n            if ($bm_isInstanceOfArray(value))\n                nVal = nVal[axis];\n            if (Math.abs(nVal - eVal) < 0.01 && doFollowThrough)\n                sI = 1;\n        }\n    } else {\n        var nextKey = key($bm_sum(endKey.index, 1));\n        var nVal = nextKey.value;\n        if ($bm_isInstanceOfArray(value))\n            nVal = nVal[axis];\n        sIV = $bm_div($bm_sub(eVal, sVal), $bm_sub(nVal, sVal));\n    }\n    if (endKey.index == numKeys && doFollowThrough) {\n        sI = 1;\n    }\n    var val = value;\n    if ($bm_isInstanceOfArray(value))\n        val = val[axis];\n    return $bm_sub(bezierInterpolation(time, sTime, eTime, sVal, eVal, [\n        sO,\n        sOV,\n        sI,\n        sIV\n    ]), val);\n}\nfunction overlap() {\n    var ol = zeroValue;\n    if (isThisPosition && !hasParent)\n        return zeroValue;\n    ol = $bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisProperty), getPropWorldValue(time, thisProperty));\n    var motionRatio = $bm_div($bm_div(length(zeroValue, ol), thisLayer.width), 2);\n    if (isThisPosition) {\n        var originalDistance = length(valueAtTime(0));\n        motionRatio = $bm_div(length(zeroValue, ol), thisComp.width);\n    }\n    ol = $bm_sum(ol, getPropWorldValue(time, thisProperty));\n    ol = $bm_sum(ol, $bm_mul($bm_mul($bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisLayer.anchorPoint), ol), motionRatio), flexibility));\n    ol = thisLayer.fromWorld(ol);\n    if (!isThisPosition)\n        ol = $bm_sub(ol, value);\n    else {\n        ol = linear(flexibility, 0, 100, $bm_div(ol, 2), 0);\n        var prevParentWorldPos = getLayerWorldPos($bm_sub(time, overlapDuration), parent);\n        ol = $bm_sum(ol, $bm_mul($bm_mul($bm_mul(thisLayer.fromWorld(prevParentWorldPos), motionRatio), flexibility), 5));\n    }\n    return ol;\n}\nvar okToGo = false;\nif (simulate && fx.enabled)\n    okToGo = true;\nelse if (numKeys > 1 && fx.enabled)\n    okToGo = true;\nif (okToGo) {\n    var smartSmoothResult = zeroValue;\n    if (doInterpolation) {\n        if ($bm_isInstanceOfArray(value)) {\n            if (value.length == 2)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1)\n                ];\n            else if (value.length == 3)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2)\n                ];\n            else if (value.length == 4)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2),\n                    smartSmooth(3)\n                ];\n        } else {\n            smartSmoothResult = smartSmooth(0);\n        }\n    }\n    if (doAnticipation)\n        result = $bm_sum(result, anticipate());\n    result = $bm_sum(result, smartSmoothResult);\n    if (doFollowThrough)\n        result = $bm_sum(result, followThrough());\n    if (doOverlap)\n        result = $bm_sum(result, overlap());\n}\n$bm_rt = result;",
                                "a": 1
                              },
                              "a": { "a": 0, "k": [0.0, 0.0] },
                              "s": { "a": 0, "k": [100.0, 100.0] },
                              "nm": "Transform",
                              "sk": { "a": 0, "k": 0.0 },
                              "sa": { "a": 0, "k": 0.0 }
                            }
                          ]
                        },
                        {
                          "ty": "gr",
                          "nm": "Group 7",
                          "bm": 0,
                          "mn": "ADBE Vector Group",
                          "it": [
                            {
                              "ty": "sh",
                              "nm": "Path 1",
                              "mn": "ADBE Vector Shape - Group",
                              "ind": 0,
                              "ks": {
                                "k": {
                                  "i": [
                                    [0.0, 0.0],
                                    [0.013, -0.055],
                                    [0.076, -0.027],
                                    [0.0, 0.0],
                                    [0.045, 0.032],
                                    [0.029, 0.079],
                                    [0.0, 0.0],
                                    [-0.14, 0.051],
                                    [0.0, 0.0],
                                    [-0.04, -0.033],
                                    [-0.017, -0.046],
                                    [0.0, 0.0],
                                    [-0.1, 0.203],
                                    [-0.145, 0.175],
                                    [-0.187, 0.138],
                                    [-0.23, 0.083],
                                    [-0.385, -0.027],
                                    [-0.339, -0.176],
                                    [-0.272, -0.314],
                                    [-0.158, -0.437],
                                    [0.0, 0.0],
                                    [0.013, -0.056],
                                    [0.081, -0.029],
                                    [0.0, 0.0],
                                    [0.043, 0.033],
                                    [0.033, 0.092],
                                    [0.0, 0.0],
                                    [0.198, 0.208],
                                    [0.249, 0.118],
                                    [0.284, 0.017],
                                    [0.275, -0.099],
                                    [0.216, -0.192],
                                    [0.128, -0.246],
                                    [0.027, -0.282],
                                    [-0.101, -0.28]
                                  ],
                                  "o": [
                                    [0.028, 0.079],
                                    [-0.014, 0.053],
                                    [0.0, 0.0],
                                    [-0.085, 0.031],
                                    [-0.045, -0.033],
                                    [0.0, 0.0],
                                    [-0.045, -0.124],
                                    [0.0, 0.0],
                                    [0.067, -0.025],
                                    [0.04, 0.032],
                                    [0.0, 0.0],
                                    [0.051, -0.21],
                                    [0.099, -0.202],
                                    [0.146, -0.175],
                                    [0.187, -0.138],
                                    [0.387, -0.141],
                                    [0.384, 0.027],
                                    [0.339, 0.176],
                                    [0.272, 0.314],
                                    [0.0, 0.0],
                                    [0.033, 0.092],
                                    [-0.013, 0.057],
                                    [0.0, 0.0],
                                    [-0.09, 0.033],
                                    [-0.043, -0.034],
                                    [0.0, 0.0],
                                    [-0.103, -0.284],
                                    [-0.198, -0.208],
                                    [-0.249, -0.117],
                                    [-0.284, -0.017],
                                    [-0.271, 0.098],
                                    [-0.216, 0.194],
                                    [-0.128, 0.248],
                                    [-0.028, 0.283],
                                    [0.0, 0.0]
                                  ],
                                  "v": [
                                    [-141.595, 15.692],
                                    [-141.573, 15.891],
                                    [-141.708, 16.013],
                                    [-142.067, 16.143],
                                    [-142.263, 16.141],
                                    [-142.373, 15.974],
                                    [-144.664, 9.672],
                                    [-144.522, 9.409],
                                    [-144.143, 9.272],
                                    [-143.983, 9.284],
                                    [-143.898, 9.401],
                                    [-143.565, 10.253],
                                    [-143.338, 9.634],
                                    [-142.971, 9.068],
                                    [-142.471, 8.599],
                                    [-141.846, 8.267],
                                    [-140.687, 8.096],
                                    [-139.602, 8.399],
                                    [-138.684, 9.132],
                                    [-138.038, 10.258],
                                    [-136.718, 13.891],
                                    [-136.687, 14.112],
                                    [-136.827, 14.241],
                                    [-137.185, 14.371],
                                    [-137.385, 14.371],
                                    [-137.499, 14.182],
                                    [-138.878, 10.391],
                                    [-139.33, 9.651],
                                    [-140.001, 9.162],
                                    [-140.801, 8.963],
                                    [-141.639, 9.088],
                                    [-142.369, 9.523],
                                    [-142.883, 10.181],
                                    [-143.115, 10.974],
                                    [-143.004, 11.819]
                                  ],
                                  "c": true
                                },
                                "a": 0
                              }
                            },
                            {
                              "ty": "fl",
                              "nm": "Fill 1",
                              "bm": 0,
                              "mn": "ADBE Vector Graphic - Fill",
                              "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] },
                              "o": { "a": 0, "k": 100.0 },
                              "r": 1
                            },
                            {
                              "ty": "tr",
                              "o": { "a": 0, "k": 100.0 },
                              "r": { "a": 0, "k": 0.0 },
                              "p": {
                                "k": [
                                  {
                                    "i": { "x": 0.667, "y": 1.0 },
                                    "o": { "x": 0.333, "y": 0.0 },
                                    "t": 22.131,
                                    "s": [0, 0],
                                    "ti": [0, 0],
                                    "to": [-1.037, -2.814]
                                  },
                                  {
                                    "i": { "x": 0.667, "y": 1.0 },
                                    "o": { "x": 0.333, "y": 0.0 },
                                    "t": 26.695,
                                    "s": [-6.222, -16.885],
                                    "ti": [-1.037, -2.814],
                                    "to": [0, 0]
                                  },
                                  { "t": 30.608, "s": [0, 0] }
                                ],
                                "x": "var $bm_rt;\nvar fx = effect('\u015dlosilo pli pura 3');\nvar doAnticipation = fx(1).value;\nvar doInterpolation = fx(2).value;\nvar doFollowThrough = fx(3).value;\nvar damping = $bm_div(fx(15).value, 10);\nvar elasticity = $bm_div(fx(13).value, 10);\nvar bounce = fx(17).value;\nvar anticipationDuration = fx(5).value;\nvar anticipationQuantity = $bm_div(fx(6).value, 100);\nvar slowIn = $bm_div(fx(9).value, 100);\nvar slowOut = $bm_div(fx(10).value, 100);\nvar spatialMode = fx(21).value;\nvar spatialDoInterpolation = fx(20).value;\nvar moBlurPrecision = fx(32).value;\nvar elasticityRandom = fx(14).value;\nvar dampingRandom = fx(16).value;\nvar softBody = fx(28).value;\nvar flexibility = $bm_div(fx(29).value, 100);\nvar doOverlap = fx(23).value;\nvar overlapDuration = fx(24).value;\nvar overlapRandom = fx(25).value;\nvar threshold = $bm_div($bm_div(1, moBlurPrecision), 1000);\nvar zeroValue;\nif ($bm_isInstanceOfArray(value)) {\n    if (value.length == 2)\n        zeroValue = [\n            0,\n            0\n        ];\n    else if (value.length == 3)\n        zeroValue = [\n            0,\n            0,\n            0\n        ];\n    else if (value.length == 4)\n        zeroValue = [\n            0,\n            0,\n            0,\n            0\n        ];\n} else\n    zeroValue = 0;\nvar isThisSpatial = isSpatial(thisProperty);\nvar isThisPosition = thisProperty === $bm_transform.position;\nvar simulate = false;\nif (isThisSpatial) {\n    doInterpolation = doInterpolation && spatialDoInterpolation;\n    if (isThisPosition && thisProperty.numKeys > 0) {\n        doOverlap = false;\n        simulate = false;\n    } else {\n        simulate = spatialMode == 2;\n        doOverlap = overlapDuration != 0 && doOverlap && simulate;\n    }\n} else {\n    doOverlap = false;\n}\nif (!doOverlap) {\n    overlapDuration = 0;\n}\nif (simulate && softBody && isThisSpatial && !isThisPosition && (doFollowThrough || doOverlap)) {\n    var distanceRatio = $bm_div(length(valueAtTime(0), $bm_transform.anchorPoint), $bm_div(thisLayer.width, 2));\n    distanceRatio = $bm_div($bm_sum(1, $bm_mul(distanceRatio, flexibility)), 2);\n    if (doFollowThrough) {\n        elasticity = $bm_div(elasticity, distanceRatio);\n        damping = $bm_div(damping, distanceRatio);\n    }\n    if (doOverlap) {\n        overlapDuration = $bm_mul(overlapDuration, distanceRatio);\n    }\n}\nseedRandom(0, true);\nif (doFollowThrough) {\n    if (elasticityRandom > 0)\n        elasticity = addNoise(elasticity, elasticityRandom);\n    if (dampingRandom > 0)\n        damping = addNoise(damping, dampingRandom);\n}\nif (doOverlap) {\n    if (doOverlap && overlapRandom > 0)\n        overlapDuration = addNoise(overlapDuration, overlapRandom);\n}\nvar result = value;\nfunction isSpatial(prop) {\n    if (!(prop.value instanceof Array))\n        return false;\n    if (prop.value.length != 2 && prop.value.length != 3)\n        return false;\n    try {\n        if (typeof prop.speed !== 'undefined')\n            return true;\n    } catch (e) {\n        return false;\n    }\n}\nfunction addNoise(val, quantity) {\n    var randomValue = random(0.9, 1.1);\n    var noiseValue = noise($bm_mul(valueAtTime(0), randomValue));\n    noiseValue = $bm_mul(noiseValue, $bm_div(quantity, 100));\n    return $bm_mul(val, $bm_sum(noiseValue, 1));\n}\nfunction isAfterLastKey() {\n    if (numKeys == 0)\n        return false;\n    var nKey = nearestKey(time);\n    return nKey.time <= time && nKey.index == numKeys;\n}\nfunction isStill(t, threshold) {\n    var d = $bm_sub(valueAtTime(t), valueAtTime($bm_sum(t, framesToTime(1))));\n    if ($bm_isInstanceOfArray(d)) {\n        for (var i = 0; i < d.length; i++) {\n            d[i] = Math.abs(d[i]);\n            if (d[i] >= threshold) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        d = Math.abs(d);\n        return d < threshold;\n    }\n}\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\n    if (arguments.length !== 5 && arguments.length !== 6)\n        return t;\n    var a = $bm_sub(value2, value1);\n    var b = $bm_sub(tMax, tMin);\n    if (b == 0)\n        return t;\n    var c = clamp($bm_div($bm_sub(t, tMin), b), 0, 1);\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4)\n        bezierPoints = [\n            0.33,\n            0,\n            0.66,\n            1\n        ];\n    return $bm_sum($bm_mul(a, h(c, bezierPoints)), value1);\n    function h(f, g) {\n        var x = $bm_mul(3, g[0]);\n        var j = $bm_sub($bm_mul(3, $bm_sub(g[2], g[0])), x);\n        var k = $bm_sub($bm_sub(1, x), j);\n        var l = $bm_mul(3, g[1]);\n        var m = $bm_sub($bm_mul(3, $bm_sub(g[3], g[1])), l);\n        var n = $bm_sub($bm_sub(1, l), m);\n        var d = f;\n        for (var i = 0; i < 5; i++) {\n            var z = $bm_sub($bm_mul(d, $bm_sum(x, $bm_mul(d, $bm_sum(j, $bm_mul(d, k))))), f);\n            if (Math.abs(z) < 0.001)\n                break;\n            d = $bm_sub(d, $bm_div(z, $bm_sum(x, $bm_mul(d, $bm_sum($bm_mul(2, j), $bm_mul($bm_mul(3, k), d))))));\n        }\n        return $bm_mul(d, $bm_sum(l, $bm_mul(d, $bm_sum(m, $bm_mul(d, n)))));\n    }\n}\nfunction getPropWorldSpeed(t, prop) {\n    return length(getPropWorldVelocity(t, prop));\n}\nfunction getPrevKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time <= t)\n        return nKey;\n    if (nKey.index > 1)\n        return key($bm_sub(nKey.index, 1));\n    return null;\n}\nfunction getNextKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time >= t)\n        return nKey;\n    if (nKey.index < numKeys)\n        return key($bm_sum(nKey.index, 1));\n    return null;\n}\nfunction getPropWorldVelocity(t, prop) {\n    return $bm_mul($bm_sub(getPropWorldValue($bm_sum(t, 0.005), prop), getPropWorldValue($bm_sub(t, 0.005), prop)), 100);\n}\nfunction getLayerWorldPos(t, l) {\n    return l.toWorld(l.anchorPoint, t);\n}\nfunction getPropWorldValue(t, prop) {\n    if (isPosition(prop))\n        return getLayerWorldPos(t, thisLayer);\n    return thisLayer.toWorld(prop.valueAtTime(t), t);\n}\nfunction isPosition(prop) {\n    return prop === $bm_transform.position;\n}\nfunction isKeyTop(k, axis) {\n    var prevSpeed = velocityAtTime($bm_sub(k.time, threshold));\n    var nextSpeed = velocityAtTime($bm_sum(k.time, threshold));\n    if ($bm_isInstanceOfArray(value)) {\n        prevSpeed = prevSpeed[axis];\n        nextSpeed = nextSpeed[axis];\n    }\n    if (Math.abs(prevSpeed) < 0.01 || Math.abs(nextSpeed) < 0.01)\n        return true;\n    return $bm_mul(prevSpeed, nextSpeed) < 0;\n}\nfunction anticipate() {\n    var anticipation = zeroValue;\n    if (isAfterLastKey())\n        return anticipation;\n    if (numKeys < 2)\n        return anticipation;\n    var nextKey = getNextKey(time);\n    var aKey = nextKey;\n    if (!isStill(aKey.time - 0.1, 0.1)) {\n        aKey = getPrevKey(time);\n        if (!isStill(aKey.time - 0.1, 0.1))\n            return anticipation;\n    }\n    if (aKey.index == numKeys)\n        return anticipation;\n    var anticipationMiddle = aKey.time;\n    var anticipationStart = $bm_sub(anticipationMiddle, anticipationDuration);\n    var anticipationEnd = key(aKey.index + 1).time;\n    var startValue = anticipation;\n    var midValue = $bm_mul($bm_sum($bm_neg(valueAtTime($bm_sum(anticipationMiddle, anticipationDuration))), aKey.value), anticipationQuantity);\n    var endValue = anticipation;\n    if (time < anticipationStart) {\n        return anticipation;\n    } else if (time < anticipationMiddle) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue[i], midValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue, midValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else if (time <= anticipationEnd) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue[i], endValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue, endValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else {\n        return anticipation;\n    }\n}\nfunction followThroughAtTime(t) {\n    var fThrough = zeroValue;\n    if (elasticity == 0)\n        return fThrough;\n    var propSpeed;\n    if (!simulate) {\n        if (numKeys < 2)\n            return fThrough;\n        if (nearestKey(t).index == 1)\n            return fThrough;\n        propSpeed = length(velocityAtTime(t));\n        if (propSpeed >= threshold)\n            return fThrough;\n    } else {\n        propSpeed = getPropWorldSpeed(t, thisProperty);\n        if (propSpeed >= threshold)\n            return fThrough;\n    }\n    var fThroughStart = 0;\n    var fThroughTime = 0;\n    if (simulate) {\n        var speedI = getPropWorldSpeed(t, thisProperty);\n        var i = t;\n        while (speedI < threshold && i > 0) {\n            i = $bm_sub(i, $bm_div(thisComp.frameDuration, moBlurPrecision));\n            speedI = getPropWorldSpeed(i, thisProperty);\n        }\n        fThroughStart = i;\n    } else {\n        var fThroughKey = getPrevKey(t);\n        fThroughStart = fThroughKey.time;\n    }\n    if (fThroughStart == 0)\n        return fThrough;\n    fThroughTime = $bm_sub(t, fThroughStart);\n    if (simulate)\n        fThrough = $bm_div(getPropWorldVelocity($bm_sub(fThroughStart, thisComp.frameDuration), thisProperty), 2);\n    else\n        fThrough = $bm_div(velocityAtTime($bm_sub(fThroughStart, thisComp.frameDuration)), 2);\n    if (bounce) {\n        var cycleDamp = Math.exp($bm_mul($bm_mul(fThroughTime, damping), 0.1));\n        var damp = $bm_div(Math.exp($bm_mul(fThroughTime, damping)), $bm_div(elasticity, 2));\n        var cycleDuration = $bm_div(1, $bm_mul(elasticity, 2));\n        cycleDuration = Math.round(timeToFrames(cycleDuration));\n        cycleDuration = framesToTime(cycleDuration);\n        var midDuration = $bm_div(cycleDuration, 2);\n        var maxValue = $bm_mul(fThrough, midDuration);\n        var cycvarime = fThroughTime;\n        var numEndCycles = 1;\n        while (cycvarime > cycleDuration) {\n            cycvarime = $bm_sub(cycvarime, cycleDuration);\n            cycleDuration = $bm_div(cycleDuration, cycleDamp);\n            cycleDuration = Math.round(timeToFrames(cycleDuration));\n            if (cycleDuration < 2) {\n                cycleDuration = 2;\n                numEndCycles++;\n            }\n            cycleDuration = framesToTime(cycleDuration);\n            midDuration = $bm_div(cycleDuration, 2);\n            maxValue = $bm_div($bm_mul(fThrough, midDuration), damp);\n            if (numEndCycles > 100 / damping && maxValue < threshold)\n                return zeroValue;\n        }\n        if (cycvarime < midDuration)\n            fThrough = bezierInterpolation(cycvarime, 0, midDuration, 0, maxValue, [\n                0,\n                0.1,\n                slowIn,\n                1\n            ]);\n        else\n            fThrough = bezierInterpolation(cycvarime, midDuration, cycleDuration, maxValue, 0, [\n                $bm_sub(1, slowIn),\n                0,\n                1,\n                0.9\n            ]);\n    } else {\n        var damp = Math.exp($bm_mul(fThroughTime, damping));\n        var sinus = $bm_mul($bm_mul($bm_mul(elasticity, fThroughTime), 2), Math.PI);\n        sinus = Math.sin(sinus);\n        sinus = $bm_mul($bm_div(0.3, elasticity), sinus);\n        sinus = $bm_div(sinus, damp);\n        if (Math.abs(sinus) < $bm_div(threshold, 100))\n            return 0;\n        fThrough = $bm_mul(fThrough, sinus);\n        if (threshold > 0) {\n            fThrough = $bm_mul(fThrough, $bm_sub(1, $bm_div(propSpeed, threshold)));\n        }\n    }\n    if (bounce) {\n        var prevValue = valueAtTime($bm_sub(fThroughStart, thisComp.frameDuration));\n        var startValue = valueAtTime(fThroughStart);\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < prevValue.length; i++) {\n                if (prevValue[i] > startValue[i])\n                    fThrough[i] = Math.abs(fThrough[i]);\n                if (prevValue[i] < startValue[i])\n                    fThrough[i] = $bm_neg(Math.abs(fThrough[i]));\n            }\n        } else {\n            if (prevValue > startValue)\n                fThrough = Math.abs(fThrough);\n            if (prevValue < startValue)\n                fThrough = $bm_neg(Math.abs(fThrough));\n        }\n    }\n    if (simulate) {\n        if (!isThisPosition) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer));\n            fThrough = $bm_sub(thisLayer.fromWorld(fThrough), thisLayer.anchorPoint);\n        } else if (thisLayer.hasParent) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer.parent));\n            fThrough = $bm_sub(thisLayer.parent.fromWorld(fThrough), thisLayer.parent.anchorPoint);\n        }\n    }\n    return fThrough;\n}\nfunction followThrough() {\n    var propSpeed = length(velocity);\n    if (propSpeed < threshold)\n        return followThroughAtTime($bm_sub(time, overlapDuration));\n    var fThrough = zeroValue;\n    var t = time;\n    while (t > 0) {\n        t = $bm_sub(t, thisComp.frameDuration);\n        if (simulate)\n            propSpeed = getPropWorldSpeed($bm_sub(t, overlapDuration), thisProperty);\n        else\n            propSpeed = length(velocityAtTime(t));\n        if (propSpeed < threshold) {\n            fThrough = followThroughAtTime($bm_sub(t, overlapDuration));\n            break;\n        }\n    }\n    return linear(time, t, $bm_sum(t, $bm_mul(anticipationDuration, 2)), fThrough, zeroValue);\n}\nfunction smartSmooth(axis) {\n    var startKey = nearestKey(time);\n    var endKey = startKey;\n    if (time == startKey.time)\n        return 0;\n    if (time < startKey.time && startKey.index == 1)\n        return 0;\n    if (time > startKey.time && startKey.index == numKeys)\n        return 0;\n    if (time < startKey.time)\n        startKey = key($bm_sub(startKey.index, 1));\n    if (time > startKey.time)\n        endKey = key($bm_sum(startKey.index, 1));\n    var sI = 0.66;\n    var sO = 0.33;\n    var sIV = 1;\n    var sOV = 0;\n    var sVal = startKey.value;\n    var eVal = endKey.value;\n    if ($bm_isInstanceOfArray(value)) {\n        sVal = sVal[axis];\n        eVal = eVal[axis];\n    }\n    var sTime = startKey.time;\n    var eTime = endKey.time;\n    if (isKeyTop(startKey, axis))\n        sO = slowOut;\n    else {\n        var prevKey = key($bm_sub(startKey.index, 1));\n        var pVal = prevKey.value;\n        if ($bm_isInstanceOfArray(value))\n            pVal = pVal[axis];\n        sOV = $bm_div($bm_sub(sVal, pVal), $bm_sub(eVal, pVal));\n    }\n    if (isKeyTop(endKey, axis)) {\n        sI = slowIn;\n        if (endKey.index != numKeys) {\n            var nextKey = key($bm_sum(endKey.index, 1));\n            var nVal = nextKey.value;\n            if ($bm_isInstanceOfArray(value))\n                nVal = nVal[axis];\n            if (Math.abs(nVal - eVal) < 0.01 && doFollowThrough)\n                sI = 1;\n        }\n    } else {\n        var nextKey = key($bm_sum(endKey.index, 1));\n        var nVal = nextKey.value;\n        if ($bm_isInstanceOfArray(value))\n            nVal = nVal[axis];\n        sIV = $bm_div($bm_sub(eVal, sVal), $bm_sub(nVal, sVal));\n    }\n    if (endKey.index == numKeys && doFollowThrough) {\n        sI = 1;\n    }\n    var val = value;\n    if ($bm_isInstanceOfArray(value))\n        val = val[axis];\n    return $bm_sub(bezierInterpolation(time, sTime, eTime, sVal, eVal, [\n        sO,\n        sOV,\n        sI,\n        sIV\n    ]), val);\n}\nfunction overlap() {\n    var ol = zeroValue;\n    if (isThisPosition && !hasParent)\n        return zeroValue;\n    ol = $bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisProperty), getPropWorldValue(time, thisProperty));\n    var motionRatio = $bm_div($bm_div(length(zeroValue, ol), thisLayer.width), 2);\n    if (isThisPosition) {\n        var originalDistance = length(valueAtTime(0));\n        motionRatio = $bm_div(length(zeroValue, ol), thisComp.width);\n    }\n    ol = $bm_sum(ol, getPropWorldValue(time, thisProperty));\n    ol = $bm_sum(ol, $bm_mul($bm_mul($bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisLayer.anchorPoint), ol), motionRatio), flexibility));\n    ol = thisLayer.fromWorld(ol);\n    if (!isThisPosition)\n        ol = $bm_sub(ol, value);\n    else {\n        ol = linear(flexibility, 0, 100, $bm_div(ol, 2), 0);\n        var prevParentWorldPos = getLayerWorldPos($bm_sub(time, overlapDuration), parent);\n        ol = $bm_sum(ol, $bm_mul($bm_mul($bm_mul(thisLayer.fromWorld(prevParentWorldPos), motionRatio), flexibility), 5));\n    }\n    return ol;\n}\nvar okToGo = false;\nif (simulate && fx.enabled)\n    okToGo = true;\nelse if (numKeys > 1 && fx.enabled)\n    okToGo = true;\nif (okToGo) {\n    var smartSmoothResult = zeroValue;\n    if (doInterpolation) {\n        if ($bm_isInstanceOfArray(value)) {\n            if (value.length == 2)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1)\n                ];\n            else if (value.length == 3)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2)\n                ];\n            else if (value.length == 4)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2),\n                    smartSmooth(3)\n                ];\n        } else {\n            smartSmoothResult = smartSmooth(0);\n        }\n    }\n    if (doAnticipation)\n        result = $bm_sum(result, anticipate());\n    result = $bm_sum(result, smartSmoothResult);\n    if (doFollowThrough)\n        result = $bm_sum(result, followThrough());\n    if (doOverlap)\n        result = $bm_sum(result, overlap());\n}\n$bm_rt = result;",
                                "a": 1
                              },
                              "a": { "a": 0, "k": [0.0, 0.0] },
                              "s": { "a": 0, "k": [100.0, 100.0] },
                              "nm": "Transform",
                              "sk": { "a": 0, "k": 0.0 },
                              "sa": { "a": 0, "k": 0.0 }
                            }
                          ]
                        },
                        {
                          "ty": "gr",
                          "nm": "Group 8",
                          "bm": 0,
                          "mn": "ADBE Vector Group",
                          "it": [
                            {
                              "ty": "sh",
                              "nm": "Path 1",
                              "mn": "ADBE Vector Shape - Group",
                              "ind": 0,
                              "ks": {
                                "k": {
                                  "i": [
                                    [0.139, 0.381],
                                    [0.241, 0.292],
                                    [0.308, 0.174],
                                    [0.355, 0.037],
                                    [0.36, -0.131],
                                    [0.251, -0.257],
                                    [0.127, -0.329],
                                    [0.002, -0.38],
                                    [-0.137, -0.376],
                                    [-0.245, -0.288],
                                    [-0.311, -0.167],
                                    [-0.357, -0.033],
                                    [-0.361, 0.131],
                                    [-0.25, 0.253],
                                    [-0.128, 0.324],
                                    [0.0, 0.377]
                                  ],
                                  "o": [
                                    [-0.136, -0.376],
                                    [-0.242, -0.292],
                                    [-0.308, -0.174],
                                    [-0.355, -0.037],
                                    [-0.365, 0.133],
                                    [-0.251, 0.257],
                                    [-0.128, 0.329],
                                    [-0.002, 0.38],
                                    [0.137, 0.377],
                                    [0.245, 0.288],
                                    [0.311, 0.168],
                                    [0.356, 0.035],
                                    [0.356, -0.129],
                                    [0.25, -0.252],
                                    [0.127, -0.324],
                                    [0.001, -0.377]
                                  ],
                                  "v": [
                                    [-146.378, 13.924],
                                    [-146.945, 12.921],
                                    [-147.769, 12.224],
                                    [-148.764, 11.907],
                                    [-149.838, 12.048],
                                    [-150.762, 12.632],
                                    [-151.329, 13.512],
                                    [-151.524, 14.576],
                                    [-151.322, 15.711],
                                    [-150.75, 16.706],
                                    [-149.917, 17.388],
                                    [-148.915, 17.691],
                                    [-147.839, 17.546],
                                    [-146.93, 16.974],
                                    [-146.364, 16.11],
                                    [-146.172, 15.059]
                                  ],
                                  "c": true
                                },
                                "a": 0
                              }
                            },
                            {
                              "ty": "sh",
                              "nm": "Path 2",
                              "mn": "ADBE Vector Shape - Group",
                              "ind": 1,
                              "ks": {
                                "k": {
                                  "i": [
                                    [0.0, 0.0],
                                    [0.021, -0.046],
                                    [0.086, -0.031],
                                    [0.0, 0.0],
                                    [0.039, 0.029],
                                    [0.032, 0.087],
                                    [0.0, 0.0],
                                    [0.085, -0.257],
                                    [0.164, -0.215],
                                    [0.235, -0.168],
                                    [0.293, -0.106],
                                    [0.463, 0.039],
                                    [0.406, 0.212],
                                    [0.322, 0.367],
                                    [0.177, 0.486],
                                    [-0.008, 0.489],
                                    [-0.174, 0.427],
                                    [-0.33, 0.327],
                                    [-0.464, 0.168],
                                    [-0.296, 0.019],
                                    [-0.268, -0.064],
                                    [-0.224, -0.14],
                                    [-0.153, -0.209],
                                    [0.0, 0.0],
                                    [-0.014, 0.06],
                                    [-0.09, 0.033],
                                    [0.0, 0.0],
                                    [-0.047, -0.037],
                                    [-0.033, -0.091]
                                  ],
                                  "o": [
                                    [0.028, 0.078],
                                    [-0.021, 0.047],
                                    [0.0, 0.0],
                                    [-0.09, 0.033],
                                    [-0.039, -0.03],
                                    [0.0, 0.0],
                                    [0.012, 0.287],
                                    [-0.085, 0.256],
                                    [-0.164, 0.216],
                                    [-0.234, 0.168],
                                    [-0.459, 0.167],
                                    [-0.463, -0.04],
                                    [-0.406, -0.21],
                                    [-0.321, -0.365],
                                    [-0.176, -0.487],
                                    [0.009, -0.489],
                                    [0.174, -0.427],
                                    [0.33, -0.328],
                                    [0.298, -0.108],
                                    [0.297, -0.019],
                                    [0.269, 0.064],
                                    [0.224, 0.14],
                                    [0.0, 0.0],
                                    [-0.029, -0.093],
                                    [0.014, -0.059],
                                    [0.0, 0.0],
                                    [0.081, -0.029],
                                    [0.047, 0.038],
                                    [0.0, 0.0]
                                  ],
                                  "v": [
                                    [-144.472, 16.767],
                                    [-144.461, 16.954],
                                    [-144.622, 17.071],
                                    [-144.947, 17.189],
                                    [-145.14, 17.193],
                                    [-145.246, 17.017],
                                    [-145.686, 15.806],
                                    [-145.796, 16.621],
                                    [-146.17, 17.329],
                                    [-146.768, 17.905],
                                    [-147.559, 18.316],
                                    [-148.944, 18.508],
                                    [-150.247, 18.131],
                                    [-151.339, 17.265],
                                    [-152.087, 15.988],
                                    [-152.339, 14.525],
                                    [-152.065, 13.152],
                                    [-151.309, 12.022],
                                    [-150.118, 11.277],
                                    [-149.227, 11.086],
                                    [-148.381, 11.153],
                                    [-147.642, 11.458],
                                    [-147.077, 11.98],
                                    [-147.475, 10.801],
                                    [-147.497, 10.571],
                                    [-147.341, 10.433],
                                    [-147.051, 10.327],
                                    [-146.858, 10.339],
                                    [-146.738, 10.534]
                                  ],
                                  "c": true
                                },
                                "a": 0
                              }
                            },
                            {
                              "ty": "fl",
                              "nm": "Fill 1",
                              "bm": 0,
                              "mn": "ADBE Vector Graphic - Fill",
                              "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] },
                              "o": { "a": 0, "k": 100.0 },
                              "r": 1
                            },
                            {
                              "ty": "tr",
                              "o": { "a": 0, "k": 100.0 },
                              "r": { "a": 0, "k": 0.0 },
                              "p": {
                                "k": [
                                  {
                                    "i": { "x": 0.667, "y": 1.0 },
                                    "o": { "x": 0.333, "y": 0.0 },
                                    "t": 17.565,
                                    "s": [0, 0],
                                    "ti": [0, 0],
                                    "to": [-1.037, -2.814]
                                  },
                                  {
                                    "i": { "x": 0.667, "y": 1.0 },
                                    "o": { "x": 0.333, "y": 0.0 },
                                    "t": 22.131,
                                    "s": [-6.222, -16.885],
                                    "ti": [-1.037, -2.814],
                                    "to": [0, 0]
                                  },
                                  { "t": 26.044, "s": [0, 0] }
                                ],
                                "x": "var $bm_rt;\nvar fx = effect('\u015dlosilo pli pura 3');\nvar doAnticipation = fx(1).value;\nvar doInterpolation = fx(2).value;\nvar doFollowThrough = fx(3).value;\nvar damping = $bm_div(fx(15).value, 10);\nvar elasticity = $bm_div(fx(13).value, 10);\nvar bounce = fx(17).value;\nvar anticipationDuration = fx(5).value;\nvar anticipationQuantity = $bm_div(fx(6).value, 100);\nvar slowIn = $bm_div(fx(9).value, 100);\nvar slowOut = $bm_div(fx(10).value, 100);\nvar spatialMode = fx(21).value;\nvar spatialDoInterpolation = fx(20).value;\nvar moBlurPrecision = fx(32).value;\nvar elasticityRandom = fx(14).value;\nvar dampingRandom = fx(16).value;\nvar softBody = fx(28).value;\nvar flexibility = $bm_div(fx(29).value, 100);\nvar doOverlap = fx(23).value;\nvar overlapDuration = fx(24).value;\nvar overlapRandom = fx(25).value;\nvar threshold = $bm_div($bm_div(1, moBlurPrecision), 1000);\nvar zeroValue;\nif ($bm_isInstanceOfArray(value)) {\n    if (value.length == 2)\n        zeroValue = [\n            0,\n            0\n        ];\n    else if (value.length == 3)\n        zeroValue = [\n            0,\n            0,\n            0\n        ];\n    else if (value.length == 4)\n        zeroValue = [\n            0,\n            0,\n            0,\n            0\n        ];\n} else\n    zeroValue = 0;\nvar isThisSpatial = isSpatial(thisProperty);\nvar isThisPosition = thisProperty === $bm_transform.position;\nvar simulate = false;\nif (isThisSpatial) {\n    doInterpolation = doInterpolation && spatialDoInterpolation;\n    if (isThisPosition && thisProperty.numKeys > 0) {\n        doOverlap = false;\n        simulate = false;\n    } else {\n        simulate = spatialMode == 2;\n        doOverlap = overlapDuration != 0 && doOverlap && simulate;\n    }\n} else {\n    doOverlap = false;\n}\nif (!doOverlap) {\n    overlapDuration = 0;\n}\nif (simulate && softBody && isThisSpatial && !isThisPosition && (doFollowThrough || doOverlap)) {\n    var distanceRatio = $bm_div(length(valueAtTime(0), $bm_transform.anchorPoint), $bm_div(thisLayer.width, 2));\n    distanceRatio = $bm_div($bm_sum(1, $bm_mul(distanceRatio, flexibility)), 2);\n    if (doFollowThrough) {\n        elasticity = $bm_div(elasticity, distanceRatio);\n        damping = $bm_div(damping, distanceRatio);\n    }\n    if (doOverlap) {\n        overlapDuration = $bm_mul(overlapDuration, distanceRatio);\n    }\n}\nseedRandom(0, true);\nif (doFollowThrough) {\n    if (elasticityRandom > 0)\n        elasticity = addNoise(elasticity, elasticityRandom);\n    if (dampingRandom > 0)\n        damping = addNoise(damping, dampingRandom);\n}\nif (doOverlap) {\n    if (doOverlap && overlapRandom > 0)\n        overlapDuration = addNoise(overlapDuration, overlapRandom);\n}\nvar result = value;\nfunction isSpatial(prop) {\n    if (!(prop.value instanceof Array))\n        return false;\n    if (prop.value.length != 2 && prop.value.length != 3)\n        return false;\n    try {\n        if (typeof prop.speed !== 'undefined')\n            return true;\n    } catch (e) {\n        return false;\n    }\n}\nfunction addNoise(val, quantity) {\n    var randomValue = random(0.9, 1.1);\n    var noiseValue = noise($bm_mul(valueAtTime(0), randomValue));\n    noiseValue = $bm_mul(noiseValue, $bm_div(quantity, 100));\n    return $bm_mul(val, $bm_sum(noiseValue, 1));\n}\nfunction isAfterLastKey() {\n    if (numKeys == 0)\n        return false;\n    var nKey = nearestKey(time);\n    return nKey.time <= time && nKey.index == numKeys;\n}\nfunction isStill(t, threshold) {\n    var d = $bm_sub(valueAtTime(t), valueAtTime($bm_sum(t, framesToTime(1))));\n    if ($bm_isInstanceOfArray(d)) {\n        for (var i = 0; i < d.length; i++) {\n            d[i] = Math.abs(d[i]);\n            if (d[i] >= threshold) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        d = Math.abs(d);\n        return d < threshold;\n    }\n}\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\n    if (arguments.length !== 5 && arguments.length !== 6)\n        return t;\n    var a = $bm_sub(value2, value1);\n    var b = $bm_sub(tMax, tMin);\n    if (b == 0)\n        return t;\n    var c = clamp($bm_div($bm_sub(t, tMin), b), 0, 1);\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4)\n        bezierPoints = [\n            0.33,\n            0,\n            0.66,\n            1\n        ];\n    return $bm_sum($bm_mul(a, h(c, bezierPoints)), value1);\n    function h(f, g) {\n        var x = $bm_mul(3, g[0]);\n        var j = $bm_sub($bm_mul(3, $bm_sub(g[2], g[0])), x);\n        var k = $bm_sub($bm_sub(1, x), j);\n        var l = $bm_mul(3, g[1]);\n        var m = $bm_sub($bm_mul(3, $bm_sub(g[3], g[1])), l);\n        var n = $bm_sub($bm_sub(1, l), m);\n        var d = f;\n        for (var i = 0; i < 5; i++) {\n            var z = $bm_sub($bm_mul(d, $bm_sum(x, $bm_mul(d, $bm_sum(j, $bm_mul(d, k))))), f);\n            if (Math.abs(z) < 0.001)\n                break;\n            d = $bm_sub(d, $bm_div(z, $bm_sum(x, $bm_mul(d, $bm_sum($bm_mul(2, j), $bm_mul($bm_mul(3, k), d))))));\n        }\n        return $bm_mul(d, $bm_sum(l, $bm_mul(d, $bm_sum(m, $bm_mul(d, n)))));\n    }\n}\nfunction getPropWorldSpeed(t, prop) {\n    return length(getPropWorldVelocity(t, prop));\n}\nfunction getPrevKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time <= t)\n        return nKey;\n    if (nKey.index > 1)\n        return key($bm_sub(nKey.index, 1));\n    return null;\n}\nfunction getNextKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time >= t)\n        return nKey;\n    if (nKey.index < numKeys)\n        return key($bm_sum(nKey.index, 1));\n    return null;\n}\nfunction getPropWorldVelocity(t, prop) {\n    return $bm_mul($bm_sub(getPropWorldValue($bm_sum(t, 0.005), prop), getPropWorldValue($bm_sub(t, 0.005), prop)), 100);\n}\nfunction getLayerWorldPos(t, l) {\n    return l.toWorld(l.anchorPoint, t);\n}\nfunction getPropWorldValue(t, prop) {\n    if (isPosition(prop))\n        return getLayerWorldPos(t, thisLayer);\n    return thisLayer.toWorld(prop.valueAtTime(t), t);\n}\nfunction isPosition(prop) {\n    return prop === $bm_transform.position;\n}\nfunction isKeyTop(k, axis) {\n    var prevSpeed = velocityAtTime($bm_sub(k.time, threshold));\n    var nextSpeed = velocityAtTime($bm_sum(k.time, threshold));\n    if ($bm_isInstanceOfArray(value)) {\n        prevSpeed = prevSpeed[axis];\n        nextSpeed = nextSpeed[axis];\n    }\n    if (Math.abs(prevSpeed) < 0.01 || Math.abs(nextSpeed) < 0.01)\n        return true;\n    return $bm_mul(prevSpeed, nextSpeed) < 0;\n}\nfunction anticipate() {\n    var anticipation = zeroValue;\n    if (isAfterLastKey())\n        return anticipation;\n    if (numKeys < 2)\n        return anticipation;\n    var nextKey = getNextKey(time);\n    var aKey = nextKey;\n    if (!isStill(aKey.time - 0.1, 0.1)) {\n        aKey = getPrevKey(time);\n        if (!isStill(aKey.time - 0.1, 0.1))\n            return anticipation;\n    }\n    if (aKey.index == numKeys)\n        return anticipation;\n    var anticipationMiddle = aKey.time;\n    var anticipationStart = $bm_sub(anticipationMiddle, anticipationDuration);\n    var anticipationEnd = key(aKey.index + 1).time;\n    var startValue = anticipation;\n    var midValue = $bm_mul($bm_sum($bm_neg(valueAtTime($bm_sum(anticipationMiddle, anticipationDuration))), aKey.value), anticipationQuantity);\n    var endValue = anticipation;\n    if (time < anticipationStart) {\n        return anticipation;\n    } else if (time < anticipationMiddle) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue[i], midValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue, midValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else if (time <= anticipationEnd) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue[i], endValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue, endValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else {\n        return anticipation;\n    }\n}\nfunction followThroughAtTime(t) {\n    var fThrough = zeroValue;\n    if (elasticity == 0)\n        return fThrough;\n    var propSpeed;\n    if (!simulate) {\n        if (numKeys < 2)\n            return fThrough;\n        if (nearestKey(t).index == 1)\n            return fThrough;\n        propSpeed = length(velocityAtTime(t));\n        if (propSpeed >= threshold)\n            return fThrough;\n    } else {\n        propSpeed = getPropWorldSpeed(t, thisProperty);\n        if (propSpeed >= threshold)\n            return fThrough;\n    }\n    var fThroughStart = 0;\n    var fThroughTime = 0;\n    if (simulate) {\n        var speedI = getPropWorldSpeed(t, thisProperty);\n        var i = t;\n        while (speedI < threshold && i > 0) {\n            i = $bm_sub(i, $bm_div(thisComp.frameDuration, moBlurPrecision));\n            speedI = getPropWorldSpeed(i, thisProperty);\n        }\n        fThroughStart = i;\n    } else {\n        var fThroughKey = getPrevKey(t);\n        fThroughStart = fThroughKey.time;\n    }\n    if (fThroughStart == 0)\n        return fThrough;\n    fThroughTime = $bm_sub(t, fThroughStart);\n    if (simulate)\n        fThrough = $bm_div(getPropWorldVelocity($bm_sub(fThroughStart, thisComp.frameDuration), thisProperty), 2);\n    else\n        fThrough = $bm_div(velocityAtTime($bm_sub(fThroughStart, thisComp.frameDuration)), 2);\n    if (bounce) {\n        var cycleDamp = Math.exp($bm_mul($bm_mul(fThroughTime, damping), 0.1));\n        var damp = $bm_div(Math.exp($bm_mul(fThroughTime, damping)), $bm_div(elasticity, 2));\n        var cycleDuration = $bm_div(1, $bm_mul(elasticity, 2));\n        cycleDuration = Math.round(timeToFrames(cycleDuration));\n        cycleDuration = framesToTime(cycleDuration);\n        var midDuration = $bm_div(cycleDuration, 2);\n        var maxValue = $bm_mul(fThrough, midDuration);\n        var cycvarime = fThroughTime;\n        var numEndCycles = 1;\n        while (cycvarime > cycleDuration) {\n            cycvarime = $bm_sub(cycvarime, cycleDuration);\n            cycleDuration = $bm_div(cycleDuration, cycleDamp);\n            cycleDuration = Math.round(timeToFrames(cycleDuration));\n            if (cycleDuration < 2) {\n                cycleDuration = 2;\n                numEndCycles++;\n            }\n            cycleDuration = framesToTime(cycleDuration);\n            midDuration = $bm_div(cycleDuration, 2);\n            maxValue = $bm_div($bm_mul(fThrough, midDuration), damp);\n            if (numEndCycles > 100 / damping && maxValue < threshold)\n                return zeroValue;\n        }\n        if (cycvarime < midDuration)\n            fThrough = bezierInterpolation(cycvarime, 0, midDuration, 0, maxValue, [\n                0,\n                0.1,\n                slowIn,\n                1\n            ]);\n        else\n            fThrough = bezierInterpolation(cycvarime, midDuration, cycleDuration, maxValue, 0, [\n                $bm_sub(1, slowIn),\n                0,\n                1,\n                0.9\n            ]);\n    } else {\n        var damp = Math.exp($bm_mul(fThroughTime, damping));\n        var sinus = $bm_mul($bm_mul($bm_mul(elasticity, fThroughTime), 2), Math.PI);\n        sinus = Math.sin(sinus);\n        sinus = $bm_mul($bm_div(0.3, elasticity), sinus);\n        sinus = $bm_div(sinus, damp);\n        if (Math.abs(sinus) < $bm_div(threshold, 100))\n            return 0;\n        fThrough = $bm_mul(fThrough, sinus);\n        if (threshold > 0) {\n            fThrough = $bm_mul(fThrough, $bm_sub(1, $bm_div(propSpeed, threshold)));\n        }\n    }\n    if (bounce) {\n        var prevValue = valueAtTime($bm_sub(fThroughStart, thisComp.frameDuration));\n        var startValue = valueAtTime(fThroughStart);\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < prevValue.length; i++) {\n                if (prevValue[i] > startValue[i])\n                    fThrough[i] = Math.abs(fThrough[i]);\n                if (prevValue[i] < startValue[i])\n                    fThrough[i] = $bm_neg(Math.abs(fThrough[i]));\n            }\n        } else {\n            if (prevValue > startValue)\n                fThrough = Math.abs(fThrough);\n            if (prevValue < startValue)\n                fThrough = $bm_neg(Math.abs(fThrough));\n        }\n    }\n    if (simulate) {\n        if (!isThisPosition) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer));\n            fThrough = $bm_sub(thisLayer.fromWorld(fThrough), thisLayer.anchorPoint);\n        } else if (thisLayer.hasParent) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer.parent));\n            fThrough = $bm_sub(thisLayer.parent.fromWorld(fThrough), thisLayer.parent.anchorPoint);\n        }\n    }\n    return fThrough;\n}\nfunction followThrough() {\n    var propSpeed = length(velocity);\n    if (propSpeed < threshold)\n        return followThroughAtTime($bm_sub(time, overlapDuration));\n    var fThrough = zeroValue;\n    var t = time;\n    while (t > 0) {\n        t = $bm_sub(t, thisComp.frameDuration);\n        if (simulate)\n            propSpeed = getPropWorldSpeed($bm_sub(t, overlapDuration), thisProperty);\n        else\n            propSpeed = length(velocityAtTime(t));\n        if (propSpeed < threshold) {\n            fThrough = followThroughAtTime($bm_sub(t, overlapDuration));\n            break;\n        }\n    }\n    return linear(time, t, $bm_sum(t, $bm_mul(anticipationDuration, 2)), fThrough, zeroValue);\n}\nfunction smartSmooth(axis) {\n    var startKey = nearestKey(time);\n    var endKey = startKey;\n    if (time == startKey.time)\n        return 0;\n    if (time < startKey.time && startKey.index == 1)\n        return 0;\n    if (time > startKey.time && startKey.index == numKeys)\n        return 0;\n    if (time < startKey.time)\n        startKey = key($bm_sub(startKey.index, 1));\n    if (time > startKey.time)\n        endKey = key($bm_sum(startKey.index, 1));\n    var sI = 0.66;\n    var sO = 0.33;\n    var sIV = 1;\n    var sOV = 0;\n    var sVal = startKey.value;\n    var eVal = endKey.value;\n    if ($bm_isInstanceOfArray(value)) {\n        sVal = sVal[axis];\n        eVal = eVal[axis];\n    }\n    var sTime = startKey.time;\n    var eTime = endKey.time;\n    if (isKeyTop(startKey, axis))\n        sO = slowOut;\n    else {\n        var prevKey = key($bm_sub(startKey.index, 1));\n        var pVal = prevKey.value;\n        if ($bm_isInstanceOfArray(value))\n            pVal = pVal[axis];\n        sOV = $bm_div($bm_sub(sVal, pVal), $bm_sub(eVal, pVal));\n    }\n    if (isKeyTop(endKey, axis)) {\n        sI = slowIn;\n        if (endKey.index != numKeys) {\n            var nextKey = key($bm_sum(endKey.index, 1));\n            var nVal = nextKey.value;\n            if ($bm_isInstanceOfArray(value))\n                nVal = nVal[axis];\n            if (Math.abs(nVal - eVal) < 0.01 && doFollowThrough)\n                sI = 1;\n        }\n    } else {\n        var nextKey = key($bm_sum(endKey.index, 1));\n        var nVal = nextKey.value;\n        if ($bm_isInstanceOfArray(value))\n            nVal = nVal[axis];\n        sIV = $bm_div($bm_sub(eVal, sVal), $bm_sub(nVal, sVal));\n    }\n    if (endKey.index == numKeys && doFollowThrough) {\n        sI = 1;\n    }\n    var val = value;\n    if ($bm_isInstanceOfArray(value))\n        val = val[axis];\n    return $bm_sub(bezierInterpolation(time, sTime, eTime, sVal, eVal, [\n        sO,\n        sOV,\n        sI,\n        sIV\n    ]), val);\n}\nfunction overlap() {\n    var ol = zeroValue;\n    if (isThisPosition && !hasParent)\n        return zeroValue;\n    ol = $bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisProperty), getPropWorldValue(time, thisProperty));\n    var motionRatio = $bm_div($bm_div(length(zeroValue, ol), thisLayer.width), 2);\n    if (isThisPosition) {\n        var originalDistance = length(valueAtTime(0));\n        motionRatio = $bm_div(length(zeroValue, ol), thisComp.width);\n    }\n    ol = $bm_sum(ol, getPropWorldValue(time, thisProperty));\n    ol = $bm_sum(ol, $bm_mul($bm_mul($bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisLayer.anchorPoint), ol), motionRatio), flexibility));\n    ol = thisLayer.fromWorld(ol);\n    if (!isThisPosition)\n        ol = $bm_sub(ol, value);\n    else {\n        ol = linear(flexibility, 0, 100, $bm_div(ol, 2), 0);\n        var prevParentWorldPos = getLayerWorldPos($bm_sub(time, overlapDuration), parent);\n        ol = $bm_sum(ol, $bm_mul($bm_mul($bm_mul(thisLayer.fromWorld(prevParentWorldPos), motionRatio), flexibility), 5));\n    }\n    return ol;\n}\nvar okToGo = false;\nif (simulate && fx.enabled)\n    okToGo = true;\nelse if (numKeys > 1 && fx.enabled)\n    okToGo = true;\nif (okToGo) {\n    var smartSmoothResult = zeroValue;\n    if (doInterpolation) {\n        if ($bm_isInstanceOfArray(value)) {\n            if (value.length == 2)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1)\n                ];\n            else if (value.length == 3)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2)\n                ];\n            else if (value.length == 4)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2),\n                    smartSmooth(3)\n                ];\n        } else {\n            smartSmoothResult = smartSmooth(0);\n        }\n    }\n    if (doAnticipation)\n        result = $bm_sum(result, anticipate());\n    result = $bm_sum(result, smartSmoothResult);\n    if (doFollowThrough)\n        result = $bm_sum(result, followThrough());\n    if (doOverlap)\n        result = $bm_sum(result, overlap());\n}\n$bm_rt = result;",
                                "a": 1
                              },
                              "a": { "a": 0, "k": [0.0, 0.0] },
                              "s": { "a": 0, "k": [100.0, 100.0] },
                              "nm": "Transform",
                              "sk": { "a": 0, "k": 0.0 },
                              "sa": { "a": 0, "k": 0.0 }
                            }
                          ]
                        },
                        {
                          "ty": "gr",
                          "nm": "Group 9",
                          "bm": 0,
                          "mn": "ADBE Vector Group",
                          "it": [
                            {
                              "ty": "sh",
                              "nm": "Path 1",
                              "mn": "ADBE Vector Shape - Group",
                              "ind": 0,
                              "ks": {
                                "k": {
                                  "i": [
                                    [-0.129, 0.207],
                                    [-0.063, 0.031],
                                    [-0.058, -0.046],
                                    [0.0, 0.0],
                                    [0.002, -0.05],
                                    [0.04, -0.072],
                                    [0.455, -0.389],
                                    [0.618, -0.224],
                                    [0.487, -0.036],
                                    [0.469, 0.089],
                                    [0.432, 0.204],
                                    [0.367, 0.308],
                                    [0.288, 0.405],
                                    [0.177, 0.486],
                                    [0.038, 0.493],
                                    [-0.084, 0.469],
                                    [-0.2, 0.434],
                                    [-0.304, 0.365],
                                    [-0.394, 0.283],
                                    [-0.478, 0.174],
                                    [-0.607, -0.013],
                                    [-0.553, -0.188],
                                    [-0.028, -0.026],
                                    [-0.011, -0.03],
                                    [-0.001, -0.023],
                                    [0.003, -0.007],
                                    [0.0, 0.0],
                                    [0.052, -0.045],
                                    [0.104, 0.035],
                                    [0.512, 0.019],
                                    [0.514, -0.186],
                                    [0.335, -0.244],
                                    [0.256, -0.313],
                                    [0.169, -0.368],
                                    [0.074, -0.4],
                                    [-0.032, -0.417],
                                    [-0.149, -0.409],
                                    [-0.244, -0.343],
                                    [-0.313, -0.263],
                                    [-0.366, -0.178],
                                    [-0.396, -0.079],
                                    [-0.412, 0.025],
                                    [-0.401, 0.146],
                                    [-0.225, 0.139],
                                    [-0.194, 0.168],
                                    [-0.161, 0.196]
                                  ],
                                  "o": [
                                    [0.043, -0.063],
                                    [0.063, -0.031],
                                    [0.0, 0.0],
                                    [0.07, 0.053],
                                    [-0.002, 0.05],
                                    [-0.291, 0.505],
                                    [-0.455, 0.389],
                                    [-0.473, 0.172],
                                    [-0.487, 0.037],
                                    [-0.469, -0.09],
                                    [-0.431, -0.204],
                                    [-0.367, -0.308],
                                    [-0.287, -0.405],
                                    [-0.177, -0.486],
                                    [-0.038, -0.493],
                                    [0.084, -0.469],
                                    [0.2, -0.433],
                                    [0.304, -0.365],
                                    [0.394, -0.284],
                                    [0.618, -0.224],
                                    [0.607, 0.013],
                                    [0.058, 0.02],
                                    [0.027, 0.027],
                                    [0.011, 0.029],
                                    [0.001, 0.023],
                                    [0.0, 0.0],
                                    [-0.01, 0.03],
                                    [-0.053, 0.045],
                                    [-0.481, -0.158],
                                    [-0.512, -0.019],
                                    [-0.401, 0.146],
                                    [-0.335, 0.243],
                                    [-0.256, 0.314],
                                    [-0.17, 0.368],
                                    [-0.073, 0.402],
                                    [0.032, 0.417],
                                    [0.148, 0.408],
                                    [0.244, 0.342],
                                    [0.312, 0.263],
                                    [0.366, 0.178],
                                    [0.396, 0.079],
                                    [0.412, -0.025],
                                    [0.252, -0.091],
                                    [0.225, -0.139],
                                    [0.194, -0.169],
                                    [0.161, -0.196]
                                  ],
                                  "v": [
                                    [-153.076, 18.317],
                                    [-152.916, 18.178],
                                    [-152.735, 18.201],
                                    [-152.417, 18.444],
                                    [-152.316, 18.598],
                                    [-152.379, 18.781],
                                    [-153.499, 20.122],
                                    [-155.108, 21.041],
                                    [-156.548, 21.353],
                                    [-157.982, 21.274],
                                    [-159.332, 20.833],
                                    [-160.529, 20.065],
                                    [-161.511, 18.996],
                                    [-162.207, 17.66],
                                    [-162.53, 16.192],
                                    [-162.461, 14.749],
                                    [-162.035, 13.395],
                                    [-161.281, 12.198],
                                    [-160.234, 11.227],
                                    [-158.925, 10.541],
                                    [-157.089, 10.225],
                                    [-155.349, 10.528],
                                    [-155.22, 10.598],
                                    [-155.162, 10.682],
                                    [-155.145, 10.761],
                                    [-155.148, 10.806],
                                    [-155.259, 11.196],
                                    [-155.352, 11.309],
                                    [-155.588, 11.323],
                                    [-157.077, 11.058],
                                    [-158.616, 11.309],
                                    [-159.72, 11.893],
                                    [-160.606, 12.728],
                                    [-161.244, 13.751],
                                    [-161.61, 14.903],
                                    [-161.673, 16.13],
                                    [-161.402, 17.368],
                                    [-160.813, 18.494],
                                    [-159.978, 19.401],
                                    [-158.961, 20.064],
                                    [-157.817, 20.451],
                                    [-156.605, 20.533],
                                    [-155.386, 20.277],
                                    [-154.67, 19.932],
                                    [-154.042, 19.47],
                                    [-153.51, 18.923]
                                  ],
                                  "c": true
                                },
                                "a": 0
                              }
                            },
                            {
                              "ty": "fl",
                              "nm": "Fill 1",
                              "bm": 0,
                              "mn": "ADBE Vector Graphic - Fill",
                              "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] },
                              "o": { "a": 0, "k": 100.0 },
                              "r": 1
                            },
                            {
                              "ty": "tr",
                              "o": { "a": 0, "k": 100.0 },
                              "r": { "a": 0, "k": 0.0 },
                              "p": {
                                "k": [
                                  {
                                    "i": { "x": 0.667, "y": 1.0 },
                                    "o": { "x": 0.333, "y": 0.0 },
                                    "t": 13,
                                    "s": [0, 0],
                                    "ti": [0, 0],
                                    "to": [-1.037, -2.814]
                                  },
                                  {
                                    "i": { "x": 0.667, "y": 1.0 },
                                    "o": { "x": 0.333, "y": 0.0 },
                                    "t": 17.565,
                                    "s": [-6.222, -16.885],
                                    "ti": [-1.037, -2.814],
                                    "to": [0, 0]
                                  },
                                  { "t": 21.479, "s": [0, 0] }
                                ],
                                "x": "var $bm_rt;\nvar fx = effect('\u015dlosilo pli pura 3');\nvar doAnticipation = fx(1).value;\nvar doInterpolation = fx(2).value;\nvar doFollowThrough = fx(3).value;\nvar damping = $bm_div(fx(15).value, 10);\nvar elasticity = $bm_div(fx(13).value, 10);\nvar bounce = fx(17).value;\nvar anticipationDuration = fx(5).value;\nvar anticipationQuantity = $bm_div(fx(6).value, 100);\nvar slowIn = $bm_div(fx(9).value, 100);\nvar slowOut = $bm_div(fx(10).value, 100);\nvar spatialMode = fx(21).value;\nvar spatialDoInterpolation = fx(20).value;\nvar moBlurPrecision = fx(32).value;\nvar elasticityRandom = fx(14).value;\nvar dampingRandom = fx(16).value;\nvar softBody = fx(28).value;\nvar flexibility = $bm_div(fx(29).value, 100);\nvar doOverlap = fx(23).value;\nvar overlapDuration = fx(24).value;\nvar overlapRandom = fx(25).value;\nvar threshold = $bm_div($bm_div(1, moBlurPrecision), 1000);\nvar zeroValue;\nif ($bm_isInstanceOfArray(value)) {\n    if (value.length == 2)\n        zeroValue = [\n            0,\n            0\n        ];\n    else if (value.length == 3)\n        zeroValue = [\n            0,\n            0,\n            0\n        ];\n    else if (value.length == 4)\n        zeroValue = [\n            0,\n            0,\n            0,\n            0\n        ];\n} else\n    zeroValue = 0;\nvar isThisSpatial = isSpatial(thisProperty);\nvar isThisPosition = thisProperty === $bm_transform.position;\nvar simulate = false;\nif (isThisSpatial) {\n    doInterpolation = doInterpolation && spatialDoInterpolation;\n    if (isThisPosition && thisProperty.numKeys > 0) {\n        doOverlap = false;\n        simulate = false;\n    } else {\n        simulate = spatialMode == 2;\n        doOverlap = overlapDuration != 0 && doOverlap && simulate;\n    }\n} else {\n    doOverlap = false;\n}\nif (!doOverlap) {\n    overlapDuration = 0;\n}\nif (simulate && softBody && isThisSpatial && !isThisPosition && (doFollowThrough || doOverlap)) {\n    var distanceRatio = $bm_div(length(valueAtTime(0), $bm_transform.anchorPoint), $bm_div(thisLayer.width, 2));\n    distanceRatio = $bm_div($bm_sum(1, $bm_mul(distanceRatio, flexibility)), 2);\n    if (doFollowThrough) {\n        elasticity = $bm_div(elasticity, distanceRatio);\n        damping = $bm_div(damping, distanceRatio);\n    }\n    if (doOverlap) {\n        overlapDuration = $bm_mul(overlapDuration, distanceRatio);\n    }\n}\nseedRandom(0, true);\nif (doFollowThrough) {\n    if (elasticityRandom > 0)\n        elasticity = addNoise(elasticity, elasticityRandom);\n    if (dampingRandom > 0)\n        damping = addNoise(damping, dampingRandom);\n}\nif (doOverlap) {\n    if (doOverlap && overlapRandom > 0)\n        overlapDuration = addNoise(overlapDuration, overlapRandom);\n}\nvar result = value;\nfunction isSpatial(prop) {\n    if (!(prop.value instanceof Array))\n        return false;\n    if (prop.value.length != 2 && prop.value.length != 3)\n        return false;\n    try {\n        if (typeof prop.speed !== 'undefined')\n            return true;\n    } catch (e) {\n        return false;\n    }\n}\nfunction addNoise(val, quantity) {\n    var randomValue = random(0.9, 1.1);\n    var noiseValue = noise($bm_mul(valueAtTime(0), randomValue));\n    noiseValue = $bm_mul(noiseValue, $bm_div(quantity, 100));\n    return $bm_mul(val, $bm_sum(noiseValue, 1));\n}\nfunction isAfterLastKey() {\n    if (numKeys == 0)\n        return false;\n    var nKey = nearestKey(time);\n    return nKey.time <= time && nKey.index == numKeys;\n}\nfunction isStill(t, threshold) {\n    var d = $bm_sub(valueAtTime(t), valueAtTime($bm_sum(t, framesToTime(1))));\n    if ($bm_isInstanceOfArray(d)) {\n        for (var i = 0; i < d.length; i++) {\n            d[i] = Math.abs(d[i]);\n            if (d[i] >= threshold) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        d = Math.abs(d);\n        return d < threshold;\n    }\n}\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\n    if (arguments.length !== 5 && arguments.length !== 6)\n        return t;\n    var a = $bm_sub(value2, value1);\n    var b = $bm_sub(tMax, tMin);\n    if (b == 0)\n        return t;\n    var c = clamp($bm_div($bm_sub(t, tMin), b), 0, 1);\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4)\n        bezierPoints = [\n            0.33,\n            0,\n            0.66,\n            1\n        ];\n    return $bm_sum($bm_mul(a, h(c, bezierPoints)), value1);\n    function h(f, g) {\n        var x = $bm_mul(3, g[0]);\n        var j = $bm_sub($bm_mul(3, $bm_sub(g[2], g[0])), x);\n        var k = $bm_sub($bm_sub(1, x), j);\n        var l = $bm_mul(3, g[1]);\n        var m = $bm_sub($bm_mul(3, $bm_sub(g[3], g[1])), l);\n        var n = $bm_sub($bm_sub(1, l), m);\n        var d = f;\n        for (var i = 0; i < 5; i++) {\n            var z = $bm_sub($bm_mul(d, $bm_sum(x, $bm_mul(d, $bm_sum(j, $bm_mul(d, k))))), f);\n            if (Math.abs(z) < 0.001)\n                break;\n            d = $bm_sub(d, $bm_div(z, $bm_sum(x, $bm_mul(d, $bm_sum($bm_mul(2, j), $bm_mul($bm_mul(3, k), d))))));\n        }\n        return $bm_mul(d, $bm_sum(l, $bm_mul(d, $bm_sum(m, $bm_mul(d, n)))));\n    }\n}\nfunction getPropWorldSpeed(t, prop) {\n    return length(getPropWorldVelocity(t, prop));\n}\nfunction getPrevKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time <= t)\n        return nKey;\n    if (nKey.index > 1)\n        return key($bm_sub(nKey.index, 1));\n    return null;\n}\nfunction getNextKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time >= t)\n        return nKey;\n    if (nKey.index < numKeys)\n        return key($bm_sum(nKey.index, 1));\n    return null;\n}\nfunction getPropWorldVelocity(t, prop) {\n    return $bm_mul($bm_sub(getPropWorldValue($bm_sum(t, 0.005), prop), getPropWorldValue($bm_sub(t, 0.005), prop)), 100);\n}\nfunction getLayerWorldPos(t, l) {\n    return l.toWorld(l.anchorPoint, t);\n}\nfunction getPropWorldValue(t, prop) {\n    if (isPosition(prop))\n        return getLayerWorldPos(t, thisLayer);\n    return thisLayer.toWorld(prop.valueAtTime(t), t);\n}\nfunction isPosition(prop) {\n    return prop === $bm_transform.position;\n}\nfunction isKeyTop(k, axis) {\n    var prevSpeed = velocityAtTime($bm_sub(k.time, threshold));\n    var nextSpeed = velocityAtTime($bm_sum(k.time, threshold));\n    if ($bm_isInstanceOfArray(value)) {\n        prevSpeed = prevSpeed[axis];\n        nextSpeed = nextSpeed[axis];\n    }\n    if (Math.abs(prevSpeed) < 0.01 || Math.abs(nextSpeed) < 0.01)\n        return true;\n    return $bm_mul(prevSpeed, nextSpeed) < 0;\n}\nfunction anticipate() {\n    var anticipation = zeroValue;\n    if (isAfterLastKey())\n        return anticipation;\n    if (numKeys < 2)\n        return anticipation;\n    var nextKey = getNextKey(time);\n    var aKey = nextKey;\n    if (!isStill(aKey.time - 0.1, 0.1)) {\n        aKey = getPrevKey(time);\n        if (!isStill(aKey.time - 0.1, 0.1))\n            return anticipation;\n    }\n    if (aKey.index == numKeys)\n        return anticipation;\n    var anticipationMiddle = aKey.time;\n    var anticipationStart = $bm_sub(anticipationMiddle, anticipationDuration);\n    var anticipationEnd = key(aKey.index + 1).time;\n    var startValue = anticipation;\n    var midValue = $bm_mul($bm_sum($bm_neg(valueAtTime($bm_sum(anticipationMiddle, anticipationDuration))), aKey.value), anticipationQuantity);\n    var endValue = anticipation;\n    if (time < anticipationStart) {\n        return anticipation;\n    } else if (time < anticipationMiddle) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue[i], midValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue, midValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else if (time <= anticipationEnd) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue[i], endValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue, endValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else {\n        return anticipation;\n    }\n}\nfunction followThroughAtTime(t) {\n    var fThrough = zeroValue;\n    if (elasticity == 0)\n        return fThrough;\n    var propSpeed;\n    if (!simulate) {\n        if (numKeys < 2)\n            return fThrough;\n        if (nearestKey(t).index == 1)\n            return fThrough;\n        propSpeed = length(velocityAtTime(t));\n        if (propSpeed >= threshold)\n            return fThrough;\n    } else {\n        propSpeed = getPropWorldSpeed(t, thisProperty);\n        if (propSpeed >= threshold)\n            return fThrough;\n    }\n    var fThroughStart = 0;\n    var fThroughTime = 0;\n    if (simulate) {\n        var speedI = getPropWorldSpeed(t, thisProperty);\n        var i = t;\n        while (speedI < threshold && i > 0) {\n            i = $bm_sub(i, $bm_div(thisComp.frameDuration, moBlurPrecision));\n            speedI = getPropWorldSpeed(i, thisProperty);\n        }\n        fThroughStart = i;\n    } else {\n        var fThroughKey = getPrevKey(t);\n        fThroughStart = fThroughKey.time;\n    }\n    if (fThroughStart == 0)\n        return fThrough;\n    fThroughTime = $bm_sub(t, fThroughStart);\n    if (simulate)\n        fThrough = $bm_div(getPropWorldVelocity($bm_sub(fThroughStart, thisComp.frameDuration), thisProperty), 2);\n    else\n        fThrough = $bm_div(velocityAtTime($bm_sub(fThroughStart, thisComp.frameDuration)), 2);\n    if (bounce) {\n        var cycleDamp = Math.exp($bm_mul($bm_mul(fThroughTime, damping), 0.1));\n        var damp = $bm_div(Math.exp($bm_mul(fThroughTime, damping)), $bm_div(elasticity, 2));\n        var cycleDuration = $bm_div(1, $bm_mul(elasticity, 2));\n        cycleDuration = Math.round(timeToFrames(cycleDuration));\n        cycleDuration = framesToTime(cycleDuration);\n        var midDuration = $bm_div(cycleDuration, 2);\n        var maxValue = $bm_mul(fThrough, midDuration);\n        var cycvarime = fThroughTime;\n        var numEndCycles = 1;\n        while (cycvarime > cycleDuration) {\n            cycvarime = $bm_sub(cycvarime, cycleDuration);\n            cycleDuration = $bm_div(cycleDuration, cycleDamp);\n            cycleDuration = Math.round(timeToFrames(cycleDuration));\n            if (cycleDuration < 2) {\n                cycleDuration = 2;\n                numEndCycles++;\n            }\n            cycleDuration = framesToTime(cycleDuration);\n            midDuration = $bm_div(cycleDuration, 2);\n            maxValue = $bm_div($bm_mul(fThrough, midDuration), damp);\n            if (numEndCycles > 100 / damping && maxValue < threshold)\n                return zeroValue;\n        }\n        if (cycvarime < midDuration)\n            fThrough = bezierInterpolation(cycvarime, 0, midDuration, 0, maxValue, [\n                0,\n                0.1,\n                slowIn,\n                1\n            ]);\n        else\n            fThrough = bezierInterpolation(cycvarime, midDuration, cycleDuration, maxValue, 0, [\n                $bm_sub(1, slowIn),\n                0,\n                1,\n                0.9\n            ]);\n    } else {\n        var damp = Math.exp($bm_mul(fThroughTime, damping));\n        var sinus = $bm_mul($bm_mul($bm_mul(elasticity, fThroughTime), 2), Math.PI);\n        sinus = Math.sin(sinus);\n        sinus = $bm_mul($bm_div(0.3, elasticity), sinus);\n        sinus = $bm_div(sinus, damp);\n        if (Math.abs(sinus) < $bm_div(threshold, 100))\n            return 0;\n        fThrough = $bm_mul(fThrough, sinus);\n        if (threshold > 0) {\n            fThrough = $bm_mul(fThrough, $bm_sub(1, $bm_div(propSpeed, threshold)));\n        }\n    }\n    if (bounce) {\n        var prevValue = valueAtTime($bm_sub(fThroughStart, thisComp.frameDuration));\n        var startValue = valueAtTime(fThroughStart);\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < prevValue.length; i++) {\n                if (prevValue[i] > startValue[i])\n                    fThrough[i] = Math.abs(fThrough[i]);\n                if (prevValue[i] < startValue[i])\n                    fThrough[i] = $bm_neg(Math.abs(fThrough[i]));\n            }\n        } else {\n            if (prevValue > startValue)\n                fThrough = Math.abs(fThrough);\n            if (prevValue < startValue)\n                fThrough = $bm_neg(Math.abs(fThrough));\n        }\n    }\n    if (simulate) {\n        if (!isThisPosition) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer));\n            fThrough = $bm_sub(thisLayer.fromWorld(fThrough), thisLayer.anchorPoint);\n        } else if (thisLayer.hasParent) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer.parent));\n            fThrough = $bm_sub(thisLayer.parent.fromWorld(fThrough), thisLayer.parent.anchorPoint);\n        }\n    }\n    return fThrough;\n}\nfunction followThrough() {\n    var propSpeed = length(velocity);\n    if (propSpeed < threshold)\n        return followThroughAtTime($bm_sub(time, overlapDuration));\n    var fThrough = zeroValue;\n    var t = time;\n    while (t > 0) {\n        t = $bm_sub(t, thisComp.frameDuration);\n        if (simulate)\n            propSpeed = getPropWorldSpeed($bm_sub(t, overlapDuration), thisProperty);\n        else\n            propSpeed = length(velocityAtTime(t));\n        if (propSpeed < threshold) {\n            fThrough = followThroughAtTime($bm_sub(t, overlapDuration));\n            break;\n        }\n    }\n    return linear(time, t, $bm_sum(t, $bm_mul(anticipationDuration, 2)), fThrough, zeroValue);\n}\nfunction smartSmooth(axis) {\n    var startKey = nearestKey(time);\n    var endKey = startKey;\n    if (time == startKey.time)\n        return 0;\n    if (time < startKey.time && startKey.index == 1)\n        return 0;\n    if (time > startKey.time && startKey.index == numKeys)\n        return 0;\n    if (time < startKey.time)\n        startKey = key($bm_sub(startKey.index, 1));\n    if (time > startKey.time)\n        endKey = key($bm_sum(startKey.index, 1));\n    var sI = 0.66;\n    var sO = 0.33;\n    var sIV = 1;\n    var sOV = 0;\n    var sVal = startKey.value;\n    var eVal = endKey.value;\n    if ($bm_isInstanceOfArray(value)) {\n        sVal = sVal[axis];\n        eVal = eVal[axis];\n    }\n    var sTime = startKey.time;\n    var eTime = endKey.time;\n    if (isKeyTop(startKey, axis))\n        sO = slowOut;\n    else {\n        var prevKey = key($bm_sub(startKey.index, 1));\n        var pVal = prevKey.value;\n        if ($bm_isInstanceOfArray(value))\n            pVal = pVal[axis];\n        sOV = $bm_div($bm_sub(sVal, pVal), $bm_sub(eVal, pVal));\n    }\n    if (isKeyTop(endKey, axis)) {\n        sI = slowIn;\n        if (endKey.index != numKeys) {\n            var nextKey = key($bm_sum(endKey.index, 1));\n            var nVal = nextKey.value;\n            if ($bm_isInstanceOfArray(value))\n                nVal = nVal[axis];\n            if (Math.abs(nVal - eVal) < 0.01 && doFollowThrough)\n                sI = 1;\n        }\n    } else {\n        var nextKey = key($bm_sum(endKey.index, 1));\n        var nVal = nextKey.value;\n        if ($bm_isInstanceOfArray(value))\n            nVal = nVal[axis];\n        sIV = $bm_div($bm_sub(eVal, sVal), $bm_sub(nVal, sVal));\n    }\n    if (endKey.index == numKeys && doFollowThrough) {\n        sI = 1;\n    }\n    var val = value;\n    if ($bm_isInstanceOfArray(value))\n        val = val[axis];\n    return $bm_sub(bezierInterpolation(time, sTime, eTime, sVal, eVal, [\n        sO,\n        sOV,\n        sI,\n        sIV\n    ]), val);\n}\nfunction overlap() {\n    var ol = zeroValue;\n    if (isThisPosition && !hasParent)\n        return zeroValue;\n    ol = $bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisProperty), getPropWorldValue(time, thisProperty));\n    var motionRatio = $bm_div($bm_div(length(zeroValue, ol), thisLayer.width), 2);\n    if (isThisPosition) {\n        var originalDistance = length(valueAtTime(0));\n        motionRatio = $bm_div(length(zeroValue, ol), thisComp.width);\n    }\n    ol = $bm_sum(ol, getPropWorldValue(time, thisProperty));\n    ol = $bm_sum(ol, $bm_mul($bm_mul($bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisLayer.anchorPoint), ol), motionRatio), flexibility));\n    ol = thisLayer.fromWorld(ol);\n    if (!isThisPosition)\n        ol = $bm_sub(ol, value);\n    else {\n        ol = linear(flexibility, 0, 100, $bm_div(ol, 2), 0);\n        var prevParentWorldPos = getLayerWorldPos($bm_sub(time, overlapDuration), parent);\n        ol = $bm_sum(ol, $bm_mul($bm_mul($bm_mul(thisLayer.fromWorld(prevParentWorldPos), motionRatio), flexibility), 5));\n    }\n    return ol;\n}\nvar okToGo = false;\nif (simulate && fx.enabled)\n    okToGo = true;\nelse if (numKeys > 1 && fx.enabled)\n    okToGo = true;\nif (okToGo) {\n    var smartSmoothResult = zeroValue;\n    if (doInterpolation) {\n        if ($bm_isInstanceOfArray(value)) {\n            if (value.length == 2)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1)\n                ];\n            else if (value.length == 3)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2)\n                ];\n            else if (value.length == 4)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2),\n                    smartSmooth(3)\n                ];\n        } else {\n            smartSmoothResult = smartSmooth(0);\n        }\n    }\n    if (doAnticipation)\n        result = $bm_sum(result, anticipate());\n    result = $bm_sum(result, smartSmoothResult);\n    if (doFollowThrough)\n        result = $bm_sum(result, followThrough());\n    if (doOverlap)\n        result = $bm_sum(result, overlap());\n}\n$bm_rt = result;",
                                "a": 1
                              },
                              "a": { "a": 0, "k": [0.0, 0.0] },
                              "s": { "a": 0, "k": [100.0, 100.0] },
                              "nm": "Transform",
                              "sk": { "a": 0, "k": 0.0 },
                              "sa": { "a": 0, "k": 0.0 }
                            }
                          ]
                        },
                        {
                          "ty": "tr",
                          "o": { "a": 0, "k": 100.0 },
                          "r": { "a": 0, "k": 0.0 },
                          "p": { "a": 0, "k": [0.0, 0.0] },
                          "a": { "a": 0, "k": [0.0, 0.0] },
                          "s": { "a": 0, "k": [100.0, 100.0] },
                          "nm": "Transform",
                          "sk": { "a": 0, "k": 0.0 },
                          "sa": { "a": 0, "k": 0.0 }
                        }
                      ]
                    },
                    {
                      "ty": "gr",
                      "nm": "Group 2",
                      "bm": 0,
                      "mn": "ADBE Vector Group",
                      "it": [
                        {
                          "ty": "sh",
                          "nm": "Path 1",
                          "mn": "ADBE Vector Shape - Group",
                          "ind": 0,
                          "ks": {
                            "k": {
                              "i": [
                                [-1.496, -4.217],
                                [0.0, 0.0],
                                [4.217, -1.496],
                                [0.0, 0.0],
                                [0.0, 0.0],
                                [0.0, 0.0],
                                [0.0, 0.0],
                                [1.496, 4.217],
                                [0.0, 0.0],
                                [-4.217, 1.496],
                                [0.0, 0.0]
                              ],
                              "o": [
                                [0.0, 0.0],
                                [1.496, 4.217],
                                [0.0, 0.0],
                                [0.0, 0.0],
                                [0.0, 0.0],
                                [0.0, 0.0],
                                [-4.217, 1.496],
                                [0.0, 0.0],
                                [-1.496, -4.217],
                                [0.0, 0.0],
                                [4.217, -1.496]
                              ],
                              "v": [
                                [-89.094, -28.615],
                                [-76.223, 7.668],
                                [-81.151, 18.014],
                                [-130.845, 35.642],
                                [-134.768, 49.582],
                                [-140.54, 39.081],
                                [-150.978, 42.783],
                                [-161.324, 37.855],
                                [-174.194, 1.573],
                                [-169.266, -8.773],
                                [-99.44, -33.542]
                              ],
                              "c": true
                            },
                            "a": 0
                          }
                        },
                        {
                          "ty": "st",
                          "nm": "Stroke 1",
                          "bm": 0,
                          "mn": "ADBE Vector Graphic - Stroke",
                          "lc": 2,
                          "lj": 2,
                          "o": { "a": 0, "k": 100.0 },
                          "w": { "a": 0, "k": 0.684 },
                          "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] }
                        },
                        {
                          "ty": "fl",
                          "nm": "Fill 1",
                          "bm": 0,
                          "mn": "ADBE Vector Graphic - Fill",
                          "c": { "a": 0, "k": [1.0, 1.0, 1.0, 1.0] },
                          "o": { "a": 0, "k": 100.0 },
                          "r": 1
                        },
                        {
                          "ty": "tr",
                          "o": { "a": 0, "k": 100.0 },
                          "r": { "a": 0, "k": 0.0 },
                          "p": { "a": 0, "k": [0.0, 0.0] },
                          "a": { "a": 0, "k": [0.0, 0.0] },
                          "s": { "a": 0, "k": [100.0, 100.0] },
                          "nm": "Transform",
                          "sk": { "a": 0, "k": 0.0 },
                          "sa": { "a": 0, "k": 0.0 }
                        }
                      ]
                    },
                    {
                      "ty": "tr",
                      "o": { "a": 0, "k": 100.0 },
                      "r": { "a": 0, "k": 0.0 },
                      "p": { "a": 0, "k": [0.0, 0.0] },
                      "a": { "a": 0, "k": [0.0, 0.0] },
                      "s": { "a": 0, "k": [100.0, 100.0] },
                      "nm": "Transform",
                      "sk": { "a": 0, "k": 0.0 },
                      "sa": { "a": 0, "k": 0.0 }
                    }
                  ]
                },
                {
                  "ty": "tr",
                  "o": { "a": 0, "k": 100.0 },
                  "r": {
                    "a": 1,
                    "k": [
                      {
                        "i": { "x": [0.667], "y": [1] },
                        "o": { "x": [0.333], "y": [0] },
                        "t": 19,
                        "s": [0.0]
                      },
                      {
                        "i": { "x": [0.667], "y": [1] },
                        "o": { "x": [0.333], "y": [0] },
                        "t": 31,
                        "s": [20.0]
                      },
                      {
                        "i": { "x": [0.667], "y": [1] },
                        "o": { "x": [0.333], "y": [0] },
                        "t": 65,
                        "s": [20.0]
                      },
                      {
                        "i": { "x": [0.667], "y": [1] },
                        "o": { "x": [0.333], "y": [0] },
                        "t": 71.521,
                        "s": [0.0]
                      },
                      {
                        "i": { "x": [0.667], "y": [1] },
                        "o": { "x": [0.333], "y": [0] },
                        "t": 77,
                        "s": [20.0]
                      },
                      {
                        "i": { "x": [0.667], "y": [1] },
                        "o": { "x": [0.333], "y": [0] },
                        "t": 84.021,
                        "s": [0.0]
                      },
                      { "t": 90, "s": [20.0] }
                    ],
                    "x": "var $bm_rt;\nvar fx = effect('\u015dlosilo pli pura 2');\nvar doAnticipation = fx(1).value;\nvar doInterpolation = fx(2).value;\nvar doFollowThrough = fx(3).value;\nvar damping = $bm_div(fx(15).value, 10);\nvar elasticity = $bm_div(fx(13).value, 10);\nvar bounce = fx(17).value;\nvar anticipationDuration = fx(5).value;\nvar anticipationQuantity = $bm_div(fx(6).value, 100);\nvar slowIn = $bm_div(fx(9).value, 100);\nvar slowOut = $bm_div(fx(10).value, 100);\nvar spatialMode = fx(21).value;\nvar spatialDoInterpolation = fx(20).value;\nvar moBlurPrecision = fx(32).value;\nvar elasticityRandom = fx(14).value;\nvar dampingRandom = fx(16).value;\nvar softBody = fx(28).value;\nvar flexibility = $bm_div(fx(29).value, 100);\nvar doOverlap = fx(23).value;\nvar overlapDuration = fx(24).value;\nvar overlapRandom = fx(25).value;\nvar threshold = $bm_div($bm_div(1, moBlurPrecision), 1000);\nvar zeroValue;\nif ($bm_isInstanceOfArray(value)) {\n    if (value.length == 2)\n        zeroValue = [\n            0,\n            0\n        ];\n    else if (value.length == 3)\n        zeroValue = [\n            0,\n            0,\n            0\n        ];\n    else if (value.length == 4)\n        zeroValue = [\n            0,\n            0,\n            0,\n            0\n        ];\n} else\n    zeroValue = 0;\nvar isThisSpatial = isSpatial(thisProperty);\nvar isThisPosition = thisProperty === $bm_transform.position;\nvar simulate = false;\nif (isThisSpatial) {\n    doInterpolation = doInterpolation && spatialDoInterpolation;\n    if (isThisPosition && thisProperty.numKeys > 0) {\n        doOverlap = false;\n        simulate = false;\n    } else {\n        simulate = spatialMode == 2;\n        doOverlap = overlapDuration != 0 && doOverlap && simulate;\n    }\n} else {\n    doOverlap = false;\n}\nif (!doOverlap) {\n    overlapDuration = 0;\n}\nif (simulate && softBody && isThisSpatial && !isThisPosition && (doFollowThrough || doOverlap)) {\n    var distanceRatio = $bm_div(length(valueAtTime(0), $bm_transform.anchorPoint), $bm_div(thisLayer.width, 2));\n    distanceRatio = $bm_div($bm_sum(1, $bm_mul(distanceRatio, flexibility)), 2);\n    if (doFollowThrough) {\n        elasticity = $bm_div(elasticity, distanceRatio);\n        damping = $bm_div(damping, distanceRatio);\n    }\n    if (doOverlap) {\n        overlapDuration = $bm_mul(overlapDuration, distanceRatio);\n    }\n}\nseedRandom(0, true);\nif (doFollowThrough) {\n    if (elasticityRandom > 0)\n        elasticity = addNoise(elasticity, elasticityRandom);\n    if (dampingRandom > 0)\n        damping = addNoise(damping, dampingRandom);\n}\nif (doOverlap) {\n    if (doOverlap && overlapRandom > 0)\n        overlapDuration = addNoise(overlapDuration, overlapRandom);\n}\nvar result = value;\nfunction isSpatial(prop) {\n    if (!(prop.value instanceof Array))\n        return false;\n    if (prop.value.length != 2 && prop.value.length != 3)\n        return false;\n    try {\n        if (typeof prop.speed !== 'undefined')\n            return true;\n    } catch (e) {\n        return false;\n    }\n}\nfunction addNoise(val, quantity) {\n    var randomValue = random(0.9, 1.1);\n    var noiseValue = noise($bm_mul(valueAtTime(0), randomValue));\n    noiseValue = $bm_mul(noiseValue, $bm_div(quantity, 100));\n    return $bm_mul(val, $bm_sum(noiseValue, 1));\n}\nfunction isAfterLastKey() {\n    if (numKeys == 0)\n        return false;\n    var nKey = nearestKey(time);\n    return nKey.time <= time && nKey.index == numKeys;\n}\nfunction isStill(t, threshold) {\n    var d = $bm_sub(valueAtTime(t), valueAtTime($bm_sum(t, framesToTime(1))));\n    if ($bm_isInstanceOfArray(d)) {\n        for (var i = 0; i < d.length; i++) {\n            d[i] = Math.abs(d[i]);\n            if (d[i] >= threshold) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        d = Math.abs(d);\n        return d < threshold;\n    }\n}\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\n    if (arguments.length !== 5 && arguments.length !== 6)\n        return t;\n    var a = $bm_sub(value2, value1);\n    var b = $bm_sub(tMax, tMin);\n    if (b == 0)\n        return t;\n    var c = clamp($bm_div($bm_sub(t, tMin), b), 0, 1);\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4)\n        bezierPoints = [\n            0.33,\n            0,\n            0.66,\n            1\n        ];\n    return $bm_sum($bm_mul(a, h(c, bezierPoints)), value1);\n    function h(f, g) {\n        var x = $bm_mul(3, g[0]);\n        var j = $bm_sub($bm_mul(3, $bm_sub(g[2], g[0])), x);\n        var k = $bm_sub($bm_sub(1, x), j);\n        var l = $bm_mul(3, g[1]);\n        var m = $bm_sub($bm_mul(3, $bm_sub(g[3], g[1])), l);\n        var n = $bm_sub($bm_sub(1, l), m);\n        var d = f;\n        for (var i = 0; i < 5; i++) {\n            var z = $bm_sub($bm_mul(d, $bm_sum(x, $bm_mul(d, $bm_sum(j, $bm_mul(d, k))))), f);\n            if (Math.abs(z) < 0.001)\n                break;\n            d = $bm_sub(d, $bm_div(z, $bm_sum(x, $bm_mul(d, $bm_sum($bm_mul(2, j), $bm_mul($bm_mul(3, k), d))))));\n        }\n        return $bm_mul(d, $bm_sum(l, $bm_mul(d, $bm_sum(m, $bm_mul(d, n)))));\n    }\n}\nfunction getPropWorldSpeed(t, prop) {\n    return length(getPropWorldVelocity(t, prop));\n}\nfunction getPrevKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time <= t)\n        return nKey;\n    if (nKey.index > 1)\n        return key($bm_sub(nKey.index, 1));\n    return null;\n}\nfunction getNextKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time >= t)\n        return nKey;\n    if (nKey.index < numKeys)\n        return key($bm_sum(nKey.index, 1));\n    return null;\n}\nfunction getPropWorldVelocity(t, prop) {\n    return $bm_mul($bm_sub(getPropWorldValue($bm_sum(t, 0.005), prop), getPropWorldValue($bm_sub(t, 0.005), prop)), 100);\n}\nfunction getLayerWorldPos(t, l) {\n    return l.toWorld(l.anchorPoint, t);\n}\nfunction getPropWorldValue(t, prop) {\n    if (isPosition(prop))\n        return getLayerWorldPos(t, thisLayer);\n    return thisLayer.toWorld(prop.valueAtTime(t), t);\n}\nfunction isPosition(prop) {\n    return prop === $bm_transform.position;\n}\nfunction isKeyTop(k, axis) {\n    var prevSpeed = velocityAtTime($bm_sub(k.time, threshold));\n    var nextSpeed = velocityAtTime($bm_sum(k.time, threshold));\n    if ($bm_isInstanceOfArray(value)) {\n        prevSpeed = prevSpeed[axis];\n        nextSpeed = nextSpeed[axis];\n    }\n    if (Math.abs(prevSpeed) < 0.01 || Math.abs(nextSpeed) < 0.01)\n        return true;\n    return $bm_mul(prevSpeed, nextSpeed) < 0;\n}\nfunction anticipate() {\n    var anticipation = zeroValue;\n    if (isAfterLastKey())\n        return anticipation;\n    if (numKeys < 2)\n        return anticipation;\n    var nextKey = getNextKey(time);\n    var aKey = nextKey;\n    if (!isStill(aKey.time - 0.1, 0.1)) {\n        aKey = getPrevKey(time);\n        if (!isStill(aKey.time - 0.1, 0.1))\n            return anticipation;\n    }\n    if (aKey.index == numKeys)\n        return anticipation;\n    var anticipationMiddle = aKey.time;\n    var anticipationStart = $bm_sub(anticipationMiddle, anticipationDuration);\n    var anticipationEnd = key(aKey.index + 1).time;\n    var startValue = anticipation;\n    var midValue = $bm_mul($bm_sum($bm_neg(valueAtTime($bm_sum(anticipationMiddle, anticipationDuration))), aKey.value), anticipationQuantity);\n    var endValue = anticipation;\n    if (time < anticipationStart) {\n        return anticipation;\n    } else if (time < anticipationMiddle) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue[i], midValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue, midValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else if (time <= anticipationEnd) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue[i], endValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue, endValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else {\n        return anticipation;\n    }\n}\nfunction followThroughAtTime(t) {\n    var fThrough = zeroValue;\n    if (elasticity == 0)\n        return fThrough;\n    var propSpeed;\n    if (!simulate) {\n        if (numKeys < 2)\n            return fThrough;\n        if (nearestKey(t).index == 1)\n            return fThrough;\n        propSpeed = length(velocityAtTime(t));\n        if (propSpeed >= threshold)\n            return fThrough;\n    } else {\n        propSpeed = getPropWorldSpeed(t, thisProperty);\n        if (propSpeed >= threshold)\n            return fThrough;\n    }\n    var fThroughStart = 0;\n    var fThroughTime = 0;\n    if (simulate) {\n        var speedI = getPropWorldSpeed(t, thisProperty);\n        var i = t;\n        while (speedI < threshold && i > 0) {\n            i = $bm_sub(i, $bm_div(thisComp.frameDuration, moBlurPrecision));\n            speedI = getPropWorldSpeed(i, thisProperty);\n        }\n        fThroughStart = i;\n    } else {\n        var fThroughKey = getPrevKey(t);\n        fThroughStart = fThroughKey.time;\n    }\n    if (fThroughStart == 0)\n        return fThrough;\n    fThroughTime = $bm_sub(t, fThroughStart);\n    if (simulate)\n        fThrough = $bm_div(getPropWorldVelocity($bm_sub(fThroughStart, thisComp.frameDuration), thisProperty), 2);\n    else\n        fThrough = $bm_div(velocityAtTime($bm_sub(fThroughStart, thisComp.frameDuration)), 2);\n    if (bounce) {\n        var cycleDamp = Math.exp($bm_mul($bm_mul(fThroughTime, damping), 0.1));\n        var damp = $bm_div(Math.exp($bm_mul(fThroughTime, damping)), $bm_div(elasticity, 2));\n        var cycleDuration = $bm_div(1, $bm_mul(elasticity, 2));\n        cycleDuration = Math.round(timeToFrames(cycleDuration));\n        cycleDuration = framesToTime(cycleDuration);\n        var midDuration = $bm_div(cycleDuration, 2);\n        var maxValue = $bm_mul(fThrough, midDuration);\n        var cycvarime = fThroughTime;\n        var numEndCycles = 1;\n        while (cycvarime > cycleDuration) {\n            cycvarime = $bm_sub(cycvarime, cycleDuration);\n            cycleDuration = $bm_div(cycleDuration, cycleDamp);\n            cycleDuration = Math.round(timeToFrames(cycleDuration));\n            if (cycleDuration < 2) {\n                cycleDuration = 2;\n                numEndCycles++;\n            }\n            cycleDuration = framesToTime(cycleDuration);\n            midDuration = $bm_div(cycleDuration, 2);\n            maxValue = $bm_div($bm_mul(fThrough, midDuration), damp);\n            if (numEndCycles > 100 / damping && maxValue < threshold)\n                return zeroValue;\n        }\n        if (cycvarime < midDuration)\n            fThrough = bezierInterpolation(cycvarime, 0, midDuration, 0, maxValue, [\n                0,\n                0.1,\n                slowIn,\n                1\n            ]);\n        else\n            fThrough = bezierInterpolation(cycvarime, midDuration, cycleDuration, maxValue, 0, [\n                $bm_sub(1, slowIn),\n                0,\n                1,\n                0.9\n            ]);\n    } else {\n        var damp = Math.exp($bm_mul(fThroughTime, damping));\n        var sinus = $bm_mul($bm_mul($bm_mul(elasticity, fThroughTime), 2), Math.PI);\n        sinus = Math.sin(sinus);\n        sinus = $bm_mul($bm_div(0.3, elasticity), sinus);\n        sinus = $bm_div(sinus, damp);\n        if (Math.abs(sinus) < $bm_div(threshold, 100))\n            return 0;\n        fThrough = $bm_mul(fThrough, sinus);\n        if (threshold > 0) {\n            fThrough = $bm_mul(fThrough, $bm_sub(1, $bm_div(propSpeed, threshold)));\n        }\n    }\n    if (bounce) {\n        var prevValue = valueAtTime($bm_sub(fThroughStart, thisComp.frameDuration));\n        var startValue = valueAtTime(fThroughStart);\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < prevValue.length; i++) {\n                if (prevValue[i] > startValue[i])\n                    fThrough[i] = Math.abs(fThrough[i]);\n                if (prevValue[i] < startValue[i])\n                    fThrough[i] = $bm_neg(Math.abs(fThrough[i]));\n            }\n        } else {\n            if (prevValue > startValue)\n                fThrough = Math.abs(fThrough);\n            if (prevValue < startValue)\n                fThrough = $bm_neg(Math.abs(fThrough));\n        }\n    }\n    if (simulate) {\n        if (!isThisPosition) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer));\n            fThrough = $bm_sub(thisLayer.fromWorld(fThrough), thisLayer.anchorPoint);\n        } else if (thisLayer.hasParent) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer.parent));\n            fThrough = $bm_sub(thisLayer.parent.fromWorld(fThrough), thisLayer.parent.anchorPoint);\n        }\n    }\n    return fThrough;\n}\nfunction followThrough() {\n    var propSpeed = length(velocity);\n    if (propSpeed < threshold)\n        return followThroughAtTime($bm_sub(time, overlapDuration));\n    var fThrough = zeroValue;\n    var t = time;\n    while (t > 0) {\n        t = $bm_sub(t, thisComp.frameDuration);\n        if (simulate)\n            propSpeed = getPropWorldSpeed($bm_sub(t, overlapDuration), thisProperty);\n        else\n            propSpeed = length(velocityAtTime(t));\n        if (propSpeed < threshold) {\n            fThrough = followThroughAtTime($bm_sub(t, overlapDuration));\n            break;\n        }\n    }\n    return linear(time, t, $bm_sum(t, $bm_mul(anticipationDuration, 2)), fThrough, zeroValue);\n}\nfunction smartSmooth(axis) {\n    var startKey = nearestKey(time);\n    var endKey = startKey;\n    if (time == startKey.time)\n        return 0;\n    if (time < startKey.time && startKey.index == 1)\n        return 0;\n    if (time > startKey.time && startKey.index == numKeys)\n        return 0;\n    if (time < startKey.time)\n        startKey = key($bm_sub(startKey.index, 1));\n    if (time > startKey.time)\n        endKey = key($bm_sum(startKey.index, 1));\n    var sI = 0.66;\n    var sO = 0.33;\n    var sIV = 1;\n    var sOV = 0;\n    var sVal = startKey.value;\n    var eVal = endKey.value;\n    if ($bm_isInstanceOfArray(value)) {\n        sVal = sVal[axis];\n        eVal = eVal[axis];\n    }\n    var sTime = startKey.time;\n    var eTime = endKey.time;\n    if (isKeyTop(startKey, axis))\n        sO = slowOut;\n    else {\n        var prevKey = key($bm_sub(startKey.index, 1));\n        var pVal = prevKey.value;\n        if ($bm_isInstanceOfArray(value))\n            pVal = pVal[axis];\n        sOV = $bm_div($bm_sub(sVal, pVal), $bm_sub(eVal, pVal));\n    }\n    if (isKeyTop(endKey, axis)) {\n        sI = slowIn;\n        if (endKey.index != numKeys) {\n            var nextKey = key($bm_sum(endKey.index, 1));\n            var nVal = nextKey.value;\n            if ($bm_isInstanceOfArray(value))\n                nVal = nVal[axis];\n            if (Math.abs(nVal - eVal) < 0.01 && doFollowThrough)\n                sI = 1;\n        }\n    } else {\n        var nextKey = key($bm_sum(endKey.index, 1));\n        var nVal = nextKey.value;\n        if ($bm_isInstanceOfArray(value))\n            nVal = nVal[axis];\n        sIV = $bm_div($bm_sub(eVal, sVal), $bm_sub(nVal, sVal));\n    }\n    if (endKey.index == numKeys && doFollowThrough) {\n        sI = 1;\n    }\n    var val = value;\n    if ($bm_isInstanceOfArray(value))\n        val = val[axis];\n    return $bm_sub(bezierInterpolation(time, sTime, eTime, sVal, eVal, [\n        sO,\n        sOV,\n        sI,\n        sIV\n    ]), val);\n}\nfunction overlap() {\n    var ol = zeroValue;\n    if (isThisPosition && !hasParent)\n        return zeroValue;\n    ol = $bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisProperty), getPropWorldValue(time, thisProperty));\n    var motionRatio = $bm_div($bm_div(length(zeroValue, ol), thisLayer.width), 2);\n    if (isThisPosition) {\n        var originalDistance = length(valueAtTime(0));\n        motionRatio = $bm_div(length(zeroValue, ol), thisComp.width);\n    }\n    ol = $bm_sum(ol, getPropWorldValue(time, thisProperty));\n    ol = $bm_sum(ol, $bm_mul($bm_mul($bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisLayer.anchorPoint), ol), motionRatio), flexibility));\n    ol = thisLayer.fromWorld(ol);\n    if (!isThisPosition)\n        ol = $bm_sub(ol, value);\n    else {\n        ol = linear(flexibility, 0, 100, $bm_div(ol, 2), 0);\n        var prevParentWorldPos = getLayerWorldPos($bm_sub(time, overlapDuration), parent);\n        ol = $bm_sum(ol, $bm_mul($bm_mul($bm_mul(thisLayer.fromWorld(prevParentWorldPos), motionRatio), flexibility), 5));\n    }\n    return ol;\n}\nvar okToGo = false;\nif (simulate && fx.enabled)\n    okToGo = true;\nelse if (numKeys > 1 && fx.enabled)\n    okToGo = true;\nif (okToGo) {\n    var smartSmoothResult = zeroValue;\n    if (doInterpolation) {\n        if ($bm_isInstanceOfArray(value)) {\n            if (value.length == 2)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1)\n                ];\n            else if (value.length == 3)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2)\n                ];\n            else if (value.length == 4)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2),\n                    smartSmooth(3)\n                ];\n        } else {\n            smartSmoothResult = smartSmooth(0);\n        }\n    }\n    if (doAnticipation)\n        result = $bm_sum(result, anticipate());\n    result = $bm_sum(result, smartSmoothResult);\n    if (doFollowThrough)\n        result = $bm_sum(result, followThrough());\n    if (doOverlap)\n        result = $bm_sum(result, overlap());\n}\n$bm_rt = result;"
                  },
                  "p": { "a": 0, "k": [-79.703, -63.831] },
                  "a": { "a": 0, "k": [-79.703, -63.831] },
                  "s": { "a": 0, "k": [100.0, 100.0] },
                  "nm": "Transform",
                  "sk": { "a": 0, "k": 0.0 },
                  "sa": {
                    "a": 0,
                    "k": 0.0,
                    "x": "var $bm_rt;\nvar fx = effect('\u015dlosilo pli pura 2');\nvar doAnticipation = fx(1).value;\nvar doInterpolation = fx(2).value;\nvar doFollowThrough = fx(3).value;\nvar damping = $bm_div(fx(15).value, 10);\nvar elasticity = $bm_div(fx(13).value, 10);\nvar bounce = fx(17).value;\nvar anticipationDuration = fx(5).value;\nvar anticipationQuantity = $bm_div(fx(6).value, 100);\nvar slowIn = $bm_div(fx(9).value, 100);\nvar slowOut = $bm_div(fx(10).value, 100);\nvar spatialMode = fx(21).value;\nvar spatialDoInterpolation = fx(20).value;\nvar moBlurPrecision = fx(32).value;\nvar elasticityRandom = fx(14).value;\nvar dampingRandom = fx(16).value;\nvar softBody = fx(28).value;\nvar flexibility = $bm_div(fx(29).value, 100);\nvar doOverlap = fx(23).value;\nvar overlapDuration = fx(24).value;\nvar overlapRandom = fx(25).value;\nvar threshold = $bm_div($bm_div(1, moBlurPrecision), 1000);\nvar zeroValue;\nif ($bm_isInstanceOfArray(value)) {\n    if (value.length == 2)\n        zeroValue = [\n            0,\n            0\n        ];\n    else if (value.length == 3)\n        zeroValue = [\n            0,\n            0,\n            0\n        ];\n    else if (value.length == 4)\n        zeroValue = [\n            0,\n            0,\n            0,\n            0\n        ];\n} else\n    zeroValue = 0;\nvar isThisSpatial = isSpatial(thisProperty);\nvar isThisPosition = thisProperty === $bm_transform.position;\nvar simulate = false;\nif (isThisSpatial) {\n    doInterpolation = doInterpolation && spatialDoInterpolation;\n    if (isThisPosition && thisProperty.numKeys > 0) {\n        doOverlap = false;\n        simulate = false;\n    } else {\n        simulate = spatialMode == 2;\n        doOverlap = overlapDuration != 0 && doOverlap && simulate;\n    }\n} else {\n    doOverlap = false;\n}\nif (!doOverlap) {\n    overlapDuration = 0;\n}\nif (simulate && softBody && isThisSpatial && !isThisPosition && (doFollowThrough || doOverlap)) {\n    var distanceRatio = $bm_div(length(valueAtTime(0), $bm_transform.anchorPoint), $bm_div(thisLayer.width, 2));\n    distanceRatio = $bm_div($bm_sum(1, $bm_mul(distanceRatio, flexibility)), 2);\n    if (doFollowThrough) {\n        elasticity = $bm_div(elasticity, distanceRatio);\n        damping = $bm_div(damping, distanceRatio);\n    }\n    if (doOverlap) {\n        overlapDuration = $bm_mul(overlapDuration, distanceRatio);\n    }\n}\nseedRandom(0, true);\nif (doFollowThrough) {\n    if (elasticityRandom > 0)\n        elasticity = addNoise(elasticity, elasticityRandom);\n    if (dampingRandom > 0)\n        damping = addNoise(damping, dampingRandom);\n}\nif (doOverlap) {\n    if (doOverlap && overlapRandom > 0)\n        overlapDuration = addNoise(overlapDuration, overlapRandom);\n}\nvar result = value;\nfunction isSpatial(prop) {\n    if (!(prop.value instanceof Array))\n        return false;\n    if (prop.value.length != 2 && prop.value.length != 3)\n        return false;\n    try {\n        if (typeof prop.speed !== 'undefined')\n            return true;\n    } catch (e) {\n        return false;\n    }\n}\nfunction addNoise(val, quantity) {\n    var randomValue = random(0.9, 1.1);\n    var noiseValue = noise($bm_mul(valueAtTime(0), randomValue));\n    noiseValue = $bm_mul(noiseValue, $bm_div(quantity, 100));\n    return $bm_mul(val, $bm_sum(noiseValue, 1));\n}\nfunction isAfterLastKey() {\n    if (numKeys == 0)\n        return false;\n    var nKey = nearestKey(time);\n    return nKey.time <= time && nKey.index == numKeys;\n}\nfunction isStill(t, threshold) {\n    var d = $bm_sub(valueAtTime(t), valueAtTime($bm_sum(t, framesToTime(1))));\n    if ($bm_isInstanceOfArray(d)) {\n        for (var i = 0; i < d.length; i++) {\n            d[i] = Math.abs(d[i]);\n            if (d[i] >= threshold) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        d = Math.abs(d);\n        return d < threshold;\n    }\n}\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\n    if (arguments.length !== 5 && arguments.length !== 6)\n        return t;\n    var a = $bm_sub(value2, value1);\n    var b = $bm_sub(tMax, tMin);\n    if (b == 0)\n        return t;\n    var c = clamp($bm_div($bm_sub(t, tMin), b), 0, 1);\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4)\n        bezierPoints = [\n            0.33,\n            0,\n            0.66,\n            1\n        ];\n    return $bm_sum($bm_mul(a, h(c, bezierPoints)), value1);\n    function h(f, g) {\n        var x = $bm_mul(3, g[0]);\n        var j = $bm_sub($bm_mul(3, $bm_sub(g[2], g[0])), x);\n        var k = $bm_sub($bm_sub(1, x), j);\n        var l = $bm_mul(3, g[1]);\n        var m = $bm_sub($bm_mul(3, $bm_sub(g[3], g[1])), l);\n        var n = $bm_sub($bm_sub(1, l), m);\n        var d = f;\n        for (var i = 0; i < 5; i++) {\n            var z = $bm_sub($bm_mul(d, $bm_sum(x, $bm_mul(d, $bm_sum(j, $bm_mul(d, k))))), f);\n            if (Math.abs(z) < 0.001)\n                break;\n            d = $bm_sub(d, $bm_div(z, $bm_sum(x, $bm_mul(d, $bm_sum($bm_mul(2, j), $bm_mul($bm_mul(3, k), d))))));\n        }\n        return $bm_mul(d, $bm_sum(l, $bm_mul(d, $bm_sum(m, $bm_mul(d, n)))));\n    }\n}\nfunction getPropWorldSpeed(t, prop) {\n    return length(getPropWorldVelocity(t, prop));\n}\nfunction getPrevKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time <= t)\n        return nKey;\n    if (nKey.index > 1)\n        return key($bm_sub(nKey.index, 1));\n    return null;\n}\nfunction getNextKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time >= t)\n        return nKey;\n    if (nKey.index < numKeys)\n        return key($bm_sum(nKey.index, 1));\n    return null;\n}\nfunction getPropWorldVelocity(t, prop) {\n    return $bm_mul($bm_sub(getPropWorldValue($bm_sum(t, 0.005), prop), getPropWorldValue($bm_sub(t, 0.005), prop)), 100);\n}\nfunction getLayerWorldPos(t, l) {\n    return l.toWorld(l.anchorPoint, t);\n}\nfunction getPropWorldValue(t, prop) {\n    if (isPosition(prop))\n        return getLayerWorldPos(t, thisLayer);\n    return thisLayer.toWorld(prop.valueAtTime(t), t);\n}\nfunction isPosition(prop) {\n    return prop === $bm_transform.position;\n}\nfunction isKeyTop(k, axis) {\n    var prevSpeed = velocityAtTime($bm_sub(k.time, threshold));\n    var nextSpeed = velocityAtTime($bm_sum(k.time, threshold));\n    if ($bm_isInstanceOfArray(value)) {\n        prevSpeed = prevSpeed[axis];\n        nextSpeed = nextSpeed[axis];\n    }\n    if (Math.abs(prevSpeed) < 0.01 || Math.abs(nextSpeed) < 0.01)\n        return true;\n    return $bm_mul(prevSpeed, nextSpeed) < 0;\n}\nfunction anticipate() {\n    var anticipation = zeroValue;\n    if (isAfterLastKey())\n        return anticipation;\n    if (numKeys < 2)\n        return anticipation;\n    var nextKey = getNextKey(time);\n    var aKey = nextKey;\n    if (!isStill(aKey.time - 0.1, 0.1)) {\n        aKey = getPrevKey(time);\n        if (!isStill(aKey.time - 0.1, 0.1))\n            return anticipation;\n    }\n    if (aKey.index == numKeys)\n        return anticipation;\n    var anticipationMiddle = aKey.time;\n    var anticipationStart = $bm_sub(anticipationMiddle, anticipationDuration);\n    var anticipationEnd = key(aKey.index + 1).time;\n    var startValue = anticipation;\n    var midValue = $bm_mul($bm_sum($bm_neg(valueAtTime($bm_sum(anticipationMiddle, anticipationDuration))), aKey.value), anticipationQuantity);\n    var endValue = anticipation;\n    if (time < anticipationStart) {\n        return anticipation;\n    } else if (time < anticipationMiddle) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue[i], midValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue, midValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else if (time <= anticipationEnd) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue[i], endValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue, endValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else {\n        return anticipation;\n    }\n}\nfunction followThroughAtTime(t) {\n    var fThrough = zeroValue;\n    if (elasticity == 0)\n        return fThrough;\n    var propSpeed;\n    if (!simulate) {\n        if (numKeys < 2)\n            return fThrough;\n        if (nearestKey(t).index == 1)\n            return fThrough;\n        propSpeed = length(velocityAtTime(t));\n        if (propSpeed >= threshold)\n            return fThrough;\n    } else {\n        propSpeed = getPropWorldSpeed(t, thisProperty);\n        if (propSpeed >= threshold)\n            return fThrough;\n    }\n    var fThroughStart = 0;\n    var fThroughTime = 0;\n    if (simulate) {\n        var speedI = getPropWorldSpeed(t, thisProperty);\n        var i = t;\n        while (speedI < threshold && i > 0) {\n            i = $bm_sub(i, $bm_div(thisComp.frameDuration, moBlurPrecision));\n            speedI = getPropWorldSpeed(i, thisProperty);\n        }\n        fThroughStart = i;\n    } else {\n        var fThroughKey = getPrevKey(t);\n        fThroughStart = fThroughKey.time;\n    }\n    if (fThroughStart == 0)\n        return fThrough;\n    fThroughTime = $bm_sub(t, fThroughStart);\n    if (simulate)\n        fThrough = $bm_div(getPropWorldVelocity($bm_sub(fThroughStart, thisComp.frameDuration), thisProperty), 2);\n    else\n        fThrough = $bm_div(velocityAtTime($bm_sub(fThroughStart, thisComp.frameDuration)), 2);\n    if (bounce) {\n        var cycleDamp = Math.exp($bm_mul($bm_mul(fThroughTime, damping), 0.1));\n        var damp = $bm_div(Math.exp($bm_mul(fThroughTime, damping)), $bm_div(elasticity, 2));\n        var cycleDuration = $bm_div(1, $bm_mul(elasticity, 2));\n        cycleDuration = Math.round(timeToFrames(cycleDuration));\n        cycleDuration = framesToTime(cycleDuration);\n        var midDuration = $bm_div(cycleDuration, 2);\n        var maxValue = $bm_mul(fThrough, midDuration);\n        var cycvarime = fThroughTime;\n        var numEndCycles = 1;\n        while (cycvarime > cycleDuration) {\n            cycvarime = $bm_sub(cycvarime, cycleDuration);\n            cycleDuration = $bm_div(cycleDuration, cycleDamp);\n            cycleDuration = Math.round(timeToFrames(cycleDuration));\n            if (cycleDuration < 2) {\n                cycleDuration = 2;\n                numEndCycles++;\n            }\n            cycleDuration = framesToTime(cycleDuration);\n            midDuration = $bm_div(cycleDuration, 2);\n            maxValue = $bm_div($bm_mul(fThrough, midDuration), damp);\n            if (numEndCycles > 100 / damping && maxValue < threshold)\n                return zeroValue;\n        }\n        if (cycvarime < midDuration)\n            fThrough = bezierInterpolation(cycvarime, 0, midDuration, 0, maxValue, [\n                0,\n                0.1,\n                slowIn,\n                1\n            ]);\n        else\n            fThrough = bezierInterpolation(cycvarime, midDuration, cycleDuration, maxValue, 0, [\n                $bm_sub(1, slowIn),\n                0,\n                1,\n                0.9\n            ]);\n    } else {\n        var damp = Math.exp($bm_mul(fThroughTime, damping));\n        var sinus = $bm_mul($bm_mul($bm_mul(elasticity, fThroughTime), 2), Math.PI);\n        sinus = Math.sin(sinus);\n        sinus = $bm_mul($bm_div(0.3, elasticity), sinus);\n        sinus = $bm_div(sinus, damp);\n        if (Math.abs(sinus) < $bm_div(threshold, 100))\n            return 0;\n        fThrough = $bm_mul(fThrough, sinus);\n        if (threshold > 0) {\n            fThrough = $bm_mul(fThrough, $bm_sub(1, $bm_div(propSpeed, threshold)));\n        }\n    }\n    if (bounce) {\n        var prevValue = valueAtTime($bm_sub(fThroughStart, thisComp.frameDuration));\n        var startValue = valueAtTime(fThroughStart);\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < prevValue.length; i++) {\n                if (prevValue[i] > startValue[i])\n                    fThrough[i] = Math.abs(fThrough[i]);\n                if (prevValue[i] < startValue[i])\n                    fThrough[i] = $bm_neg(Math.abs(fThrough[i]));\n            }\n        } else {\n            if (prevValue > startValue)\n                fThrough = Math.abs(fThrough);\n            if (prevValue < startValue)\n                fThrough = $bm_neg(Math.abs(fThrough));\n        }\n    }\n    if (simulate) {\n        if (!isThisPosition) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer));\n            fThrough = $bm_sub(thisLayer.fromWorld(fThrough), thisLayer.anchorPoint);\n        } else if (thisLayer.hasParent) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer.parent));\n            fThrough = $bm_sub(thisLayer.parent.fromWorld(fThrough), thisLayer.parent.anchorPoint);\n        }\n    }\n    return fThrough;\n}\nfunction followThrough() {\n    var propSpeed = length(velocity);\n    if (propSpeed < threshold)\n        return followThroughAtTime($bm_sub(time, overlapDuration));\n    var fThrough = zeroValue;\n    var t = time;\n    while (t > 0) {\n        t = $bm_sub(t, thisComp.frameDuration);\n        if (simulate)\n            propSpeed = getPropWorldSpeed($bm_sub(t, overlapDuration), thisProperty);\n        else\n            propSpeed = length(velocityAtTime(t));\n        if (propSpeed < threshold) {\n            fThrough = followThroughAtTime($bm_sub(t, overlapDuration));\n            break;\n        }\n    }\n    return linear(time, t, $bm_sum(t, $bm_mul(anticipationDuration, 2)), fThrough, zeroValue);\n}\nfunction smartSmooth(axis) {\n    var startKey = nearestKey(time);\n    var endKey = startKey;\n    if (time == startKey.time)\n        return 0;\n    if (time < startKey.time && startKey.index == 1)\n        return 0;\n    if (time > startKey.time && startKey.index == numKeys)\n        return 0;\n    if (time < startKey.time)\n        startKey = key($bm_sub(startKey.index, 1));\n    if (time > startKey.time)\n        endKey = key($bm_sum(startKey.index, 1));\n    var sI = 0.66;\n    var sO = 0.33;\n    var sIV = 1;\n    var sOV = 0;\n    var sVal = startKey.value;\n    var eVal = endKey.value;\n    if ($bm_isInstanceOfArray(value)) {\n        sVal = sVal[axis];\n        eVal = eVal[axis];\n    }\n    var sTime = startKey.time;\n    var eTime = endKey.time;\n    if (isKeyTop(startKey, axis))\n        sO = slowOut;\n    else {\n        var prevKey = key($bm_sub(startKey.index, 1));\n        var pVal = prevKey.value;\n        if ($bm_isInstanceOfArray(value))\n            pVal = pVal[axis];\n        sOV = $bm_div($bm_sub(sVal, pVal), $bm_sub(eVal, pVal));\n    }\n    if (isKeyTop(endKey, axis)) {\n        sI = slowIn;\n        if (endKey.index != numKeys) {\n            var nextKey = key($bm_sum(endKey.index, 1));\n            var nVal = nextKey.value;\n            if ($bm_isInstanceOfArray(value))\n                nVal = nVal[axis];\n            if (Math.abs(nVal - eVal) < 0.01 && doFollowThrough)\n                sI = 1;\n        }\n    } else {\n        var nextKey = key($bm_sum(endKey.index, 1));\n        var nVal = nextKey.value;\n        if ($bm_isInstanceOfArray(value))\n            nVal = nVal[axis];\n        sIV = $bm_div($bm_sub(eVal, sVal), $bm_sub(nVal, sVal));\n    }\n    if (endKey.index == numKeys && doFollowThrough) {\n        sI = 1;\n    }\n    var val = value;\n    if ($bm_isInstanceOfArray(value))\n        val = val[axis];\n    return $bm_sub(bezierInterpolation(time, sTime, eTime, sVal, eVal, [\n        sO,\n        sOV,\n        sI,\n        sIV\n    ]), val);\n}\nfunction overlap() {\n    var ol = zeroValue;\n    if (isThisPosition && !hasParent)\n        return zeroValue;\n    ol = $bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisProperty), getPropWorldValue(time, thisProperty));\n    var motionRatio = $bm_div($bm_div(length(zeroValue, ol), thisLayer.width), 2);\n    if (isThisPosition) {\n        var originalDistance = length(valueAtTime(0));\n        motionRatio = $bm_div(length(zeroValue, ol), thisComp.width);\n    }\n    ol = $bm_sum(ol, getPropWorldValue(time, thisProperty));\n    ol = $bm_sum(ol, $bm_mul($bm_mul($bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisLayer.anchorPoint), ol), motionRatio), flexibility));\n    ol = thisLayer.fromWorld(ol);\n    if (!isThisPosition)\n        ol = $bm_sub(ol, value);\n    else {\n        ol = linear(flexibility, 0, 100, $bm_div(ol, 2), 0);\n        var prevParentWorldPos = getLayerWorldPos($bm_sub(time, overlapDuration), parent);\n        ol = $bm_sum(ol, $bm_mul($bm_mul($bm_mul(thisLayer.fromWorld(prevParentWorldPos), motionRatio), flexibility), 5));\n    }\n    return ol;\n}\nvar okToGo = false;\nif (simulate && fx.enabled)\n    okToGo = true;\nelse if (numKeys > 1 && fx.enabled)\n    okToGo = true;\nif (okToGo) {\n    var smartSmoothResult = zeroValue;\n    if (doInterpolation) {\n        if ($bm_isInstanceOfArray(value)) {\n            if (value.length == 2)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1)\n                ];\n            else if (value.length == 3)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2)\n                ];\n            else if (value.length == 4)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2),\n                    smartSmooth(3)\n                ];\n        } else {\n            smartSmoothResult = smartSmooth(0);\n        }\n    }\n    if (doAnticipation)\n        result = $bm_sum(result, anticipate());\n    result = $bm_sum(result, smartSmoothResult);\n    if (doFollowThrough)\n        result = $bm_sum(result, followThrough());\n    if (doOverlap)\n        result = $bm_sum(result, overlap());\n}\n$bm_rt = result;"
                  }
                }
              ]
            },
            {
              "ty": "gr",
              "nm": "Group 3",
              "bm": 0,
              "mn": "ADBE Vector Group",
              "it": [
                {
                  "ty": "sh",
                  "nm": "Path 1",
                  "mn": "ADBE Vector Shape - Group",
                  "ind": 0,
                  "ks": {
                    "k": {
                      "i": [
                        [0.0, -5.984],
                        [4.605, -1.245],
                        [1.366, 0.817],
                        [2.912, 2.564],
                        [0.0, 0.442],
                        [-5.984, 0.0]
                      ],
                      "o": [
                        [0.0, 5.007],
                        [-1.433, -0.716],
                        [-3.347, -2.002],
                        [-0.053, -0.428],
                        [0.0, -5.984],
                        [5.984, 0.0]
                      ],
                      "v": [
                        [-131.683, -59.627],
                        [-139.676, -49.164],
                        [-143.873, -51.467],
                        [-153.278, -58.328],
                        [-153.358, -59.627],
                        [-142.521, -70.465]
                      ],
                      "c": true
                    },
                    "a": 0
                  }
                },
                {
                  "ty": "st",
                  "nm": "Stroke 1",
                  "bm": 0,
                  "mn": "ADBE Vector Graphic - Stroke",
                  "lc": 2,
                  "lj": 2,
                  "o": { "a": 0, "k": 100.0 },
                  "w": { "a": 0, "k": 0.684 },
                  "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] }
                },
                {
                  "ty": "fl",
                  "nm": "Fill 1",
                  "bm": 0,
                  "mn": "ADBE Vector Graphic - Fill",
                  "c": { "a": 0, "k": [1.0, 1.0, 1.0, 1.0] },
                  "o": { "a": 0, "k": 100.0 },
                  "r": 1
                },
                {
                  "ty": "tr",
                  "o": { "a": 0, "k": 100.0 },
                  "r": { "a": 0, "k": 0.0 },
                  "p": { "a": 0, "k": [0.0, 0.0] },
                  "a": { "a": 0, "k": [0.0, 0.0] },
                  "s": { "a": 0, "k": [100.0, 100.0] },
                  "nm": "Transform",
                  "sk": { "a": 0, "k": 0.0 },
                  "sa": { "a": 0, "k": 0.0 }
                }
              ]
            },
            {
              "ty": "gr",
              "nm": "Group 4",
              "bm": 0,
              "mn": "ADBE Vector Group",
              "it": [
                {
                  "ty": "sh",
                  "nm": "Path 1",
                  "mn": "ADBE Vector Shape - Group",
                  "ind": 0,
                  "ks": {
                    "k": {
                      "i": [
                        [-0.167, -1.629],
                        [14.437, 0.0],
                        [9.579, 5.744],
                        [-3.788, 4.263],
                        [-5.94, 0.125],
                        [-6.725, -0.256],
                        [-3.883, -0.149],
                        [-2.872, -1.605],
                        [-1.064, -2.765]
                      ],
                      "o": [
                        [-10.697, 8.081],
                        [-11.975, 0.0],
                        [0.202, -5.494],
                        [4.162, -4.674],
                        [6.731, -0.143],
                        [3.889, 0.149],
                        [3.264, 0.119],
                        [2.634, 1.475],
                        [0.589, 1.528]
                      ],
                      "v": [
                        [-72.657, -55.299],
                        [-111.11, -42.432],
                        [-143.873, -51.47],
                        [-138.105, -65.591],
                        [-121.373, -70.925],
                        [-101.187, -70.562],
                        [-89.526, -70.122],
                        [-79.787, -67.661],
                        [-73.757, -60.062]
                      ],
                      "c": true
                    },
                    "a": 0
                  }
                },
                {
                  "ty": "st",
                  "nm": "Stroke 1",
                  "bm": 0,
                  "mn": "ADBE Vector Graphic - Stroke",
                  "lc": 1,
                  "lj": 1,
                  "ml": 10.0,
                  "o": { "a": 0, "k": 100.0 },
                  "w": { "a": 0, "k": 0.684 },
                  "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] }
                },
                {
                  "ty": "fl",
                  "nm": "Fill 1",
                  "bm": 0,
                  "mn": "ADBE Vector Graphic - Fill",
                  "c": { "a": 0, "k": [0.92549020052, 0.92549020052, 0.92549020052, 1.0] },
                  "o": { "a": 0, "k": 100.0 },
                  "r": 1
                },
                {
                  "ty": "tr",
                  "o": { "a": 0, "k": 100.0 },
                  "r": { "a": 0, "k": 0.0 },
                  "p": { "a": 0, "k": [0.0, 0.0] },
                  "a": { "a": 0, "k": [0.0, 0.0] },
                  "s": { "a": 0, "k": [100.0, 100.0] },
                  "nm": "Transform",
                  "sk": { "a": 0, "k": 0.0 },
                  "sa": { "a": 0, "k": 0.0 }
                }
              ]
            },
            {
              "ty": "gr",
              "nm": "Group 5",
              "bm": 0,
              "mn": "ADBE Vector Group",
              "it": [
                {
                  "ty": "sh",
                  "nm": "Path 1",
                  "mn": "ADBE Vector Shape - Group",
                  "ind": 0,
                  "ks": {
                    "k": {
                      "i": [
                        [0.0, -2.939],
                        [2.939, 0.0],
                        [0.0, 2.939],
                        [-2.939, 0.0]
                      ],
                      "o": [
                        [0.0, 2.939],
                        [-2.939, 0.0],
                        [0.0, -2.939],
                        [2.939, 0.0]
                      ],
                      "v": [
                        [-154.825, -166.056],
                        [-160.146, -160.734],
                        [-165.468, -166.056],
                        [-160.146, -171.377]
                      ],
                      "c": true
                    },
                    "a": 0
                  }
                },
                {
                  "ty": "st",
                  "nm": "Stroke 1",
                  "bm": 0,
                  "mn": "ADBE Vector Graphic - Stroke",
                  "lc": 2,
                  "lj": 2,
                  "o": { "a": 0, "k": 100.0 },
                  "w": { "a": 0, "k": 0.684 },
                  "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] }
                },
                {
                  "ty": "fl",
                  "nm": "Fill 1",
                  "bm": 0,
                  "mn": "ADBE Vector Graphic - Fill",
                  "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] },
                  "o": { "a": 0, "k": 100.0 },
                  "r": 1
                },
                {
                  "ty": "tr",
                  "o": { "a": 0, "k": 100.0 },
                  "r": { "a": 0, "k": 0.0 },
                  "p": {
                    "k": [
                      {
                        "i": { "x": 0.667, "y": 0.473 },
                        "o": { "x": 0.333, "y": 0.0 },
                        "t": 13,
                        "s": [-162.467, -172.239],
                        "ti": [-18.55, 0],
                        "to": [13.439, -10.753]
                      },
                      {
                        "i": { "x": 0.667, "y": 1.0 },
                        "o": { "x": 0.333, "y": 0.47 },
                        "t": 35.158,
                        "s": [-113.431, -189.422],
                        "ti": [-14.253, -19.886],
                        "to": [26.337, 0]
                      },
                      {
                        "i": { "x": 0.667, "y": 0.53 },
                        "o": { "x": 0.333, "y": 0.0 },
                        "t": 63,
                        "s": [-49.533, -156.578],
                        "ti": [26.337, 0],
                        "to": [-14.253, -19.886]
                      },
                      {
                        "i": { "x": 0.667, "y": 1.0 },
                        "o": { "x": 0.333, "y": 0.527 },
                        "t": 90.842,
                        "s": [-113.431, -189.422],
                        "ti": [13.439, -10.753],
                        "to": [-18.55, 0]
                      },
                      { "t": 113, "s": [-162.467, -172.239] }
                    ],
                    "a": 1
                  },
                  "a": { "a": 0, "k": [-160.25, -167.25] },
                  "s": { "a": 0, "k": [100.0, 100.0] },
                  "nm": "Transform",
                  "sk": { "a": 0, "k": 0.0 },
                  "sa": { "a": 0, "k": 0.0 }
                }
              ]
            },
            {
              "ty": "gr",
              "nm": "Group 6",
              "bm": 0,
              "mn": "ADBE Vector Group",
              "it": [
                {
                  "ty": "sh",
                  "nm": "Path 1",
                  "mn": "ADBE Vector Shape - Group",
                  "ind": 0,
                  "ks": {
                    "k": {
                      "i": [
                        [0.0, -35.284],
                        [15.45, -11.654],
                        [14.439, 0.0],
                        [8.595, 4.311],
                        [1.366, 0.817],
                        [2.912, 2.564],
                        [0.0, 19.125],
                        [-35.284, 0.0]
                      ],
                      "o": [
                        [0.0, 20.852],
                        [-10.697, 8.08],
                        [-10.269, 0.0],
                        [-1.433, -0.716],
                        [-3.347, -2.002],
                        [-13.321, -11.701],
                        [0.0, -35.284],
                        [35.291, 0.0]
                      ],
                      "v": [
                        [-47.218, -106.324],
                        [-72.655, -55.296],
                        [-111.112, -42.43],
                        [-139.676, -49.164],
                        [-143.873, -51.467],
                        [-153.278, -58.328],
                        [-175.0, -106.324],
                        [-111.112, -170.212]
                      ],
                      "c": true
                    },
                    "a": 0
                  }
                },
                {
                  "ty": "st",
                  "nm": "Stroke 1",
                  "bm": 0,
                  "mn": "ADBE Vector Graphic - Stroke",
                  "lc": 2,
                  "lj": 2,
                  "o": { "a": 0, "k": 100.0 },
                  "w": { "a": 0, "k": 0.684 },
                  "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] }
                },
                {
                  "ty": "fl",
                  "nm": "Fill 1",
                  "bm": 0,
                  "mn": "ADBE Vector Graphic - Fill",
                  "c": { "a": 0, "k": [1.0, 1.0, 1.0, 1.0] },
                  "o": { "a": 0, "k": 100.0 },
                  "r": 1
                },
                {
                  "ty": "tr",
                  "o": { "a": 0, "k": 100.0 },
                  "r": { "a": 0, "k": 0.0 },
                  "p": { "a": 0, "k": [0.0, 0.0] },
                  "a": { "a": 0, "k": [0.0, 0.0] },
                  "s": { "a": 0, "k": [100.0, 100.0] },
                  "nm": "Transform",
                  "sk": { "a": 0, "k": 0.0 },
                  "sa": { "a": 0, "k": 0.0 }
                }
              ]
            },
            {
              "ty": "tr",
              "o": { "a": 0, "k": 100.0 },
              "r": { "a": 0, "k": 0.0 },
              "p": { "a": 0, "k": [0.0, 0.0] },
              "a": { "a": 0, "k": [0.0, 0.0] },
              "s": { "a": 0, "k": [100.0, 100.0] },
              "nm": "Transform",
              "sk": { "a": 0, "k": 0.0 },
              "sa": { "a": 0, "k": 0.0 }
            }
          ]
        }
      ],
      "ip": 0,
      "op": 250,
      "st": 0.0,
      "ef": [
        {
          "ty": 5,
          "ix": 1,
          "nm": "\u015dlosilo pli pura",
          "mn": "Pseudo/Duik Kleaner v3.2",
          "ef": [
            {
              "ix": 1,
              "mn": "Pseudo/Duik Kleaner v3.2-0001",
              "nm": "Anticipation",
              "ty": 7,
              "v": { "a": 0, "k": 0.0 }
            },
            {
              "ix": 2,
              "mn": "Pseudo/Duik Kleaner v3.2-0002",
              "nm": "Smart Interpolation",
              "ty": 7,
              "v": { "a": 0, "k": 0.0 }
            },
            {
              "ix": 3,
              "mn": "Pseudo/Duik Kleaner v3.2-0003",
              "nm": "Follow Through",
              "ty": 7,
              "v": { "a": 0, "k": 1.0 }
            },
            {
              "ix": 4,
              "mn": "Pseudo/Duik Kleaner v3.2-0004",
              "nm": "Anticipation",
              "ty": 6,
              "v": 0
            },
            {
              "ix": 5,
              "mn": "Pseudo/Duik Kleaner v3.2-0005",
              "nm": "Duration (s)",
              "ty": 0,
              "v": { "a": 0, "k": 0.3 }
            },
            {
              "ix": 6,
              "mn": "Pseudo/Duik Kleaner v3.2-0006",
              "nm": "Amplitude",
              "ty": 0,
              "v": { "a": 0, "k": 50.0 }
            },
            { "ix": 7, "mn": "Pseudo/Duik Kleaner v3.2-0007", "nm": "", "ty": 6, "v": 0 },
            {
              "ix": 8,
              "mn": "Pseudo/Duik Kleaner v3.2-0008",
              "nm": "Interpolation",
              "ty": 6,
              "v": 0
            },
            {
              "ix": 9,
              "mn": "Pseudo/Duik Kleaner v3.2-0009",
              "nm": "Slow In",
              "ty": 0,
              "v": { "a": 0, "k": 60.0 }
            },
            {
              "ix": 10,
              "mn": "Pseudo/Duik Kleaner v3.2-0010",
              "nm": "Slow Out",
              "ty": 0,
              "v": { "a": 0, "k": 25.0 }
            },
            { "ix": 11, "mn": "Pseudo/Duik Kleaner v3.2-0011", "nm": "", "ty": 6, "v": 0 },
            {
              "ix": 12,
              "mn": "Pseudo/Duik Kleaner v3.2-0012",
              "nm": "Follow Through",
              "ty": 6,
              "v": 0
            },
            {
              "ix": 13,
              "mn": "Pseudo/Duik Kleaner v3.2-0013",
              "nm": "Elasticity",
              "ty": 0,
              "v": { "a": 0, "k": 10.0 }
            },
            {
              "ix": 14,
              "mn": "Pseudo/Duik Kleaner v3.2-0014",
              "nm": "Elasticity random",
              "ty": 0,
              "v": { "a": 0, "k": 0.0 }
            },
            {
              "ix": 15,
              "mn": "Pseudo/Duik Kleaner v3.2-0015",
              "nm": "Damping",
              "ty": 0,
              "v": { "a": 0, "k": 50.0 }
            },
            {
              "ix": 16,
              "mn": "Pseudo/Duik Kleaner v3.2-0016",
              "nm": "Damping random",
              "ty": 0,
              "v": { "a": 0, "k": 0.0 }
            },
            {
              "ix": 17,
              "mn": "Pseudo/Duik Kleaner v3.2-0017",
              "nm": "Bounce",
              "ty": 7,
              "v": { "a": 0, "k": 0.0 }
            },
            { "ix": 18, "mn": "Pseudo/Duik Kleaner v3.2-0018", "nm": "", "ty": 6, "v": 0 },
            {
              "ix": 19,
              "mn": "Pseudo/Duik Kleaner v3.2-0019",
              "nm": "Spatial Options",
              "ty": 6,
              "v": 0
            },
            {
              "ix": 20,
              "mn": "Pseudo/Duik Kleaner v3.2-0020",
              "nm": "Smart Interpolation",
              "ty": 7,
              "v": { "a": 0, "k": 0.0 }
            },
            {
              "ix": 21,
              "mn": "Pseudo/Duik Kleaner v3.2-0021",
              "nm": "Mode",
              "ty": 7,
              "v": { "a": 0, "k": 1.0 }
            },
            {
              "ix": 22,
              "mn": "Pseudo/Duik Kleaner v3.2-0022",
              "nm": "Overlap (simulation)",
              "ty": 6,
              "v": 0
            },
            {
              "ix": 23,
              "mn": "Pseudo/Duik Kleaner v3.2-0023",
              "nm": "Overlap",
              "ty": 7,
              "v": { "a": 0, "k": 1.0 }
            },
            {
              "ix": 24,
              "mn": "Pseudo/Duik Kleaner v3.2-0024",
              "nm": "Delay (s)",
              "ty": 0,
              "v": { "a": 0, "k": 0.05 }
            },
            {
              "ix": 25,
              "mn": "Pseudo/Duik Kleaner v3.2-0025",
              "nm": "Overlap random",
              "ty": 0,
              "v": { "a": 0, "k": 0.0 }
            },
            { "ix": 26, "mn": "Pseudo/Duik Kleaner v3.2-0026", "nm": "", "ty": 6, "v": 0 },
            {
              "ix": 27,
              "mn": "Pseudo/Duik Kleaner v3.2-0027",
              "nm": "Soft Body (simulation)",
              "ty": 6,
              "v": 0
            },
            {
              "ix": 28,
              "mn": "Pseudo/Duik Kleaner v3.2-0028",
              "nm": "Soft Body",
              "ty": 7,
              "v": { "a": 0, "k": 1.0 }
            },
            {
              "ix": 29,
              "mn": "Pseudo/Duik Kleaner v3.2-0029",
              "nm": "Soft-Body Flexibility",
              "ty": 0,
              "v": { "a": 0, "k": 100.0 }
            },
            { "ix": 30, "mn": "Pseudo/Duik Kleaner v3.2-0030", "nm": "", "ty": 6, "v": 0 },
            { "ix": 31, "mn": "Pseudo/Duik Kleaner v3.2-0031", "nm": "", "ty": 6, "v": 0 },
            {
              "ix": 32,
              "mn": "Pseudo/Duik Kleaner v3.2-0032",
              "nm": "Precision",
              "ty": 0,
              "v": { "a": 0, "k": 1.0 }
            }
          ],
          "en": 1
        },
        {
          "ty": 5,
          "ix": 2,
          "nm": "\u015dlosilo pli pura 2",
          "mn": "Pseudo/Duik Kleaner v3.2",
          "ef": [
            {
              "ix": 1,
              "mn": "Pseudo/Duik Kleaner v3.2-0001",
              "nm": "Anticipation",
              "ty": 7,
              "v": { "a": 0, "k": 0.0 }
            },
            {
              "ix": 2,
              "mn": "Pseudo/Duik Kleaner v3.2-0002",
              "nm": "Smart Interpolation",
              "ty": 7,
              "v": { "a": 0, "k": 0.0 }
            },
            {
              "ix": 3,
              "mn": "Pseudo/Duik Kleaner v3.2-0003",
              "nm": "Follow Through",
              "ty": 7,
              "v": { "a": 0, "k": 1.0 }
            },
            {
              "ix": 4,
              "mn": "Pseudo/Duik Kleaner v3.2-0004",
              "nm": "Anticipation",
              "ty": 6,
              "v": 0
            },
            {
              "ix": 5,
              "mn": "Pseudo/Duik Kleaner v3.2-0005",
              "nm": "Duration (s)",
              "ty": 0,
              "v": { "a": 0, "k": 0.3 }
            },
            {
              "ix": 6,
              "mn": "Pseudo/Duik Kleaner v3.2-0006",
              "nm": "Amplitude",
              "ty": 0,
              "v": { "a": 0, "k": 50.0 }
            },
            { "ix": 7, "mn": "Pseudo/Duik Kleaner v3.2-0007", "nm": "", "ty": 6, "v": 0 },
            {
              "ix": 8,
              "mn": "Pseudo/Duik Kleaner v3.2-0008",
              "nm": "Interpolation",
              "ty": 6,
              "v": 0
            },
            {
              "ix": 9,
              "mn": "Pseudo/Duik Kleaner v3.2-0009",
              "nm": "Slow In",
              "ty": 0,
              "v": { "a": 0, "k": 60.0 }
            },
            {
              "ix": 10,
              "mn": "Pseudo/Duik Kleaner v3.2-0010",
              "nm": "Slow Out",
              "ty": 0,
              "v": { "a": 0, "k": 25.0 }
            },
            { "ix": 11, "mn": "Pseudo/Duik Kleaner v3.2-0011", "nm": "", "ty": 6, "v": 0 },
            {
              "ix": 12,
              "mn": "Pseudo/Duik Kleaner v3.2-0012",
              "nm": "Follow Through",
              "ty": 6,
              "v": 0
            },
            {
              "ix": 13,
              "mn": "Pseudo/Duik Kleaner v3.2-0013",
              "nm": "Elasticity",
              "ty": 0,
              "v": { "a": 0, "k": 10.0 }
            },
            {
              "ix": 14,
              "mn": "Pseudo/Duik Kleaner v3.2-0014",
              "nm": "Elasticity random",
              "ty": 0,
              "v": { "a": 0, "k": 0.0 }
            },
            {
              "ix": 15,
              "mn": "Pseudo/Duik Kleaner v3.2-0015",
              "nm": "Damping",
              "ty": 0,
              "v": { "a": 0, "k": 50.0 }
            },
            {
              "ix": 16,
              "mn": "Pseudo/Duik Kleaner v3.2-0016",
              "nm": "Damping random",
              "ty": 0,
              "v": { "a": 0, "k": 0.0 }
            },
            {
              "ix": 17,
              "mn": "Pseudo/Duik Kleaner v3.2-0017",
              "nm": "Bounce",
              "ty": 7,
              "v": { "a": 0, "k": 0.0 }
            },
            { "ix": 18, "mn": "Pseudo/Duik Kleaner v3.2-0018", "nm": "", "ty": 6, "v": 0 },
            {
              "ix": 19,
              "mn": "Pseudo/Duik Kleaner v3.2-0019",
              "nm": "Spatial Options",
              "ty": 6,
              "v": 0
            },
            {
              "ix": 20,
              "mn": "Pseudo/Duik Kleaner v3.2-0020",
              "nm": "Smart Interpolation",
              "ty": 7,
              "v": { "a": 0, "k": 0.0 }
            },
            {
              "ix": 21,
              "mn": "Pseudo/Duik Kleaner v3.2-0021",
              "nm": "Mode",
              "ty": 7,
              "v": { "a": 0, "k": 1.0 }
            },
            {
              "ix": 22,
              "mn": "Pseudo/Duik Kleaner v3.2-0022",
              "nm": "Overlap (simulation)",
              "ty": 6,
              "v": 0
            },
            {
              "ix": 23,
              "mn": "Pseudo/Duik Kleaner v3.2-0023",
              "nm": "Overlap",
              "ty": 7,
              "v": { "a": 0, "k": 1.0 }
            },
            {
              "ix": 24,
              "mn": "Pseudo/Duik Kleaner v3.2-0024",
              "nm": "Delay (s)",
              "ty": 0,
              "v": { "a": 0, "k": 0.05 }
            },
            {
              "ix": 25,
              "mn": "Pseudo/Duik Kleaner v3.2-0025",
              "nm": "Overlap random",
              "ty": 0,
              "v": { "a": 0, "k": 0.0 }
            },
            { "ix": 26, "mn": "Pseudo/Duik Kleaner v3.2-0026", "nm": "", "ty": 6, "v": 0 },
            {
              "ix": 27,
              "mn": "Pseudo/Duik Kleaner v3.2-0027",
              "nm": "Soft Body (simulation)",
              "ty": 6,
              "v": 0
            },
            {
              "ix": 28,
              "mn": "Pseudo/Duik Kleaner v3.2-0028",
              "nm": "Soft Body",
              "ty": 7,
              "v": { "a": 0, "k": 1.0 }
            },
            {
              "ix": 29,
              "mn": "Pseudo/Duik Kleaner v3.2-0029",
              "nm": "Soft-Body Flexibility",
              "ty": 0,
              "v": { "a": 0, "k": 100.0 }
            },
            { "ix": 30, "mn": "Pseudo/Duik Kleaner v3.2-0030", "nm": "", "ty": 6, "v": 0 },
            { "ix": 31, "mn": "Pseudo/Duik Kleaner v3.2-0031", "nm": "", "ty": 6, "v": 0 },
            {
              "ix": 32,
              "mn": "Pseudo/Duik Kleaner v3.2-0032",
              "nm": "Precision",
              "ty": 0,
              "v": { "a": 0, "k": 1.0 }
            }
          ],
          "en": 1
        },
        {
          "ty": 5,
          "ix": 3,
          "nm": "\u015dlosilo pli pura 3",
          "mn": "Pseudo/Duik Kleaner v3.2",
          "ef": [
            {
              "ix": 1,
              "mn": "Pseudo/Duik Kleaner v3.2-0001",
              "nm": "Anticipation",
              "ty": 7,
              "v": { "a": 0, "k": 0.0 }
            },
            {
              "ix": 2,
              "mn": "Pseudo/Duik Kleaner v3.2-0002",
              "nm": "Smart Interpolation",
              "ty": 7,
              "v": { "a": 0, "k": 0.0 }
            },
            {
              "ix": 3,
              "mn": "Pseudo/Duik Kleaner v3.2-0003",
              "nm": "Follow Through",
              "ty": 7,
              "v": { "a": 0, "k": 1.0 }
            },
            {
              "ix": 4,
              "mn": "Pseudo/Duik Kleaner v3.2-0004",
              "nm": "Anticipation",
              "ty": 6,
              "v": 0
            },
            {
              "ix": 5,
              "mn": "Pseudo/Duik Kleaner v3.2-0005",
              "nm": "Duration (s)",
              "ty": 0,
              "v": { "a": 0, "k": 0.3 }
            },
            {
              "ix": 6,
              "mn": "Pseudo/Duik Kleaner v3.2-0006",
              "nm": "Amplitude",
              "ty": 0,
              "v": { "a": 0, "k": 50.0 }
            },
            { "ix": 7, "mn": "Pseudo/Duik Kleaner v3.2-0007", "nm": "", "ty": 6, "v": 0 },
            {
              "ix": 8,
              "mn": "Pseudo/Duik Kleaner v3.2-0008",
              "nm": "Interpolation",
              "ty": 6,
              "v": 0
            },
            {
              "ix": 9,
              "mn": "Pseudo/Duik Kleaner v3.2-0009",
              "nm": "Slow In",
              "ty": 0,
              "v": { "a": 0, "k": 60.0 }
            },
            {
              "ix": 10,
              "mn": "Pseudo/Duik Kleaner v3.2-0010",
              "nm": "Slow Out",
              "ty": 0,
              "v": { "a": 0, "k": 25.0 }
            },
            { "ix": 11, "mn": "Pseudo/Duik Kleaner v3.2-0011", "nm": "", "ty": 6, "v": 0 },
            {
              "ix": 12,
              "mn": "Pseudo/Duik Kleaner v3.2-0012",
              "nm": "Follow Through",
              "ty": 6,
              "v": 0
            },
            {
              "ix": 13,
              "mn": "Pseudo/Duik Kleaner v3.2-0013",
              "nm": "Elasticity",
              "ty": 0,
              "v": { "a": 0, "k": 10.0 }
            },
            {
              "ix": 14,
              "mn": "Pseudo/Duik Kleaner v3.2-0014",
              "nm": "Elasticity random",
              "ty": 0,
              "v": { "a": 0, "k": 0.0 }
            },
            {
              "ix": 15,
              "mn": "Pseudo/Duik Kleaner v3.2-0015",
              "nm": "Damping",
              "ty": 0,
              "v": { "a": 0, "k": 50.0 }
            },
            {
              "ix": 16,
              "mn": "Pseudo/Duik Kleaner v3.2-0016",
              "nm": "Damping random",
              "ty": 0,
              "v": { "a": 0, "k": 0.0 }
            },
            {
              "ix": 17,
              "mn": "Pseudo/Duik Kleaner v3.2-0017",
              "nm": "Bounce",
              "ty": 7,
              "v": { "a": 0, "k": 0.0 }
            },
            { "ix": 18, "mn": "Pseudo/Duik Kleaner v3.2-0018", "nm": "", "ty": 6, "v": 0 },
            {
              "ix": 19,
              "mn": "Pseudo/Duik Kleaner v3.2-0019",
              "nm": "Spatial Options",
              "ty": 6,
              "v": 0
            },
            {
              "ix": 20,
              "mn": "Pseudo/Duik Kleaner v3.2-0020",
              "nm": "Smart Interpolation",
              "ty": 7,
              "v": { "a": 0, "k": 0.0 }
            },
            {
              "ix": 21,
              "mn": "Pseudo/Duik Kleaner v3.2-0021",
              "nm": "Mode",
              "ty": 7,
              "v": { "a": 0, "k": 1.0 }
            },
            {
              "ix": 22,
              "mn": "Pseudo/Duik Kleaner v3.2-0022",
              "nm": "Overlap (simulation)",
              "ty": 6,
              "v": 0
            },
            {
              "ix": 23,
              "mn": "Pseudo/Duik Kleaner v3.2-0023",
              "nm": "Overlap",
              "ty": 7,
              "v": { "a": 0, "k": 1.0 }
            },
            {
              "ix": 24,
              "mn": "Pseudo/Duik Kleaner v3.2-0024",
              "nm": "Delay (s)",
              "ty": 0,
              "v": { "a": 0, "k": 0.05 }
            },
            {
              "ix": 25,
              "mn": "Pseudo/Duik Kleaner v3.2-0025",
              "nm": "Overlap random",
              "ty": 0,
              "v": { "a": 0, "k": 0.0 }
            },
            { "ix": 26, "mn": "Pseudo/Duik Kleaner v3.2-0026", "nm": "", "ty": 6, "v": 0 },
            {
              "ix": 27,
              "mn": "Pseudo/Duik Kleaner v3.2-0027",
              "nm": "Soft Body (simulation)",
              "ty": 6,
              "v": 0
            },
            {
              "ix": 28,
              "mn": "Pseudo/Duik Kleaner v3.2-0028",
              "nm": "Soft Body",
              "ty": 7,
              "v": { "a": 0, "k": 1.0 }
            },
            {
              "ix": 29,
              "mn": "Pseudo/Duik Kleaner v3.2-0029",
              "nm": "Soft-Body Flexibility",
              "ty": 0,
              "v": { "a": 0, "k": 100.0 }
            },
            { "ix": 30, "mn": "Pseudo/Duik Kleaner v3.2-0030", "nm": "", "ty": 6, "v": 0 },
            { "ix": 31, "mn": "Pseudo/Duik Kleaner v3.2-0031", "nm": "", "ty": 6, "v": 0 },
            {
              "ix": 32,
              "mn": "Pseudo/Duik Kleaner v3.2-0032",
              "nm": "Precision",
              "ty": 0,
              "v": { "a": 0, "k": 1.0 }
            }
          ],
          "en": 1
        }
      ]
    },
    {
      "ind": 2,
      "ty": 4,
      "nm": "Layer 2",
      "sr": 1.0,
      "ks": {
        "o": { "a": 0, "k": 100.0 },
        "r": { "a": 0, "k": 0.0 },
        "p": { "a": 0, "k": [300.975, 255.614, 0.0], "l": 2 },
        "a": { "a": 0, "k": [44.975, -0.386, 0.0], "l": 2 },
        "s": { "a": 0, "k": [100.0, 100.0, 100.0], "l": 2 }
      },
      "shapes": [
        {
          "ty": "gr",
          "nm": "Group 1",
          "bm": 0,
          "mn": "ADBE Vector Group",
          "it": [
            {
              "ty": "gr",
              "nm": "Group 1",
              "bm": 0,
              "mn": "ADBE Vector Group",
              "it": [
                {
                  "ty": "gr",
                  "nm": "Group 1",
                  "bm": 0,
                  "mn": "ADBE Vector Group",
                  "it": [
                    {
                      "ty": "gr",
                      "nm": "Group 1",
                      "bm": 0,
                      "mn": "ADBE Vector Group",
                      "it": [
                        {
                          "ty": "sh",
                          "nm": "Path 1",
                          "mn": "ADBE Vector Shape - Group",
                          "ind": 0,
                          "ks": {
                            "k": {
                              "i": [
                                [1.746, -0.122],
                                [-0.059, -0.841],
                                [-1.746, 0.122],
                                [0.059, 0.841]
                              ],
                              "o": [
                                [-1.746, 0.122],
                                [0.059, 0.841],
                                [1.746, -0.122],
                                [-0.059, -0.841]
                              ],
                              "v": [
                                [86.55, -116.226],
                                [83.495, -114.483],
                                [86.763, -113.18],
                                [89.818, -114.924]
                              ],
                              "c": true
                            },
                            "a": 0
                          }
                        },
                        {
                          "ty": "fl",
                          "nm": "Fill 1",
                          "bm": 0,
                          "mn": "ADBE Vector Graphic - Fill",
                          "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] },
                          "o": { "a": 0, "k": 100.0 },
                          "r": 1
                        },
                        {
                          "ty": "tr",
                          "o": { "a": 0, "k": 100.0 },
                          "r": { "a": 0, "k": 0.0 },
                          "p": { "a": 0, "k": [0.0, 0.0] },
                          "a": { "a": 0, "k": [0.0, 0.0] },
                          "s": { "a": 0, "k": [100.0, 100.0] },
                          "nm": "Transform",
                          "sk": { "a": 0, "k": 0.0 },
                          "sa": { "a": 0, "k": 0.0 }
                        }
                      ]
                    },
                    {
                      "ty": "gr",
                      "nm": "Group 2",
                      "bm": 0,
                      "mn": "ADBE Vector Group",
                      "it": [
                        {
                          "ty": "sh",
                          "nm": "Path 1",
                          "mn": "ADBE Vector Shape - Group",
                          "ind": 0,
                          "ks": {
                            "k": {
                              "i": [
                                [1.64, -0.612],
                                [-0.295, -0.79],
                                [-1.64, 0.612],
                                [0.295, 0.79]
                              ],
                              "o": [
                                [-1.64, 0.612],
                                [0.295, 0.79],
                                [1.64, -0.612],
                                [-0.295, -0.79]
                              ],
                              "v": [
                                [75.358, -114.245],
                                [72.922, -111.707],
                                [76.425, -111.385],
                                [78.861, -113.923]
                              ],
                              "c": true
                            },
                            "a": 0
                          }
                        },
                        {
                          "ty": "fl",
                          "nm": "Fill 1",
                          "bm": 0,
                          "mn": "ADBE Vector Graphic - Fill",
                          "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] },
                          "o": { "a": 0, "k": 100.0 },
                          "r": 1
                        },
                        {
                          "ty": "tr",
                          "o": { "a": 0, "k": 100.0 },
                          "r": { "a": 0, "k": 0.0 },
                          "p": { "a": 0, "k": [0.0, 0.0] },
                          "a": { "a": 0, "k": [0.0, 0.0] },
                          "s": { "a": 0, "k": [100.0, 100.0] },
                          "nm": "Transform",
                          "sk": { "a": 0, "k": 0.0 },
                          "sa": { "a": 0, "k": 0.0 }
                        }
                      ]
                    },
                    {
                      "ty": "tr",
                      "o": { "a": 0, "k": 100.0 },
                      "r": { "a": 0, "k": 0.0 },
                      "p": { "a": 0, "k": [0.0, 0.0] },
                      "a": { "a": 0, "k": [0.0, 0.0] },
                      "s": { "a": 0, "k": [100.0, 100.0] },
                      "nm": "Transform",
                      "sk": { "a": 0, "k": 0.0 },
                      "sa": { "a": 0, "k": 0.0 }
                    }
                  ]
                },
                {
                  "ty": "gr",
                  "nm": "Group 2",
                  "bm": 0,
                  "mn": "ADBE Vector Group",
                  "it": [
                    {
                      "ty": "gr",
                      "nm": "Group 1",
                      "bm": 0,
                      "mn": "ADBE Vector Group",
                      "it": [
                        {
                          "ty": "sh",
                          "nm": "Path 1",
                          "mn": "ADBE Vector Shape - Group",
                          "ind": 0,
                          "ks": {
                            "k": {
                              "i": [
                                [0.221, 0.62],
                                [0.621, -0.221],
                                [-0.221, -0.621],
                                [-0.621, 0.221]
                              ],
                              "o": [
                                [-0.221, -0.621],
                                [-0.621, 0.221],
                                [0.221, 0.621],
                                [0.621, -0.221]
                              ],
                              "v": [
                                [87.599, -110.98],
                                [86.076, -111.704],
                                [85.351, -110.181],
                                [86.874, -109.457]
                              ],
                              "c": true
                            },
                            "a": 0
                          }
                        },
                        {
                          "ty": "fl",
                          "nm": "Fill 1",
                          "bm": 0,
                          "mn": "ADBE Vector Graphic - Fill",
                          "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] },
                          "o": { "a": 0, "k": 100.0 },
                          "r": 1
                        },
                        {
                          "ty": "tr",
                          "o": { "a": 0, "k": 100.0 },
                          "r": { "a": 0, "k": 0.0 },
                          "p": { "a": 0, "k": [0.0, 0.0] },
                          "a": { "a": 0, "k": [0.0, 0.0] },
                          "s": { "a": 0, "k": [100.0, 100.0] },
                          "nm": "Transform",
                          "sk": { "a": 0, "k": 0.0 },
                          "sa": { "a": 0, "k": 0.0 }
                        }
                      ]
                    },
                    {
                      "ty": "gr",
                      "nm": "Group 2",
                      "bm": 0,
                      "mn": "ADBE Vector Group",
                      "it": [
                        {
                          "ty": "sh",
                          "nm": "Path 1",
                          "mn": "ADBE Vector Shape - Group",
                          "ind": 0,
                          "ks": {
                            "k": {
                              "i": [
                                [0.533, -0.388],
                                [-0.388, -0.533],
                                [-0.533, 0.388],
                                [0.388, 0.532]
                              ],
                              "o": [
                                [-0.532, 0.388],
                                [0.388, 0.533],
                                [0.533, -0.387],
                                [-0.388, -0.533]
                              ],
                              "v": [
                                [76.185, -109.774],
                                [75.922, -108.108],
                                [77.588, -107.846],
                                [77.851, -109.511]
                              ],
                              "c": true
                            },
                            "a": 0
                          }
                        },
                        {
                          "ty": "fl",
                          "nm": "Fill 1",
                          "bm": 0,
                          "mn": "ADBE Vector Graphic - Fill",
                          "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] },
                          "o": { "a": 0, "k": 100.0 },
                          "r": 1
                        },
                        {
                          "ty": "tr",
                          "o": { "a": 0, "k": 100.0 },
                          "r": { "a": 0, "k": 0.0 },
                          "p": { "a": 0, "k": [0.0, 0.0] },
                          "a": { "a": 0, "k": [0.0, 0.0] },
                          "s": { "a": 0, "k": [100.0, 100.0] },
                          "nm": "Transform",
                          "sk": { "a": 0, "k": 0.0 },
                          "sa": { "a": 0, "k": 0.0 }
                        }
                      ]
                    },
                    {
                      "ty": "tr",
                      "o": { "a": 0, "k": 100.0 },
                      "r": { "a": 0, "k": 0.0 },
                      "p": { "a": 0, "k": [0.0, 0.0] },
                      "a": { "a": 0, "k": [0.0, 0.0] },
                      "s": { "a": 0, "k": [100.0, 100.0] },
                      "nm": "Transform",
                      "sk": { "a": 0, "k": 0.0 },
                      "sa": { "a": 0, "k": 0.0 }
                    }
                  ]
                },
                {
                  "ty": "gr",
                  "nm": "Group 3",
                  "bm": 0,
                  "mn": "ADBE Vector Group",
                  "it": [
                    {
                      "ty": "gr",
                      "nm": "Group 1",
                      "bm": 0,
                      "mn": "ADBE Vector Group",
                      "it": [
                        {
                          "ty": "sh",
                          "nm": "Path 1",
                          "mn": "ADBE Vector Shape - Group",
                          "ind": 0,
                          "ks": {
                            "k": {
                              "i": [
                                [-0.291, -2.273],
                                [-0.327, 3.856],
                                [-0.248, 0.483],
                                [-0.542, 0.019],
                                [-0.184, -0.791],
                                [0.411, -0.822],
                                [0.268, -1.08]
                              ],
                              "o": [
                                [-1.139, -3.698],
                                [0.046, -0.541],
                                [0.248, -0.483],
                                [0.874, -0.031],
                                [0.247, 1.065],
                                [-0.5, 0.998],
                                [-0.551, 2.223]
                              ],
                              "v": [
                                [71.584, -109.223],
                                [70.351, -120.695],
                                [70.71, -122.272],
                                [71.97, -123.177],
                                [73.918, -121.435],
                                [73.095, -119.239],
                                [71.989, -116.043]
                              ],
                              "c": true
                            },
                            "a": 0
                          }
                        },
                        {
                          "ty": "fl",
                          "nm": "Fill 1",
                          "bm": 0,
                          "mn": "ADBE Vector Graphic - Fill",
                          "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] },
                          "o": { "a": 0, "k": 100.0 },
                          "r": 1
                        },
                        {
                          "ty": "tr",
                          "o": { "a": 0, "k": 100.0 },
                          "r": { "a": 0, "k": 0.0 },
                          "p": { "a": 0, "k": [0.0, 0.0] },
                          "a": { "a": 0, "k": [0.0, 0.0] },
                          "s": { "a": 0, "k": [100.0, 100.0] },
                          "nm": "Transform",
                          "sk": { "a": 0, "k": 0.0 },
                          "sa": { "a": 0, "k": 0.0 }
                        }
                      ]
                    },
                    {
                      "ty": "gr",
                      "nm": "Group 2",
                      "bm": 0,
                      "mn": "ADBE Vector Group",
                      "it": [
                        {
                          "ty": "sh",
                          "nm": "Path 1",
                          "mn": "ADBE Vector Shape - Group",
                          "ind": 0,
                          "ks": {
                            "k": {
                              "i": [
                                [-0.642, 0.086],
                                [-0.027, 0.007],
                                [-0.062, 1.078],
                                [-0.812, 1.689],
                                [1.244, 2.238],
                                [2.546, 0.275],
                                [1.168, 1.642],
                                [2.013, -0.084],
                                [1.691, -0.41],
                                [1.286, 0.51],
                                [1.509, -0.16],
                                [1.81, 0.049],
                                [2.111, -2.531],
                                [0.855, -2.369],
                                [0.669, -1.853],
                                [-2.094, -0.677],
                                [-0.87, 1.494],
                                [-0.043, 1.318],
                                [-1.313, -0.899],
                                [-1.111, 0.051],
                                [-2.753, 1.61],
                                [-0.242, 2.087],
                                [-0.923, -1.018],
                                [-0.919, -0.55],
                                [-0.785, 0.156],
                                [0.127, 0.296],
                                [-0.033, 0.62],
                                [0.299, 0.936],
                                [-0.615, -0.953],
                                [-0.605, -1.399],
                                [0.102, -2.493]
                              ],
                              "o": [
                                [0.026, -0.003],
                                [1.55, -0.385],
                                [0.112, -1.936],
                                [1.109, -2.308],
                                [-1.244, -2.238],
                                [0.739, -1.875],
                                [-1.168, -1.642],
                                [-1.739, 0.072],
                                [-1.358, 0.329],
                                [-1.278, -0.507],
                                [-1.815, 0.193],
                                [-3.28, -0.088],
                                [-1.613, 1.934],
                                [-0.669, 1.853],
                                [2.234, 0.175],
                                [1.374, 0.444],
                                [0.664, -1.14],
                                [-0.02, 1.443],
                                [0.939, 0.643],
                                [3.089, -0.141],
                                [-1.068, -1.757],
                                [-0.172, 1.478],
                                [0.719, 0.793],
                                [0.663, 0.397],
                                [-0.042, -0.314],
                                [-0.248, -0.577],
                                [0.052, -0.974],
                                [0.322, 1.007],
                                [0.827, 1.282],
                                [1.013, 2.344],
                                [-0.028, 0.68]
                              ],
                              "v": [
                                [106.878, -108.614],
                                [106.957, -108.629],
                                [107.885, -113.264],
                                [110.471, -118.31],
                                [110.251, -125.699],
                                [104.09, -129.785],
                                [103.388, -135.542],
                                [98.18, -138.092],
                                [93.136, -136.803],
                                [89.255, -137.074],
                                [85.958, -137.526],
                                [80.973, -137.351],
                                [72.249, -133.491],
                                [68.896, -126.767],
                                [66.891, -121.207],
                                [73.144, -120.171],
                                [77.706, -120.887],
                                [78.787, -124.651],
                                [80.564, -119.645],
                                [84.447, -119.571],
                                [93.857, -121.301],
                                [91.59, -128.031],
                                [94.205, -123.078],
                                [96.679, -121.046],
                                [99.434, -119.973],
                                [99.047, -120.83],
                                [98.899, -122.542],
                                [98.617, -125.351],
                                [101.192, -122.092],
                                [103.317, -118.048],
                                [105.848, -110.076]
                              ],
                              "c": true
                            },
                            "a": 0
                          }
                        },
                        {
                          "ty": "fl",
                          "nm": "Fill 1",
                          "bm": 0,
                          "mn": "ADBE Vector Graphic - Fill",
                          "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] },
                          "o": { "a": 0, "k": 100.0 },
                          "r": 1
                        },
                        {
                          "ty": "tr",
                          "o": { "a": 0, "k": 100.0 },
                          "r": { "a": 0, "k": 0.0 },
                          "p": { "a": 0, "k": [0.0, 0.0] },
                          "a": { "a": 0, "k": [0.0, 0.0] },
                          "s": { "a": 0, "k": [100.0, 100.0] },
                          "nm": "Transform",
                          "sk": { "a": 0, "k": 0.0 },
                          "sa": { "a": 0, "k": 0.0 }
                        }
                      ]
                    },
                    {
                      "ty": "gr",
                      "nm": "Group 3",
                      "bm": 0,
                      "mn": "ADBE Vector Group",
                      "it": [
                        {
                          "ty": "sh",
                          "nm": "Path 1",
                          "mn": "ADBE Vector Shape - Group",
                          "ind": 0,
                          "ks": {
                            "k": {
                              "i": [
                                [0.0, 0.0],
                                [-0.194, -0.524],
                                [-0.556, -0.058]
                              ],
                              "o": [
                                [-0.384, 0.406],
                                [0.194, 0.524],
                                [0.0, 0.0]
                              ],
                              "v": [
                                [79.21, -101.95],
                                [78.891, -100.392],
                                [80.148, -99.417]
                              ],
                              "c": false
                            },
                            "a": 0
                          }
                        },
                        {
                          "ty": "st",
                          "nm": "Stroke 1",
                          "bm": 0,
                          "mn": "ADBE Vector Graphic - Stroke",
                          "lc": 2,
                          "lj": 2,
                          "o": { "a": 0, "k": 100.0 },
                          "w": { "a": 0, "k": 0.684 },
                          "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] }
                        },
                        {
                          "ty": "tr",
                          "o": { "a": 0, "k": 100.0 },
                          "r": { "a": 0, "k": 0.0 },
                          "p": { "a": 0, "k": [0.0, 0.0] },
                          "a": { "a": 0, "k": [0.0, 0.0] },
                          "s": { "a": 0, "k": [100.0, 100.0] },
                          "nm": "Transform",
                          "sk": { "a": 0, "k": 0.0 },
                          "sa": { "a": 0, "k": 0.0 }
                        }
                      ]
                    },
                    {
                      "ty": "gr",
                      "nm": "Group 4",
                      "bm": 0,
                      "mn": "ADBE Vector Group",
                      "it": [
                        {
                          "ty": "sh",
                          "nm": "Path 1",
                          "mn": "ADBE Vector Shape - Group",
                          "ind": 0,
                          "ks": {
                            "k": {
                              "i": [
                                [0.0, 0.0],
                                [-0.375, 1.002],
                                [0.903, 0.574]
                              ],
                              "o": [
                                [1.058, 0.159],
                                [0.375, -1.002],
                                [0.0, 0.0]
                              ],
                              "v": [
                                [86.32, -94.192],
                                [88.878, -95.697],
                                [87.936, -98.512]
                              ],
                              "c": false
                            },
                            "a": 0
                          }
                        },
                        {
                          "ty": "st",
                          "nm": "Stroke 1",
                          "bm": 0,
                          "mn": "ADBE Vector Graphic - Stroke",
                          "lc": 2,
                          "lj": 2,
                          "o": { "a": 0, "k": 100.0 },
                          "w": { "a": 0, "k": 0.684 },
                          "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] }
                        },
                        {
                          "ty": "tr",
                          "o": { "a": 0, "k": 100.0 },
                          "r": { "a": 0, "k": 58.0 },
                          "p": { "a": 0, "k": [87.75, -96.625] },
                          "a": { "a": 0, "k": [87.75, -96.625] },
                          "s": {
                            "k": [
                              {
                                "i": { "x": [0.833, 0.833], "y": [0.833, 0.833] },
                                "o": { "x": [0.167, 0.167], "y": [0.167, 0.167] },
                                "t": 0,
                                "s": [100, 100]
                              },
                              {
                                "i": { "x": [0.833, 0.833], "y": [0.833, 0.833] },
                                "o": { "x": [0.167, 0.167], "y": [0.167, 0.167] },
                                "t": 4.03,
                                "s": [50, 50]
                              },
                              {
                                "i": { "x": [0.833, 0.833], "y": [0.833, 0.833] },
                                "o": { "x": [0.167, 0.167], "y": [0.167, 0.167] },
                                "t": 7.75,
                                "s": [100, 100]
                              },
                              {
                                "i": { "x": [0.833, 0.833], "y": [0.833, 0.833] },
                                "o": { "x": [0.167, 0.167], "y": [0.167, 0.167] },
                                "t": 11.78,
                                "s": [50, 50]
                              },
                              {
                                "i": { "x": [0.833, 0.833], "y": [0.833, 0.833] },
                                "o": { "x": [0.167, 0.167], "y": [0.167, 0.167] },
                                "t": 15,
                                "s": [100, 100]
                              },
                              {
                                "i": { "x": [0.833, 0.833], "y": [0.833, 0.833] },
                                "o": { "x": [0.167, 0.167], "y": [0.167, 0.167] },
                                "t": 19.53,
                                "s": [50, 50]
                              },
                              {
                                "i": { "x": [0.833, 0.833], "y": [0.833, 0.833] },
                                "o": { "x": [0.167, 0.167], "y": [0.167, 0.167] },
                                "t": 23.25,
                                "s": [100, 100]
                              },
                              {
                                "i": { "x": [0.833, 0.833], "y": [0.833, 0.833] },
                                "o": { "x": [0.167, 0.167], "y": [0.167, 0.167] },
                                "t": 27.28,
                                "s": [50, 50]
                              },
                              {
                                "i": { "x": [0.833, 0.833], "y": [0.833, 0.833] },
                                "o": { "x": [0.167, 0.167], "y": [0.167, 0.167] },
                                "t": 31,
                                "s": [100, 100]
                              },
                              {
                                "i": { "x": [0.833, 0.833], "y": [0.833, 0.833] },
                                "o": { "x": [0.167, 0.167], "y": [0.167, 0.167] },
                                "t": 64,
                                "s": [100, 100]
                              },
                              {
                                "i": { "x": [0.833, 0.833], "y": [0.833, 0.833] },
                                "o": { "x": [0.167, 0.167], "y": [0.167, 0.167] },
                                "t": 68.03,
                                "s": [50, 50]
                              },
                              {
                                "i": { "x": [0.833, 0.833], "y": [0.833, 0.833] },
                                "o": { "x": [0.167, 0.167], "y": [0.167, 0.167] },
                                "t": 71.75,
                                "s": [100, 100]
                              },
                              {
                                "i": { "x": [0.833, 0.833], "y": [0.833, 0.833] },
                                "o": { "x": [0.167, 0.167], "y": [0.167, 0.167] },
                                "t": 75.78,
                                "s": [50, 50]
                              },
                              {
                                "i": { "x": [0.833, 0.833], "y": [0.833, 0.833] },
                                "o": { "x": [0.167, 0.167], "y": [0.167, 0.167] },
                                "t": 79,
                                "s": [100, 100]
                              },
                              {
                                "i": { "x": [0.833, 0.833], "y": [0.833, 0.833] },
                                "o": { "x": [0.167, 0.167], "y": [0.167, 0.167] },
                                "t": 83.53,
                                "s": [50, 50]
                              },
                              {
                                "i": { "x": [0.833, 0.833], "y": [0.833, 0.833] },
                                "o": { "x": [0.167, 0.167], "y": [0.167, 0.167] },
                                "t": 87.25,
                                "s": [100, 100]
                              },
                              {
                                "i": { "x": [0.833, 0.833], "y": [0.833, 0.833] },
                                "o": { "x": [0.167, 0.167], "y": [0.167, 0.167] },
                                "t": 91.28,
                                "s": [50, 50]
                              },
                              { "t": 95, "s": [100, 100] }
                            ],
                            "a": 1
                          },
                          "nm": "Transform",
                          "sk": { "a": 0, "k": 0.0 },
                          "sa": { "a": 0, "k": 0.0 }
                        }
                      ]
                    },
                    {
                      "ty": "gr",
                      "nm": "Group 5",
                      "bm": 0,
                      "mn": "ADBE Vector Group",
                      "it": [
                        {
                          "ty": "sh",
                          "nm": "Path 1",
                          "mn": "ADBE Vector Shape - Group",
                          "ind": 0,
                          "ks": {
                            "k": {
                              "i": [
                                [0.0, 0.0],
                                [0.445, -0.837],
                                [-0.099, -0.372],
                                [-0.511, -0.137],
                                [-0.551, 0.01],
                                [0.336, -0.547],
                                [-0.085, -0.186],
                                [-0.247, 0.019],
                                [-0.227, 0.099],
                                [-0.092, -0.06],
                                [0.507, -0.462]
                              ],
                              "o": [
                                [-0.846, 0.597],
                                [-0.196, 0.368],
                                [0.118, 0.442],
                                [0.511, 0.137],
                                [-0.469, 0.48],
                                [-0.117, 0.19],
                                [0.085, 0.187],
                                [0.247, -0.019],
                                [0.002, 0.102],
                                [0.019, 0.597],
                                [0.0, 0.0]
                              ],
                              "v": [
                                [111.565, -114.576],
                                [109.587, -112.38],
                                [109.338, -111.233],
                                [110.426, -110.344],
                                [112.049, -110.226],
                                [110.837, -108.68],
                                [110.694, -108.083],
                                [111.29, -107.831],
                                [111.998, -108.05],
                                [112.149, -107.792],
                                [111.196, -106.262]
                              ],
                              "c": false
                            },
                            "a": 0
                          }
                        },
                        {
                          "ty": "st",
                          "nm": "Stroke 1",
                          "bm": 0,
                          "mn": "ADBE Vector Graphic - Stroke",
                          "lc": 2,
                          "lj": 2,
                          "o": { "a": 0, "k": 100.0 },
                          "w": { "a": 0, "k": 0.684 },
                          "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] }
                        },
                        {
                          "ty": "tr",
                          "o": { "a": 0, "k": 100.0 },
                          "r": { "a": 0, "k": 0.0 },
                          "p": { "a": 0, "k": [0.0, 0.0] },
                          "a": { "a": 0, "k": [0.0, 0.0] },
                          "s": { "a": 0, "k": [100.0, 100.0] },
                          "nm": "Transform",
                          "sk": { "a": 0, "k": 0.0 },
                          "sa": { "a": 0, "k": 0.0 }
                        }
                      ]
                    },
                    {
                      "ty": "gr",
                      "nm": "Group 6",
                      "bm": 0,
                      "mn": "ADBE Vector Group",
                      "it": [
                        {
                          "ty": "sh",
                          "nm": "Path 1",
                          "mn": "ADBE Vector Shape - Group",
                          "ind": 0,
                          "ks": {
                            "k": {
                              "i": [
                                [0.0, 0.0],
                                [5.282, 2.588],
                                [3.579, -0.553],
                                [2.331, -4.496],
                                [-0.63, -4.966],
                                [-10.705, -1.318],
                                [-3.728, 4.14],
                                [-0.91, 2.234],
                                [0.599, 0.308],
                                [-1.651, 0.886],
                                [-0.537, 1.66],
                                [3.579, 1.914],
                                [1.068, -1.529]
                              ],
                              "o": [
                                [-1.085, -5.697],
                                [-3.215, -1.575],
                                [-5.074, 0.784],
                                [-2.331, 4.496],
                                [1.109, 8.748],
                                [5.692, 0.701],
                                [1.616, -1.795],
                                [0.264, -0.648],
                                [1.618, 0.832],
                                [1.563, -0.839],
                                [1.168, -3.608],
                                [-1.571, -0.841],
                                [0.0, 0.0]
                              ],
                              "v": [
                                [107.243, -116.454],
                                [96.524, -129.475],
                                [86.054, -131.373],
                                [74.286, -122.438],
                                [72.108, -107.746],
                                [87.925, -84.154],
                                [102.554, -90.139],
                                [106.341, -96.258],
                                [108.102, -103.072],
                                [113.157, -102.996],
                                [116.358, -107.032],
                                [113.013, -117.179],
                                [107.47, -116.409]
                              ],
                              "c": false
                            },
                            "a": 0
                          }
                        },
                        {
                          "ty": "st",
                          "nm": "Stroke 1",
                          "bm": 0,
                          "mn": "ADBE Vector Graphic - Stroke",
                          "lc": 2,
                          "lj": 2,
                          "o": { "a": 0, "k": 100.0 },
                          "w": { "a": 0, "k": 0.684 },
                          "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] }
                        },
                        {
                          "ty": "fl",
                          "nm": "Fill 1",
                          "bm": 0,
                          "mn": "ADBE Vector Graphic - Fill",
                          "c": { "a": 0, "k": [1.0, 1.0, 1.0, 1.0] },
                          "o": { "a": 0, "k": 100.0 },
                          "r": 1
                        },
                        {
                          "ty": "tr",
                          "o": { "a": 0, "k": 100.0 },
                          "r": { "a": 0, "k": 0.0 },
                          "p": { "a": 0, "k": [0.0, 0.0] },
                          "a": { "a": 0, "k": [0.0, 0.0] },
                          "s": { "a": 0, "k": [100.0, 100.0] },
                          "nm": "Transform",
                          "sk": { "a": 0, "k": 0.0 },
                          "sa": { "a": 0, "k": 0.0 }
                        }
                      ]
                    },
                    {
                      "ty": "tr",
                      "o": { "a": 0, "k": 100.0 },
                      "r": { "a": 0, "k": 0.0 },
                      "p": { "a": 0, "k": [0.0, 0.0] },
                      "a": { "a": 0, "k": [0.0, 0.0] },
                      "s": { "a": 0, "k": [100.0, 100.0] },
                      "nm": "Transform",
                      "sk": { "a": 0, "k": 0.0 },
                      "sa": { "a": 0, "k": 0.0 }
                    }
                  ]
                },
                {
                  "ty": "gr",
                  "nm": "Group 4",
                  "bm": 0,
                  "mn": "ADBE Vector Group",
                  "it": [
                    {
                      "ty": "gr",
                      "nm": "Group 1",
                      "bm": 0,
                      "mn": "ADBE Vector Group",
                      "it": [
                        {
                          "ty": "sh",
                          "nm": "Path 1",
                          "mn": "ADBE Vector Shape - Group",
                          "ind": 0,
                          "ks": {
                            "k": {
                              "i": [
                                [0.0, 0.0],
                                [-0.233, 5.243],
                                [-3.754, 3.667],
                                [-5.701, -1.246],
                                [-2.768, -5.137],
                                [-1.253, -2.006],
                                [-2.329, -0.409],
                                [-0.309, 2.345]
                              ],
                              "o": [
                                [-1.651, -4.982],
                                [0.233, -5.243],
                                [4.174, -4.078],
                                [5.701, 1.246],
                                [1.122, 2.082],
                                [1.253, 2.006],
                                [2.329, 0.409],
                                [0.0, 0.0]
                              ],
                              "v": [
                                [89.38, -134.378],
                                [86.728, -149.807],
                                [92.545, -164.038],
                                [108.745, -168.494],
                                [122.185, -158.134],
                                [125.344, -151.785],
                                [130.79, -147.571],
                                [136.15, -150.972]
                              ],
                              "c": false
                            },
                            "a": 0
                          }
                        },
                        {
                          "ty": "st",
                          "nm": "Stroke 1",
                          "bm": 0,
                          "mn": "ADBE Vector Graphic - Stroke",
                          "lc": 2,
                          "lj": 2,
                          "o": { "a": 0, "k": 100.0 },
                          "w": { "a": 0, "k": 0.684 },
                          "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] }
                        },
                        {
                          "ty": "tr",
                          "o": { "a": 0, "k": 100.0 },
                          "r": { "a": 0, "k": 0.0 },
                          "p": { "a": 0, "k": [0.0, 0.0] },
                          "a": { "a": 0, "k": [0.0, 0.0] },
                          "s": { "a": 0, "k": [100.0, 100.0] },
                          "nm": "Transform",
                          "sk": { "a": 0, "k": 0.0 },
                          "sa": { "a": 0, "k": 0.0 }
                        }
                      ]
                    },
                    {
                      "ty": "gr",
                      "nm": "Group 2",
                      "bm": 0,
                      "mn": "ADBE Vector Group",
                      "it": [
                        {
                          "ty": "sh",
                          "nm": "Path 1",
                          "mn": "ADBE Vector Shape - Group",
                          "ind": 0,
                          "ks": {
                            "k": {
                              "i": [
                                [0.0, 0.0],
                                [-1.832, 4.867],
                                [-4.635, 2.358],
                                [-3.189, -0.83],
                                [-1.917, -4.358],
                                [-2.471, -4.07],
                                [-8.475, 1.517],
                                [0.092, -2.485],
                                [3.463, 1.165],
                                [-4.227, -1.832],
                                [2.874, -0.057],
                                [5.526, 2.416],
                                [1.938, 5.711],
                                [2.154, 2.427],
                                [2.438, -0.467],
                                [0.844, -2.334]
                              ],
                              "o": [
                                [-1.931, -4.829],
                                [1.832, -4.867],
                                [2.937, -1.494],
                                [4.608, 1.2],
                                [1.917, 4.358],
                                [4.486, 7.386],
                                [-0.092, 2.485],
                                [-3.652, -0.105],
                                [2.856, 3.614],
                                [-1.952, 2.111],
                                [-6.03, 0.119],
                                [-5.526, -2.416],
                                [-1.043, -3.073],
                                [-1.648, -1.856],
                                [-2.438, 0.467],
                                [0.0, 0.0]
                              ],
                              "v": [
                                [90.491, -134.481],
                                [90.336, -149.727],
                                [100.505, -161.089],
                                [110.064, -162.543],
                                [119.744, -152.716],
                                [125.219, -139.546],
                                [146.967, -129.464],
                                [146.692, -122.01],
                                [135.941, -123.929],
                                [146.479, -115.347],
                                [138.483, -112.829],
                                [120.77, -115.739],
                                [108.452, -128.275],
                                [104.99, -137.279],
                                [98.25, -139.57],
                                [92.836, -134.949]
                              ],
                              "c": false
                            },
                            "a": 0
                          }
                        },
                        {
                          "ty": "fl",
                          "nm": "Fill 1",
                          "bm": 0,
                          "mn": "ADBE Vector Graphic - Fill",
                          "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] },
                          "o": { "a": 0, "k": 100.0 },
                          "r": 1
                        },
                        {
                          "ty": "tr",
                          "o": { "a": 0, "k": 100.0 },
                          "r": { "a": 0, "k": 0.0 },
                          "p": { "a": 0, "k": [0.0, 0.0] },
                          "a": { "a": 0, "k": [0.0, 0.0] },
                          "s": { "a": 0, "k": [100.0, 100.0] },
                          "nm": "Transform",
                          "sk": { "a": 0, "k": 0.0 },
                          "sa": { "a": 0, "k": 0.0 }
                        }
                      ]
                    },
                    {
                      "ty": "tr",
                      "o": { "a": 0, "k": 100.0 },
                      "r": {
                        "a": 1,
                        "k": [
                          {
                            "i": { "x": [0.667], "y": [1] },
                            "o": { "x": [0.333], "y": [0] },
                            "t": 0,
                            "s": [0.0]
                          },
                          {
                            "i": { "x": [0.667], "y": [1] },
                            "o": { "x": [0.333], "y": [0] },
                            "t": 13,
                            "s": [15.0]
                          },
                          { "t": 25, "s": [0.0] }
                        ],
                        "x": "var $bm_rt;\n$bm_rt = loopOut();"
                      },
                      "p": { "a": 0, "k": [90.0, -136.5] },
                      "a": { "a": 0, "k": [90.0, -136.5] },
                      "s": { "a": 0, "k": [100.0, 100.0] },
                      "nm": "Transform",
                      "sk": { "a": 0, "k": 0.0 },
                      "sa": { "a": 0, "k": 0.0 }
                    }
                  ]
                },
                {
                  "ty": "tr",
                  "o": { "a": 0, "k": 100.0 },
                  "r": {
                    "a": 1,
                    "k": [
                      {
                        "i": { "x": [0.667], "y": [1] },
                        "o": { "x": [0.333], "y": [0] },
                        "t": 0,
                        "s": [0.0]
                      },
                      {
                        "i": { "x": [0.667], "y": [1] },
                        "o": { "x": [0.333], "y": [0] },
                        "t": 6,
                        "s": [-6.0]
                      },
                      {
                        "i": { "x": [0.667], "y": [1] },
                        "o": { "x": [0.333], "y": [0] },
                        "t": 12,
                        "s": [0.0]
                      },
                      {
                        "i": { "x": [0.667], "y": [1] },
                        "o": { "x": [0.333], "y": [0] },
                        "t": 18,
                        "s": [-6.0]
                      },
                      {
                        "i": { "x": [0.667], "y": [1] },
                        "o": { "x": [0.333], "y": [0] },
                        "t": 24,
                        "s": [0.0]
                      },
                      {
                        "i": { "x": [0.667], "y": [1] },
                        "o": { "x": [0.333], "y": [0] },
                        "t": 30,
                        "s": [-6.0]
                      },
                      {
                        "i": { "x": [0.667], "y": [1] },
                        "o": { "x": [0.167], "y": [0] },
                        "t": 36,
                        "s": [0.0]
                      },
                      {
                        "i": { "x": [0.667], "y": [1] },
                        "o": { "x": [0.333], "y": [0] },
                        "t": 70,
                        "s": [0.0]
                      },
                      {
                        "i": { "x": [0.667], "y": [1] },
                        "o": { "x": [0.333], "y": [0] },
                        "t": 76,
                        "s": [-6.0]
                      },
                      {
                        "i": { "x": [0.667], "y": [1] },
                        "o": { "x": [0.333], "y": [0] },
                        "t": 82,
                        "s": [0.0]
                      },
                      {
                        "i": { "x": [0.667], "y": [1] },
                        "o": { "x": [0.333], "y": [0] },
                        "t": 88,
                        "s": [-6.0]
                      },
                      {
                        "i": { "x": [0.667], "y": [1] },
                        "o": { "x": [0.333], "y": [0] },
                        "t": 94,
                        "s": [0.0]
                      },
                      {
                        "i": { "x": [0.667], "y": [1] },
                        "o": { "x": [0.333], "y": [0] },
                        "t": 100,
                        "s": [-6.0]
                      },
                      { "t": 106, "s": [0.0] }
                    ]
                  },
                  "p": { "a": 0, "k": [90.5, -83.5] },
                  "a": { "a": 0, "k": [90.5, -83.5] },
                  "s": { "a": 0, "k": [100.0, 100.0] },
                  "nm": "Transform",
                  "sk": { "a": 0, "k": 0.0 },
                  "sa": { "a": 0, "k": 0.0 }
                }
              ]
            },
            {
              "ty": "gr",
              "nm": "Group 2",
              "bm": 0,
              "mn": "ADBE Vector Group",
              "it": [
                {
                  "ty": "gr",
                  "nm": "Group 1",
                  "bm": 0,
                  "mn": "ADBE Vector Group",
                  "it": [
                    {
                      "ty": "sh",
                      "nm": "Path 1",
                      "mn": "ADBE Vector Shape - Group",
                      "ind": 0,
                      "ks": {
                        "k": {
                          "i": [
                            [0.0, 0.0],
                            [0.0, 0.0],
                            [0.0, 0.0]
                          ],
                          "o": [
                            [0.0, 0.0],
                            [0.0, 0.0],
                            [0.0, 0.0]
                          ],
                          "v": [
                            [102.528, -55.11],
                            [103.559, -64.935],
                            [94.144, -52.942]
                          ],
                          "c": true
                        },
                        "a": 0
                      }
                    },
                    {
                      "ty": "fl",
                      "nm": "Fill 1",
                      "bm": 0,
                      "mn": "ADBE Vector Graphic - Fill",
                      "c": { "a": 0, "k": [0.015686275437, 0.011764706112, 0.003921568859, 1.0] },
                      "o": { "a": 0, "k": 100.0 },
                      "r": 1
                    },
                    {
                      "ty": "tr",
                      "o": { "a": 0, "k": 100.0 },
                      "r": { "a": 0, "k": 0.0 },
                      "p": { "a": 0, "k": [0.0, 0.0] },
                      "a": { "a": 0, "k": [0.0, 0.0] },
                      "s": { "a": 0, "k": [100.0, 100.0] },
                      "nm": "Transform",
                      "sk": { "a": 0, "k": 0.0 },
                      "sa": { "a": 0, "k": 0.0 }
                    }
                  ]
                },
                {
                  "ty": "gr",
                  "nm": "Group 2",
                  "bm": 0,
                  "mn": "ADBE Vector Group",
                  "it": [
                    {
                      "ty": "sh",
                      "nm": "Path 1",
                      "mn": "ADBE Vector Shape - Group",
                      "ind": 0,
                      "ks": {
                        "k": {
                          "i": [
                            [0.0, -4.358],
                            [4.705, 0.0],
                            [0.0, 4.358],
                            [-4.705, 0.0]
                          ],
                          "o": [
                            [0.0, 4.358],
                            [-4.705, 0.0],
                            [0.0, -4.358],
                            [4.705, 0.0]
                          ],
                          "v": [
                            [32.831, -42.306],
                            [24.311, -34.416],
                            [15.791, -42.306],
                            [24.311, -50.196]
                          ],
                          "c": true
                        },
                        "a": 0
                      }
                    },
                    {
                      "ty": "st",
                      "nm": "Stroke 1",
                      "bm": 0,
                      "mn": "ADBE Vector Graphic - Stroke",
                      "lc": 2,
                      "lj": 2,
                      "o": { "a": 0, "k": 100.0 },
                      "w": { "a": 0, "k": 0.684 },
                      "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] }
                    },
                    {
                      "ty": "tr",
                      "o": { "a": 0, "k": 100.0 },
                      "r": { "a": 0, "k": 0.0 },
                      "p": { "a": 0, "k": [0.0, 0.0] },
                      "a": { "a": 0, "k": [0.0, 0.0] },
                      "s": { "a": 0, "k": [100.0, 100.0] },
                      "nm": "Transform",
                      "sk": { "a": 0, "k": 0.0 },
                      "sa": { "a": 0, "k": 0.0 }
                    }
                  ]
                },
                {
                  "ty": "gr",
                  "nm": "Group 3",
                  "bm": 0,
                  "mn": "ADBE Vector Group",
                  "it": [
                    {
                      "ty": "sh",
                      "nm": "Path 1",
                      "mn": "ADBE Vector Shape - Group",
                      "ind": 0,
                      "ks": {
                        "k": {
                          "i": [
                            [0.0, 0.0],
                            [0.0, 0.0],
                            [0.251, -0.655],
                            [0.0, 0.0]
                          ],
                          "o": [
                            [0.0, 0.0],
                            [0.0, 0.0],
                            [-0.251, 0.655],
                            [0.0, 0.0]
                          ],
                          "v": [
                            [68.678, -21.558],
                            [114.08, -28.648],
                            [113.037, -33.902],
                            [66.63, -26.524]
                          ],
                          "c": true
                        },
                        "a": 0
                      }
                    },
                    {
                      "ty": "fl",
                      "nm": "Fill 1",
                      "bm": 0,
                      "mn": "ADBE Vector Graphic - Fill",
                      "c": { "a": 0, "k": [0.015686275437, 0.011764706112, 0.003921568859, 1.0] },
                      "o": { "a": 0, "k": 100.0 },
                      "r": 1
                    },
                    {
                      "ty": "tr",
                      "o": { "a": 0, "k": 100.0 },
                      "r": { "a": 0, "k": 0.0 },
                      "p": { "a": 0, "k": [0.0, 0.0] },
                      "a": { "a": 0, "k": [0.0, 0.0] },
                      "s": { "a": 0, "k": [100.0, 100.0] },
                      "nm": "Transform",
                      "sk": { "a": 0, "k": 0.0 },
                      "sa": { "a": 0, "k": 0.0 }
                    }
                  ]
                },
                {
                  "ty": "gr",
                  "nm": "Group 4",
                  "bm": 0,
                  "mn": "ADBE Vector Group",
                  "it": [
                    {
                      "ty": "sh",
                      "nm": "Path 1",
                      "mn": "ADBE Vector Shape - Group",
                      "ind": 0,
                      "ks": {
                        "k": {
                          "i": [
                            [0.0, 0.0],
                            [0.0, 0.0],
                            [0.0, 0.0],
                            [0.0, 0.0]
                          ],
                          "o": [
                            [0.0, 0.0],
                            [0.0, 0.0],
                            [0.0, 0.0],
                            [0.0, 0.0]
                          ],
                          "v": [
                            [68.678, -21.558],
                            [4.552, -11.074],
                            [-15.299, -59.812],
                            [48.533, -70.402]
                          ],
                          "c": true
                        },
                        "a": 0
                      }
                    },
                    {
                      "ty": "st",
                      "nm": "Stroke 1",
                      "bm": 0,
                      "mn": "ADBE Vector Graphic - Stroke",
                      "lc": 2,
                      "lj": 2,
                      "o": { "a": 0, "k": 100.0 },
                      "w": { "a": 0, "k": 0.684 },
                      "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] }
                    },
                    {
                      "ty": "fl",
                      "nm": "Fill 1",
                      "bm": 0,
                      "mn": "ADBE Vector Graphic - Fill",
                      "c": { "a": 0, "k": [1.0, 1.0, 1.0, 1.0] },
                      "o": { "a": 0, "k": 100.0 },
                      "r": 1
                    },
                    {
                      "ty": "tr",
                      "o": { "a": 0, "k": 100.0 },
                      "r": { "a": 0, "k": 0.0 },
                      "p": { "a": 0, "k": [0.0, 0.0] },
                      "a": { "a": 0, "k": [0.0, 0.0] },
                      "s": { "a": 0, "k": [100.0, 100.0] },
                      "nm": "Transform",
                      "sk": { "a": 0, "k": 0.0 },
                      "sa": { "a": 0, "k": 0.0 }
                    }
                  ]
                },
                {
                  "ty": "gr",
                  "nm": "Group 5",
                  "bm": 0,
                  "mn": "ADBE Vector Group",
                  "it": [
                    {
                      "ty": "sh",
                      "nm": "Path 1",
                      "mn": "ADBE Vector Shape - Group",
                      "ind": 0,
                      "ks": {
                        "k": {
                          "i": [
                            [0.204, -0.454],
                            [0.0, 0.0],
                            [0.0, 0.0],
                            [0.0, 0.0],
                            [-0.305, -0.722],
                            [0.0, 0.0]
                          ],
                          "o": [
                            [0.0, 0.0],
                            [0.0, 0.0],
                            [0.0, 0.0],
                            [0.78, -0.077],
                            [0.0, 0.0],
                            [0.193, 0.458]
                          ],
                          "v": [
                            [70.534, -25.692],
                            [68.678, -21.558],
                            [47.987, -70.895],
                            [50.592, -71.151],
                            [52.416, -70.066],
                            [70.55, -27.122]
                          ],
                          "c": true
                        },
                        "a": 0
                      }
                    },
                    {
                      "ty": "fl",
                      "nm": "Fill 1",
                      "bm": 0,
                      "mn": "ADBE Vector Graphic - Fill",
                      "c": { "a": 0, "k": [0.015686275437, 0.011764706112, 0.003921568859, 1.0] },
                      "o": { "a": 0, "k": 100.0 },
                      "r": 1
                    },
                    {
                      "ty": "tr",
                      "o": { "a": 0, "k": 100.0 },
                      "r": { "a": 0, "k": 0.0 },
                      "p": { "a": 0, "k": [0.0, 0.0] },
                      "a": { "a": 0, "k": [0.0, 0.0] },
                      "s": { "a": 0, "k": [100.0, 100.0] },
                      "nm": "Transform",
                      "sk": { "a": 0, "k": 0.0 },
                      "sa": { "a": 0, "k": 0.0 }
                    }
                  ]
                },
                {
                  "ty": "gr",
                  "nm": "Group 6",
                  "bm": 0,
                  "mn": "ADBE Vector Group",
                  "it": [
                    {
                      "ty": "sh",
                      "nm": "Path 1",
                      "mn": "ADBE Vector Shape - Group",
                      "ind": 0,
                      "ks": {
                        "k": {
                          "i": [
                            [0.0, 0.0],
                            [-3.499, -0.253],
                            [-1.42, -0.409],
                            [-0.902, -0.705],
                            [-0.791, -0.705],
                            [-1.153, -1.919],
                            [-0.635, -3.2],
                            [2.616, -5.999],
                            [6.84, -0.769],
                            [0.0, 0.0],
                            [0.0, 0.0],
                            [0.0, 0.0],
                            [0.0, 0.0]
                          ],
                          "o": [
                            [3.506, -0.132],
                            [1.474, 0.107],
                            [1.096, 0.316],
                            [0.83, 0.648],
                            [1.678, 1.496],
                            [1.683, 2.8],
                            [1.272, 6.406],
                            [-3.25, 7.454],
                            [0.0, 0.0],
                            [0.0, 0.0],
                            [0.0, 0.0],
                            [0.0, 0.0],
                            [0.0, 0.0]
                          ],
                          "v": [
                            [97.865, -76.922],
                            [107.871, -76.728],
                            [112.249, -76.07],
                            [115.309, -74.568],
                            [117.813, -72.614],
                            [121.989, -67.348],
                            [125.441, -58.234],
                            [123.454, -38.948],
                            [102.867, -32.014],
                            [70.55, -27.122],
                            [62.215, -45.92],
                            [102.867, -54.86],
                            [103.925, -64.906]
                          ],
                          "c": false
                        },
                        "a": 0
                      }
                    },
                    {
                      "ty": "st",
                      "nm": "Stroke 1",
                      "bm": 0,
                      "mn": "ADBE Vector Graphic - Stroke",
                      "lc": 1,
                      "lj": 1,
                      "ml": 10.0,
                      "o": { "a": 0, "k": 100.0 },
                      "w": { "a": 0, "k": 0.684 },
                      "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] }
                    },
                    {
                      "ty": "fl",
                      "nm": "Fill 1",
                      "bm": 0,
                      "mn": "ADBE Vector Graphic - Fill",
                      "c": { "a": 0, "k": [0.92549020052, 0.92549020052, 0.92549020052, 1.0] },
                      "o": { "a": 0, "k": 100.0 },
                      "r": 1
                    },
                    {
                      "ty": "tr",
                      "o": { "a": 0, "k": 100.0 },
                      "r": { "a": 0, "k": 0.0 },
                      "p": { "a": 0, "k": [0.0, 0.0] },
                      "a": { "a": 0, "k": [0.0, 0.0] },
                      "s": { "a": 0, "k": [100.0, 100.0] },
                      "nm": "Transform",
                      "sk": { "a": 0, "k": 0.0 },
                      "sa": { "a": 0, "k": 0.0 }
                    }
                  ]
                },
                {
                  "ty": "gr",
                  "nm": "Group 7",
                  "bm": 0,
                  "mn": "ADBE Vector Group",
                  "it": [
                    {
                      "ty": "sh",
                      "nm": "Path 1",
                      "mn": "ADBE Vector Shape - Group",
                      "ind": 0,
                      "ks": {
                        "k": {
                          "i": [
                            [0.0, 0.0],
                            [1.608, -10.748],
                            [1.025, -4.734],
                            [-0.528, -4.98]
                          ],
                          "o": [
                            [-4.607, 9.844],
                            [-0.723, 4.836],
                            [-1.063, 4.911],
                            [0.0, 0.0]
                          ],
                          "v": [
                            [78.953, -13.14],
                            [69.578, 17.97],
                            [67.766, 32.462],
                            [67.124, 47.912]
                          ],
                          "c": false
                        },
                        "a": 0
                      }
                    },
                    {
                      "ty": "st",
                      "nm": "Stroke 1",
                      "bm": 0,
                      "mn": "ADBE Vector Graphic - Stroke",
                      "lc": 2,
                      "lj": 2,
                      "o": { "a": 0, "k": 100.0 },
                      "w": { "a": 0, "k": 0.684 },
                      "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] }
                    },
                    {
                      "ty": "tr",
                      "o": { "a": 0, "k": 100.0 },
                      "r": { "a": 0, "k": 0.0 },
                      "p": { "a": 0, "k": [0.0, 0.0] },
                      "a": { "a": 0, "k": [0.0, 0.0] },
                      "s": { "a": 0, "k": [100.0, 100.0] },
                      "nm": "Transform",
                      "sk": { "a": 0, "k": 0.0 },
                      "sa": { "a": 0, "k": 0.0 }
                    }
                  ]
                },
                {
                  "ty": "gr",
                  "nm": "Group 8",
                  "bm": 0,
                  "mn": "ADBE Vector Group",
                  "it": [
                    {
                      "ty": "sh",
                      "nm": "Path 1",
                      "mn": "ADBE Vector Shape - Group",
                      "ind": 0,
                      "ks": {
                        "k": {
                          "i": [
                            [0.0, 0.0],
                            [0.0, 0.0]
                          ],
                          "o": [
                            [0.0, 0.0],
                            [0.0, 0.0]
                          ],
                          "v": [
                            [89.273, 111.671],
                            [89.073, 111.698]
                          ],
                          "c": false
                        },
                        "a": 0
                      }
                    },
                    {
                      "ty": "st",
                      "nm": "Stroke 1",
                      "bm": 0,
                      "mn": "ADBE Vector Graphic - Stroke",
                      "lc": 2,
                      "lj": 2,
                      "o": { "a": 0, "k": 100.0 },
                      "w": { "a": 0, "k": 0.684 },
                      "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] }
                    },
                    {
                      "ty": "fl",
                      "nm": "Fill 1",
                      "bm": 0,
                      "mn": "ADBE Vector Graphic - Fill",
                      "c": { "a": 0, "k": [1.0, 1.0, 1.0, 1.0] },
                      "o": { "a": 0, "k": 100.0 },
                      "r": 1
                    },
                    {
                      "ty": "tr",
                      "o": { "a": 0, "k": 100.0 },
                      "r": { "a": 0, "k": 0.0 },
                      "p": { "a": 0, "k": [0.0, 0.0] },
                      "a": { "a": 0, "k": [0.0, 0.0] },
                      "s": { "a": 0, "k": [100.0, 100.0] },
                      "nm": "Transform",
                      "sk": { "a": 0, "k": 0.0 },
                      "sa": { "a": 0, "k": 0.0 }
                    }
                  ]
                },
                {
                  "ty": "gr",
                  "nm": "Group 9",
                  "bm": 0,
                  "mn": "ADBE Vector Group",
                  "it": [
                    {
                      "ty": "sh",
                      "nm": "Path 1",
                      "mn": "ADBE Vector Shape - Group",
                      "ind": 0,
                      "ks": {
                        "k": {
                          "i": [
                            [-1.844, -5.447],
                            [3.328, 0.496],
                            [8.909, -2.054],
                            [10.759, -6.901],
                            [-1.232, 5.914],
                            [-11.787, 1.914],
                            [-10.205, -2.748]
                          ],
                          "o": [
                            [-3.17, -1.171],
                            [-9.042, -1.351],
                            [-12.451, 2.869],
                            [0.488, -6.017],
                            [9.575, -7.13],
                            [10.42, -1.69],
                            [1.822, 5.36]
                          ],
                          "v": [
                            [102.474, 65.954],
                            [92.672, 63.461],
                            [65.458, 65.122],
                            [30.293, 79.926],
                            [32.878, 62.005],
                            [65.528, 48.126],
                            [96.925, 49.775]
                          ],
                          "c": true
                        },
                        "a": 0
                      }
                    },
                    {
                      "ty": "st",
                      "nm": "Stroke 1",
                      "bm": 0,
                      "mn": "ADBE Vector Graphic - Stroke",
                      "lc": 2,
                      "lj": 2,
                      "o": { "a": 0, "k": 100.0 },
                      "w": { "a": 0, "k": 0.684 },
                      "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] }
                    },
                    {
                      "ty": "tr",
                      "o": { "a": 0, "k": 100.0 },
                      "r": { "a": 0, "k": 0.0 },
                      "p": { "a": 0, "k": [0.0, 0.0] },
                      "a": { "a": 0, "k": [0.0, 0.0] },
                      "s": { "a": 0, "k": [100.0, 100.0] },
                      "nm": "Transform",
                      "sk": { "a": 0, "k": 0.0 },
                      "sa": { "a": 0, "k": 0.0 }
                    }
                  ]
                },
                {
                  "ty": "gr",
                  "nm": "Group 10",
                  "bm": 0,
                  "mn": "ADBE Vector Group",
                  "it": [
                    {
                      "ty": "sh",
                      "nm": "Path 1",
                      "mn": "ADBE Vector Shape - Group",
                      "ind": 0,
                      "ks": {
                        "k": {
                          "i": [
                            [-1.844, -5.447],
                            [3.328, 0.496],
                            [8.909, -2.054],
                            [10.759, -6.901],
                            [-1.232, 5.914],
                            [-2.694, 7.139],
                            [-18.362, 16.463],
                            [-5.239, -0.097],
                            [-3.915, -10.992],
                            [5.865, -4.303],
                            [3.202, -0.233],
                            [6.559, 2.929],
                            [-0.127, -0.899],
                            [-0.509, -2.484],
                            [-3.773, -11.082]
                          ],
                          "o": [
                            [-3.17, -1.171],
                            [-9.042, -1.351],
                            [-12.451, 2.869],
                            [0.488, -6.017],
                            [1.551, -7.473],
                            [8.405, -22.274],
                            [3.862, -3.462],
                            [10.08, 0.187],
                            [2.36, 6.626],
                            [-2.588, 1.899],
                            [-5.686, 0.413],
                            [0.506, 0.49],
                            [0.355, 2.512],
                            [2.405, 11.678],
                            [1.822, 5.36]
                          ],
                          "v": [
                            [102.587, 66.159],
                            [92.786, 63.666],
                            [65.572, 65.327],
                            [30.407, 80.13],
                            [32.991, 62.21],
                            [39.374, 40.252],
                            [72.856, -23.097],
                            [86.572, -29.321],
                            [115.752, -16.004],
                            [110.486, 4.516],
                            [101.469, 7.519],
                            [84.953, 3.386],
                            [85.886, 8.75],
                            [87.337, 16.163],
                            [97.039, 49.98]
                          ],
                          "c": true
                        },
                        "a": 0
                      }
                    },
                    {
                      "ty": "st",
                      "nm": "Stroke 1",
                      "bm": 0,
                      "mn": "ADBE Vector Graphic - Stroke",
                      "lc": 2,
                      "lj": 2,
                      "o": { "a": 0, "k": 100.0 },
                      "w": { "a": 0, "k": 0.684 },
                      "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] }
                    },
                    {
                      "ty": "fl",
                      "nm": "Fill 1",
                      "bm": 0,
                      "mn": "ADBE Vector Graphic - Fill",
                      "c": { "a": 0, "k": [1.0, 1.0, 1.0, 1.0] },
                      "o": { "a": 0, "k": 100.0 },
                      "r": 1
                    },
                    {
                      "ty": "tr",
                      "o": { "a": 0, "k": 100.0 },
                      "r": { "a": 0, "k": 0.0 },
                      "p": { "a": 0, "k": [0.0, 0.0] },
                      "a": { "a": 0, "k": [0.0, 0.0] },
                      "s": { "a": 0, "k": [100.0, 100.0] },
                      "nm": "Transform",
                      "sk": { "a": 0, "k": 0.0 },
                      "sa": { "a": 0, "k": 0.0 }
                    }
                  ]
                },
                {
                  "ty": "gr",
                  "nm": "Group 11",
                  "bm": 0,
                  "mn": "ADBE Vector Group",
                  "it": [
                    {
                      "ty": "sh",
                      "nm": "Path 1",
                      "mn": "ADBE Vector Shape - Group",
                      "ind": 0,
                      "ks": {
                        "k": {
                          "i": [
                            [0.0, 0.0],
                            [-1.004, -0.149],
                            [3.437, -1.461]
                          ],
                          "o": [
                            [1.008, 0.074],
                            [-3.512, 1.26],
                            [0.0, 0.0]
                          ],
                          "v": [
                            [46.377, 69.361],
                            [49.39, 69.697],
                            [38.962, 73.786]
                          ],
                          "c": true
                        },
                        "a": 0
                      }
                    },
                    {
                      "ty": "fl",
                      "nm": "Fill 1",
                      "bm": 0,
                      "mn": "ADBE Vector Graphic - Fill",
                      "c": { "a": 0, "k": [0.015686275437, 0.011764706112, 0.003921568859, 1.0] },
                      "o": { "a": 0, "k": 100.0 },
                      "r": 1
                    },
                    {
                      "ty": "tr",
                      "o": { "a": 0, "k": 100.0 },
                      "r": { "a": 0, "k": 0.0 },
                      "p": { "a": 0, "k": [0.0, 0.0] },
                      "a": { "a": 0, "k": [0.0, 0.0] },
                      "s": { "a": 0, "k": [100.0, 100.0] },
                      "nm": "Transform",
                      "sk": { "a": 0, "k": 0.0 },
                      "sa": { "a": 0, "k": 0.0 }
                    }
                  ]
                },
                {
                  "ty": "gr",
                  "nm": "Group 12",
                  "bm": 0,
                  "mn": "ADBE Vector Group",
                  "it": [
                    {
                      "ty": "gr",
                      "nm": "Group 1",
                      "bm": 0,
                      "mn": "ADBE Vector Group",
                      "it": [
                        {
                          "ty": "sh",
                          "nm": "Path 1",
                          "mn": "ADBE Vector Shape - Group",
                          "ind": 0,
                          "ks": {
                            "k": {
                              "i": [
                                [0.0, 0.0],
                                [-1.705, -2.737],
                                [0.776, -3.13]
                              ],
                              "o": [
                                [2.366, 2.191],
                                [1.705, 2.737],
                                [0.0, 0.0]
                              ],
                              "v": [
                                [42.34, 142.734],
                                [48.805, 149.889],
                                [50.693, 159.114]
                              ],
                              "c": false
                            },
                            "a": 0
                          }
                        },
                        {
                          "ty": "st",
                          "nm": "Stroke 1",
                          "bm": 0,
                          "mn": "ADBE Vector Graphic - Stroke",
                          "lc": 2,
                          "lj": 2,
                          "o": { "a": 0, "k": 100.0 },
                          "w": { "a": 0, "k": 0.684 },
                          "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] }
                        },
                        {
                          "ty": "tr",
                          "o": { "a": 0, "k": 100.0 },
                          "r": { "a": 0, "k": 0.0 },
                          "p": { "a": 0, "k": [0.0, 0.0] },
                          "a": { "a": 0, "k": [0.0, 0.0] },
                          "s": { "a": 0, "k": [100.0, 100.0] },
                          "nm": "Transform",
                          "sk": { "a": 0, "k": 0.0 },
                          "sa": { "a": 0, "k": 0.0 }
                        }
                      ]
                    },
                    {
                      "ty": "gr",
                      "nm": "Group 2",
                      "bm": 0,
                      "mn": "ADBE Vector Group",
                      "it": [
                        {
                          "ty": "sh",
                          "nm": "Path 1",
                          "mn": "ADBE Vector Shape - Group",
                          "ind": 0,
                          "ks": {
                            "k": {
                              "i": [
                                [0.0, 0.0],
                                [-1.265, -2.303]
                              ],
                              "o": [
                                [2.626, 0.07],
                                [0.0, 0.0]
                              ],
                              "v": [
                                [47.495, 134.488],
                                [53.347, 138.055]
                              ],
                              "c": false
                            },
                            "a": 0
                          }
                        },
                        {
                          "ty": "st",
                          "nm": "Stroke 1",
                          "bm": 0,
                          "mn": "ADBE Vector Graphic - Stroke",
                          "lc": 2,
                          "lj": 2,
                          "o": { "a": 0, "k": 100.0 },
                          "w": { "a": 0, "k": 0.684 },
                          "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] }
                        },
                        {
                          "ty": "tr",
                          "o": { "a": 0, "k": 100.0 },
                          "r": { "a": 0, "k": 0.0 },
                          "p": { "a": 0, "k": [0.0, 0.0] },
                          "a": { "a": 0, "k": [0.0, 0.0] },
                          "s": { "a": 0, "k": [100.0, 100.0] },
                          "nm": "Transform",
                          "sk": { "a": 0, "k": 0.0 },
                          "sa": { "a": 0, "k": 0.0 }
                        }
                      ]
                    },
                    {
                      "ty": "gr",
                      "nm": "Group 3",
                      "bm": 0,
                      "mn": "ADBE Vector Group",
                      "it": [
                        {
                          "ty": "sh",
                          "nm": "Path 1",
                          "mn": "ADBE Vector Shape - Group",
                          "ind": 0,
                          "ks": {
                            "k": {
                              "i": [
                                [0.0, 0.0],
                                [-1.396, -2.365]
                              ],
                              "o": [
                                [2.743, -0.125],
                                [0.0, 0.0]
                              ],
                              "v": [
                                [50.777, 128.701],
                                [56.071, 131.566]
                              ],
                              "c": false
                            },
                            "a": 0
                          }
                        },
                        {
                          "ty": "st",
                          "nm": "Stroke 1",
                          "bm": 0,
                          "mn": "ADBE Vector Graphic - Stroke",
                          "lc": 2,
                          "lj": 2,
                          "o": { "a": 0, "k": 100.0 },
                          "w": { "a": 0, "k": 0.684 },
                          "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] }
                        },
                        {
                          "ty": "tr",
                          "o": { "a": 0, "k": 100.0 },
                          "r": { "a": 0, "k": 0.0 },
                          "p": { "a": 0, "k": [0.0, 0.0] },
                          "a": { "a": 0, "k": [0.0, 0.0] },
                          "s": { "a": 0, "k": [100.0, 100.0] },
                          "nm": "Transform",
                          "sk": { "a": 0, "k": 0.0 },
                          "sa": { "a": 0, "k": 0.0 }
                        }
                      ]
                    },
                    {
                      "ty": "gr",
                      "nm": "Group 4",
                      "bm": 0,
                      "mn": "ADBE Vector Group",
                      "it": [
                        {
                          "ty": "sh",
                          "nm": "Path 1",
                          "mn": "ADBE Vector Shape - Group",
                          "ind": 0,
                          "ks": {
                            "k": {
                              "i": [
                                [0.0, 0.0],
                                [1.824, -3.446],
                                [2.699, -4.699],
                                [-0.125, 0.197]
                              ],
                              "o": [
                                [-1.824, 3.446],
                                [-2.699, 4.699],
                                [0.125, -0.197],
                                [0.0, 0.0]
                              ],
                              "v": [
                                [60.704, 124.843],
                                [55.295, 134.221],
                                [48.364, 148.807],
                                [48.738, 148.216]
                              ],
                              "c": false
                            },
                            "a": 0
                          }
                        },
                        {
                          "ty": "st",
                          "nm": "Stroke 1",
                          "bm": 0,
                          "mn": "ADBE Vector Graphic - Stroke",
                          "lc": 2,
                          "lj": 2,
                          "o": { "a": 0, "k": 100.0 },
                          "w": { "a": 0, "k": 0.684 },
                          "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] }
                        },
                        {
                          "ty": "tr",
                          "o": { "a": 0, "k": 100.0 },
                          "r": { "a": 0, "k": 0.0 },
                          "p": { "a": 0, "k": [0.0, 0.0] },
                          "a": { "a": 0, "k": [0.0, 0.0] },
                          "s": { "a": 0, "k": [100.0, 100.0] },
                          "nm": "Transform",
                          "sk": { "a": 0, "k": 0.0 },
                          "sa": { "a": 0, "k": 0.0 }
                        }
                      ]
                    },
                    {
                      "ty": "gr",
                      "nm": "Group 5",
                      "bm": 0,
                      "mn": "ADBE Vector Group",
                      "it": [
                        {
                          "ty": "sh",
                          "nm": "Path 1",
                          "mn": "ADBE Vector Shape - Group",
                          "ind": 0,
                          "ks": {
                            "k": {
                              "i": [
                                [0.0, 0.0],
                                [0.0, 0.0],
                                [-1.217, 4.924],
                                [-3.914, 2.306]
                              ],
                              "o": [
                                [0.0, 0.0],
                                [-3.533, -3.591],
                                [1.095, -4.403],
                                [0.0, 0.0]
                              ],
                              "v": [
                                [96.899, 139.064],
                                [86.581, 144.483],
                                [82.842, 130.42],
                                [90.901, 119.924]
                              ],
                              "c": true
                            },
                            "a": 0
                          }
                        },
                        {
                          "ty": "fl",
                          "nm": "Fill 1",
                          "bm": 0,
                          "mn": "ADBE Vector Graphic - Fill",
                          "c": {
                            "a": 0,
                            "k": [0.015686275437, 0.011764706112, 0.003921568859, 1.0]
                          },
                          "o": { "a": 0, "k": 100.0 },
                          "r": 1
                        },
                        {
                          "ty": "tr",
                          "o": { "a": 0, "k": 100.0 },
                          "r": { "a": 0, "k": 0.0 },
                          "p": { "a": 0, "k": [0.0, 0.0] },
                          "a": { "a": 0, "k": [0.0, 0.0] },
                          "s": { "a": 0, "k": [100.0, 100.0] },
                          "nm": "Transform",
                          "sk": { "a": 0, "k": 0.0 },
                          "sa": { "a": 0, "k": 0.0 }
                        }
                      ]
                    },
                    {
                      "ty": "gr",
                      "nm": "Group 6",
                      "bm": 0,
                      "mn": "ADBE Vector Group",
                      "it": [
                        {
                          "ty": "sh",
                          "nm": "Path 1",
                          "mn": "ADBE Vector Shape - Group",
                          "ind": 0,
                          "ks": {
                            "k": {
                              "i": [
                                [0.0, 0.0],
                                [0.0, 0.0],
                                [0.0, 0.0],
                                [2.041, 0.358],
                                [3.787, 0.642],
                                [1.19, 3.531],
                                [-2.69, 2.629],
                                [-3.939, -2.419],
                                [-0.595, 1.492],
                                [-8.887, 10.294],
                                [0.0, 0.0]
                              ],
                              "o": [
                                [0.0, 0.0],
                                [0.0, 0.0],
                                [-2.023, 0.872],
                                [-3.783, -0.664],
                                [-3.336, -0.565],
                                [-1.213, -3.598],
                                [3.306, -3.231],
                                [-0.703, -0.432],
                                [12.535, 5.595],
                                [0.0, 0.0],
                                [0.0, 0.0]
                              ],
                              "v": [
                                [97.258, 139.063],
                                [86.939, 144.482],
                                [55.518, 160.973],
                                [48.44, 160.602],
                                [37.126, 158.43],
                                [27.374, 155.196],
                                [30.012, 144.54],
                                [42.807, 143.106],
                                [51.885, 123.424],
                                [88.895, 107.483],
                                [91.26, 119.923]
                              ],
                              "c": true
                            },
                            "a": 0
                          }
                        },
                        {
                          "ty": "st",
                          "nm": "Stroke 1",
                          "bm": 0,
                          "mn": "ADBE Vector Graphic - Stroke",
                          "lc": 2,
                          "lj": 2,
                          "o": { "a": 0, "k": 100.0 },
                          "w": { "a": 0, "k": 0.684 },
                          "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] }
                        },
                        {
                          "ty": "fl",
                          "nm": "Fill 1",
                          "bm": 0,
                          "mn": "ADBE Vector Graphic - Fill",
                          "c": { "a": 0, "k": [1.0, 1.0, 1.0, 1.0] },
                          "o": { "a": 0, "k": 100.0 },
                          "r": 1
                        },
                        {
                          "ty": "tr",
                          "o": { "a": 0, "k": 100.0 },
                          "r": { "a": 0, "k": 0.0 },
                          "p": { "a": 0, "k": [0.0, 0.0] },
                          "a": { "a": 0, "k": [0.0, 0.0] },
                          "s": { "a": 0, "k": [100.0, 100.0] },
                          "nm": "Transform",
                          "sk": { "a": 0, "k": 0.0 },
                          "sa": { "a": 0, "k": 0.0 }
                        }
                      ]
                    },
                    {
                      "ty": "gr",
                      "nm": "Group 7",
                      "bm": 0,
                      "mn": "ADBE Vector Group",
                      "it": [
                        {
                          "ty": "sh",
                          "nm": "Path 1",
                          "mn": "ADBE Vector Shape - Group",
                          "ind": 0,
                          "ks": {
                            "k": {
                              "i": [
                                [0.0, 0.0],
                                [0.0, 0.0]
                              ],
                              "o": [
                                [0.03, 0.656],
                                [0.0, 0.0]
                              ],
                              "v": [
                                [57.986, 102.813],
                                [58.883, 126.819]
                              ],
                              "c": false
                            },
                            "a": 0
                          }
                        },
                        {
                          "ty": "st",
                          "nm": "Stroke 1",
                          "bm": 0,
                          "mn": "ADBE Vector Graphic - Stroke",
                          "lc": 2,
                          "lj": 2,
                          "o": { "a": 0, "k": 100.0 },
                          "w": { "a": 0, "k": 0.684 },
                          "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] }
                        },
                        {
                          "ty": "tr",
                          "o": { "a": 0, "k": 100.0 },
                          "r": { "a": 0, "k": 0.0 },
                          "p": { "a": 0, "k": [0.0, 0.0] },
                          "a": { "a": 0, "k": [0.0, 0.0] },
                          "s": { "a": 0, "k": [100.0, 100.0] },
                          "nm": "Transform",
                          "sk": { "a": 0, "k": 0.0 },
                          "sa": { "a": 0, "k": 0.0 }
                        }
                      ]
                    },
                    {
                      "ty": "gr",
                      "nm": "Group 8",
                      "bm": 0,
                      "mn": "ADBE Vector Group",
                      "it": [
                        {
                          "ty": "sh",
                          "nm": "Path 1",
                          "mn": "ADBE Vector Shape - Group",
                          "ind": 0,
                          "ks": {
                            "k": {
                              "i": [
                                [0.0, 0.0],
                                [0.0, 0.0]
                              ],
                              "o": [
                                [0.119, 0.646],
                                [0.0, 0.0]
                              ],
                              "v": [
                                [61.951, 100.616],
                                [66.133, 124.469]
                              ],
                              "c": false
                            },
                            "a": 0
                          }
                        },
                        {
                          "ty": "st",
                          "nm": "Stroke 1",
                          "bm": 0,
                          "mn": "ADBE Vector Graphic - Stroke",
                          "lc": 2,
                          "lj": 2,
                          "o": { "a": 0, "k": 100.0 },
                          "w": { "a": 0, "k": 0.684 },
                          "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] }
                        },
                        {
                          "ty": "tr",
                          "o": { "a": 0, "k": 100.0 },
                          "r": { "a": 0, "k": 0.0 },
                          "p": { "a": 0, "k": [0.0, 0.0] },
                          "a": { "a": 0, "k": [0.0, 0.0] },
                          "s": { "a": 0, "k": [100.0, 100.0] },
                          "nm": "Transform",
                          "sk": { "a": 0, "k": 0.0 },
                          "sa": { "a": 0, "k": 0.0 }
                        }
                      ]
                    },
                    {
                      "ty": "gr",
                      "nm": "Group 9",
                      "bm": 0,
                      "mn": "ADBE Vector Group",
                      "it": [
                        {
                          "ty": "sh",
                          "nm": "Path 1",
                          "mn": "ADBE Vector Shape - Group",
                          "ind": 0,
                          "ks": {
                            "k": {
                              "i": [
                                [0.0, 0.0],
                                [0.0, 0.0]
                              ],
                              "o": [
                                [0.119, 0.646],
                                [0.0, 0.0]
                              ],
                              "v": [
                                [66.638, 98.55],
                                [70.784, 122.196]
                              ],
                              "c": false
                            },
                            "a": 0
                          }
                        },
                        {
                          "ty": "st",
                          "nm": "Stroke 1",
                          "bm": 0,
                          "mn": "ADBE Vector Graphic - Stroke",
                          "lc": 2,
                          "lj": 2,
                          "o": { "a": 0, "k": 100.0 },
                          "w": { "a": 0, "k": 0.684 },
                          "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] }
                        },
                        {
                          "ty": "tr",
                          "o": { "a": 0, "k": 100.0 },
                          "r": { "a": 0, "k": 0.0 },
                          "p": { "a": 0, "k": [0.0, 0.0] },
                          "a": { "a": 0, "k": [0.0, 0.0] },
                          "s": { "a": 0, "k": [100.0, 100.0] },
                          "nm": "Transform",
                          "sk": { "a": 0, "k": 0.0 },
                          "sa": { "a": 0, "k": 0.0 }
                        }
                      ]
                    },
                    {
                      "ty": "gr",
                      "nm": "Group 10",
                      "bm": 0,
                      "mn": "ADBE Vector Group",
                      "it": [
                        {
                          "ty": "sh",
                          "nm": "Path 1",
                          "mn": "ADBE Vector Shape - Group",
                          "ind": 0,
                          "ks": {
                            "k": {
                              "i": [
                                [0.0, 0.0],
                                [0.0, 0.0]
                              ],
                              "o": [
                                [0.112, 0.605],
                                [0.0, 0.0]
                              ],
                              "v": [
                                [71.026, 96.12],
                                [75.02, 118.71]
                              ],
                              "c": false
                            },
                            "a": 0
                          }
                        },
                        {
                          "ty": "st",
                          "nm": "Stroke 1",
                          "bm": 0,
                          "mn": "ADBE Vector Graphic - Stroke",
                          "lc": 2,
                          "lj": 2,
                          "o": { "a": 0, "k": 100.0 },
                          "w": { "a": 0, "k": 0.684 },
                          "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] }
                        },
                        {
                          "ty": "tr",
                          "o": { "a": 0, "k": 100.0 },
                          "r": { "a": 0, "k": 0.0 },
                          "p": { "a": 0, "k": [0.0, 0.0] },
                          "a": { "a": 0, "k": [0.0, 0.0] },
                          "s": { "a": 0, "k": [100.0, 100.0] },
                          "nm": "Transform",
                          "sk": { "a": 0, "k": 0.0 },
                          "sa": { "a": 0, "k": 0.0 }
                        }
                      ]
                    },
                    {
                      "ty": "gr",
                      "nm": "Group 11",
                      "bm": 0,
                      "mn": "ADBE Vector Group",
                      "it": [
                        {
                          "ty": "sh",
                          "nm": "Path 1",
                          "mn": "ADBE Vector Shape - Group",
                          "ind": 0,
                          "ks": {
                            "k": {
                              "i": [
                                [0.0, 0.0],
                                [0.0, 0.0]
                              ],
                              "o": [
                                [0.112, 0.605],
                                [0.0, 0.0]
                              ],
                              "v": [
                                [75.432, 94.056],
                                [79.427, 116.647]
                              ],
                              "c": false
                            },
                            "a": 0
                          }
                        },
                        {
                          "ty": "st",
                          "nm": "Stroke 1",
                          "bm": 0,
                          "mn": "ADBE Vector Graphic - Stroke",
                          "lc": 2,
                          "lj": 2,
                          "o": { "a": 0, "k": 100.0 },
                          "w": { "a": 0, "k": 0.684 },
                          "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] }
                        },
                        {
                          "ty": "tr",
                          "o": { "a": 0, "k": 100.0 },
                          "r": { "a": 0, "k": 0.0 },
                          "p": { "a": 0, "k": [0.0, 0.0] },
                          "a": { "a": 0, "k": [0.0, 0.0] },
                          "s": { "a": 0, "k": [100.0, 100.0] },
                          "nm": "Transform",
                          "sk": { "a": 0, "k": 0.0 },
                          "sa": { "a": 0, "k": 0.0 }
                        }
                      ]
                    },
                    {
                      "ty": "gr",
                      "nm": "Group 12",
                      "bm": 0,
                      "mn": "ADBE Vector Group",
                      "it": [
                        {
                          "ty": "sh",
                          "nm": "Path 1",
                          "mn": "ADBE Vector Shape - Group",
                          "ind": 0,
                          "ks": {
                            "k": {
                              "i": [
                                [0.0, 0.0],
                                [0.0, 0.0]
                              ],
                              "o": [
                                [0.0, 0.0],
                                [0.0, 0.0]
                              ],
                              "v": [
                                [78.983, 92.363],
                                [83.447, 115.18]
                              ],
                              "c": false
                            },
                            "a": 0
                          }
                        },
                        {
                          "ty": "st",
                          "nm": "Stroke 1",
                          "bm": 0,
                          "mn": "ADBE Vector Graphic - Stroke",
                          "lc": 2,
                          "lj": 2,
                          "o": { "a": 0, "k": 100.0 },
                          "w": { "a": 0, "k": 0.684 },
                          "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] }
                        },
                        {
                          "ty": "tr",
                          "o": { "a": 0, "k": 100.0 },
                          "r": { "a": 0, "k": 0.0 },
                          "p": { "a": 0, "k": [0.0, 0.0] },
                          "a": { "a": 0, "k": [0.0, 0.0] },
                          "s": { "a": 0, "k": [100.0, 100.0] },
                          "nm": "Transform",
                          "sk": { "a": 0, "k": 0.0 },
                          "sa": { "a": 0, "k": 0.0 }
                        }
                      ]
                    },
                    {
                      "ty": "gr",
                      "nm": "Group 13",
                      "bm": 0,
                      "mn": "ADBE Vector Group",
                      "it": [
                        {
                          "ty": "sh",
                          "nm": "Path 1",
                          "mn": "ADBE Vector Shape - Group",
                          "ind": 0,
                          "ks": {
                            "k": {
                              "i": [
                                [0.0, 0.0],
                                [0.177, -0.057],
                                [12.903, 8.164],
                                [0.0, 0.0],
                                [-8.843, 4.327]
                              ],
                              "o": [
                                [-0.17, 0.059],
                                [-8.63, 10.689],
                                [0.0, 0.0],
                                [8.841, -4.332],
                                [0.0, 0.0]
                              ],
                              "v": [
                                [88.612, 108.452],
                                [88.612, 108.452],
                                [51.885, 123.424],
                                [56.784, 103.027],
                                [83.31, 90.041]
                              ],
                              "c": true
                            },
                            "a": 0
                          }
                        },
                        {
                          "ty": "st",
                          "nm": "Stroke 1",
                          "bm": 0,
                          "mn": "ADBE Vector Graphic - Stroke",
                          "lc": 2,
                          "lj": 2,
                          "o": { "a": 0, "k": 100.0 },
                          "w": { "a": 0, "k": 0.684 },
                          "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] }
                        },
                        {
                          "ty": "fl",
                          "nm": "Fill 1",
                          "bm": 0,
                          "mn": "ADBE Vector Graphic - Fill",
                          "c": { "a": 0, "k": [1.0, 1.0, 1.0, 1.0] },
                          "o": { "a": 0, "k": 100.0 },
                          "r": 1
                        },
                        {
                          "ty": "tr",
                          "o": { "a": 0, "k": 100.0 },
                          "r": { "a": 0, "k": 0.0 },
                          "p": { "a": 0, "k": [0.0, 0.0] },
                          "a": { "a": 0, "k": [0.0, 0.0] },
                          "s": { "a": 0, "k": [100.0, 100.0] },
                          "nm": "Transform",
                          "sk": { "a": 0, "k": 0.0 },
                          "sa": { "a": 0, "k": 0.0 }
                        }
                      ]
                    },
                    {
                      "ty": "gr",
                      "nm": "Group 14",
                      "bm": 0,
                      "mn": "ADBE Vector Group",
                      "it": [
                        {
                          "ty": "sh",
                          "nm": "Path 1",
                          "mn": "ADBE Vector Shape - Group",
                          "ind": 0,
                          "ks": {
                            "k": {
                              "i": [
                                [-0.88, -2.116],
                                [0.0, 0.0],
                                [1.755, -0.93],
                                [0.0, 0.0],
                                [0.564, -0.005],
                                [0.0, 0.0],
                                [-0.082, 2.09],
                                [0.0, 0.0],
                                [-1.745, 0.188],
                                [-0.469, 0.084],
                                [-9.925, 5.03]
                              ],
                              "o": [
                                [0.0, 0.0],
                                [0.779, 1.873],
                                [0.0, 0.0],
                                [-0.496, 0.263],
                                [0.0, 0.0],
                                [-2.071, 0.019],
                                [0.0, 0.0],
                                [0.07, -1.776],
                                [8.259, -0.887],
                                [0.467, -0.084],
                                [2.002, -1.015]
                              ],
                              "v": [
                                [101.804, 141.326],
                                [101.804, 141.326],
                                [100.082, 146.268],
                                [59.584, 167.724],
                                [57.972, 168.131],
                                [30.571, 163.09],
                                [26.897, 159.263],
                                [26.897, 159.263],
                                [30.044, 155.867],
                                [59.635, 157.777],
                                [96.458, 139.283]
                              ],
                              "c": true
                            },
                            "a": 0
                          }
                        },
                        {
                          "ty": "fl",
                          "nm": "Fill 1",
                          "bm": 0,
                          "mn": "ADBE Vector Graphic - Fill",
                          "c": {
                            "a": 0,
                            "k": [0.015686275437, 0.011764706112, 0.003921568859, 1.0]
                          },
                          "o": { "a": 0, "k": 100.0 },
                          "r": 1
                        },
                        {
                          "ty": "tr",
                          "o": { "a": 0, "k": 100.0 },
                          "r": { "a": 0, "k": 0.0 },
                          "p": { "a": 0, "k": [0.0, 0.0] },
                          "a": { "a": 0, "k": [0.0, 0.0] },
                          "s": { "a": 0, "k": [100.0, 100.0] },
                          "nm": "Transform",
                          "sk": { "a": 0, "k": 0.0 },
                          "sa": { "a": 0, "k": 0.0 }
                        }
                      ]
                    },
                    {
                      "ty": "gr",
                      "nm": "Group 15",
                      "bm": 0,
                      "mn": "ADBE Vector Group",
                      "it": [
                        {
                          "ty": "sh",
                          "nm": "Path 1",
                          "mn": "ADBE Vector Shape - Group",
                          "ind": 0,
                          "ks": {
                            "k": {
                              "i": [
                                [0.0, 0.0],
                                [9.04, -1.775],
                                [0.0, 0.0],
                                [0.0, 0.0],
                                [0.0, 0.0]
                              ],
                              "o": [
                                [-9.134, 1.242],
                                [0.0, 0.0],
                                [0.0, 0.0],
                                [0.0, 0.0],
                                [0.0, 0.0]
                              ],
                              "v": [
                                [82.221, 55.265],
                                [54.897, 59.427],
                                [56.784, 103.027],
                                [83.31, 90.041],
                                [82.459, 56.59]
                              ],
                              "c": true
                            },
                            "a": 0
                          }
                        },
                        {
                          "ty": "st",
                          "nm": "Stroke 1",
                          "bm": 0,
                          "mn": "ADBE Vector Graphic - Stroke",
                          "lc": 2,
                          "lj": 2,
                          "o": { "a": 0, "k": 100.0 },
                          "w": { "a": 0, "k": 0.684 },
                          "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] }
                        },
                        {
                          "ty": "fl",
                          "nm": "Fill 1",
                          "bm": 0,
                          "mn": "ADBE Vector Graphic - Fill",
                          "c": { "a": 0, "k": [1.0, 1.0, 1.0, 1.0] },
                          "o": { "a": 0, "k": 100.0 },
                          "r": 1
                        },
                        {
                          "ty": "tr",
                          "o": { "a": 0, "k": 100.0 },
                          "r": { "a": 0, "k": 0.0 },
                          "p": { "a": 0, "k": [0.0, 0.0] },
                          "a": { "a": 0, "k": [0.0, 0.0] },
                          "s": { "a": 0, "k": [100.0, 100.0] },
                          "nm": "Transform",
                          "sk": { "a": 0, "k": 0.0 },
                          "sa": { "a": 0, "k": 0.0 }
                        }
                      ]
                    },
                    {
                      "ty": "tr",
                      "o": { "a": 0, "k": 100.0 },
                      "r": { "a": 0, "k": 0.0 },
                      "p": { "a": 0, "k": [0.0, 0.0] },
                      "a": { "a": 0, "k": [0.0, 0.0] },
                      "s": { "a": 0, "k": [100.0, 100.0] },
                      "nm": "Transform",
                      "sk": { "a": 0, "k": 0.0 },
                      "sa": { "a": 0, "k": 0.0 }
                    }
                  ]
                },
                {
                  "ty": "gr",
                  "nm": "Group 13",
                  "bm": 0,
                  "mn": "ADBE Vector Group",
                  "it": [
                    {
                      "ty": "sh",
                      "nm": "Path 1",
                      "mn": "ADBE Vector Shape - Group",
                      "ind": 0,
                      "ks": {
                        "k": {
                          "i": [
                            [0.046, 0.136],
                            [3.333, 0.497],
                            [8.906, -2.054],
                            [10.761, -6.898],
                            [0.016, -0.204],
                            [-2.313, 0.284],
                            [-8.855, 3.535],
                            [0.12, 0.365]
                          ],
                          "o": [
                            [-3.17, -1.168],
                            [-9.04, -1.348],
                            [-12.455, 2.873],
                            [-0.017, 0.204],
                            [-0.122, 1.585],
                            [9.463, -1.16],
                            [1.528, -0.61],
                            [-0.046, -0.136]
                          ],
                          "v": [
                            [102.475, 65.953],
                            [92.669, 63.46],
                            [65.461, 65.119],
                            [30.292, 79.926],
                            [30.233, 80.538],
                            [58.181, 80.701],
                            [85.813, 73.627],
                            [102.614, 66.361]
                          ],
                          "c": true
                        },
                        "a": 0
                      }
                    },
                    {
                      "ty": "fl",
                      "nm": "Fill 1",
                      "bm": 0,
                      "mn": "ADBE Vector Graphic - Fill",
                      "c": { "a": 0, "k": [0.015686275437, 0.011764706112, 0.003921568859, 1.0] },
                      "o": { "a": 0, "k": 100.0 },
                      "r": 1
                    },
                    {
                      "ty": "tr",
                      "o": { "a": 0, "k": 100.0 },
                      "r": { "a": 0, "k": 0.0 },
                      "p": { "a": 0, "k": [0.0, 0.0] },
                      "a": { "a": 0, "k": [0.0, 0.0] },
                      "s": { "a": 0, "k": [100.0, 100.0] },
                      "nm": "Transform",
                      "sk": { "a": 0, "k": 0.0 },
                      "sa": { "a": 0, "k": 0.0 }
                    }
                  ]
                },
                {
                  "ty": "gr",
                  "nm": "Group 14",
                  "bm": 0,
                  "mn": "ADBE Vector Group",
                  "it": [
                    {
                      "ty": "gr",
                      "nm": "Group 1",
                      "bm": 0,
                      "mn": "ADBE Vector Group",
                      "it": [
                        {
                          "ty": "sh",
                          "nm": "Path 1",
                          "mn": "ADBE Vector Shape - Group",
                          "ind": 0,
                          "ks": {
                            "k": {
                              "i": [
                                [0.0, 0.0],
                                [2.37, -2.268],
                                [7.453, -15.239]
                              ],
                              "o": [
                                [-3.279, 0.076],
                                [-12.256, 11.729],
                                [0.0, 0.0]
                              ],
                              "v": [
                                [52.636, -8.625],
                                [44.236, -3.966],
                                [14.362, 36.911]
                              ],
                              "c": false
                            },
                            "a": 0
                          }
                        },
                        {
                          "ty": "st",
                          "nm": "Stroke 1",
                          "bm": 0,
                          "mn": "ADBE Vector Graphic - Stroke",
                          "lc": 2,
                          "lj": 2,
                          "o": { "a": 0, "k": 100.0 },
                          "w": { "a": 0, "k": 0.684 },
                          "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] }
                        },
                        {
                          "ty": "tr",
                          "o": { "a": 0, "k": 100.0 },
                          "r": { "a": 0, "k": 0.0 },
                          "p": { "a": 0, "k": [0.0, 0.0] },
                          "a": { "a": 0, "k": [0.0, 0.0] },
                          "s": { "a": 0, "k": [100.0, 100.0] },
                          "nm": "Transform",
                          "sk": { "a": 0, "k": 0.0 },
                          "sa": { "a": 0, "k": 0.0 }
                        }
                      ]
                    },
                    {
                      "ty": "gr",
                      "nm": "Group 2",
                      "bm": 0,
                      "mn": "ADBE Vector Group",
                      "it": [
                        {
                          "ty": "sh",
                          "nm": "Path 1",
                          "mn": "ADBE Vector Shape - Group",
                          "ind": 0,
                          "ks": {
                            "k": {
                              "i": [
                                [0.0, 0.0],
                                [0.0, 0.0]
                              ],
                              "o": [
                                [0.0, 0.0],
                                [0.0, 0.0]
                              ],
                              "v": [
                                [-0.774, 102.688],
                                [-0.958, 102.605]
                              ],
                              "c": false
                            },
                            "a": 0
                          }
                        },
                        {
                          "ty": "st",
                          "nm": "Stroke 1",
                          "bm": 0,
                          "mn": "ADBE Vector Graphic - Stroke",
                          "lc": 2,
                          "lj": 2,
                          "o": { "a": 0, "k": 100.0 },
                          "w": { "a": 0, "k": 0.684 },
                          "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] }
                        },
                        {
                          "ty": "fl",
                          "nm": "Fill 1",
                          "bm": 0,
                          "mn": "ADBE Vector Graphic - Fill",
                          "c": { "a": 0, "k": [1.0, 1.0, 1.0, 1.0] },
                          "o": { "a": 0, "k": 100.0 },
                          "r": 1
                        },
                        {
                          "ty": "tr",
                          "o": { "a": 0, "k": 100.0 },
                          "r": { "a": 0, "k": 0.0 },
                          "p": { "a": 0, "k": [0.0, 0.0] },
                          "a": { "a": 0, "k": [0.0, 0.0] },
                          "s": { "a": 0, "k": [100.0, 100.0] },
                          "nm": "Transform",
                          "sk": { "a": 0, "k": 0.0 },
                          "sa": { "a": 0, "k": 0.0 }
                        }
                      ]
                    },
                    {
                      "ty": "gr",
                      "nm": "Group 3",
                      "bm": 0,
                      "mn": "ADBE Vector Group",
                      "it": [
                        {
                          "ty": "sh",
                          "nm": "Path 1",
                          "mn": "ADBE Vector Shape - Group",
                          "ind": 0,
                          "ks": {
                            "k": {
                              "i": [
                                [1.334, -5.594],
                                [2.556, 2.189],
                                [8.637, 2.997],
                                [12.781, -0.125],
                                [-4.187, 4.354],
                                [-11.001, -4.645],
                                [-7.182, -7.753]
                              ],
                              "o": [
                                [-2.062, -2.677],
                                [-6.94, -5.951],
                                [-12.071, -4.189],
                                [3.612, -4.836],
                                [11.9, -0.949],
                                [9.724, 4.109],
                                [-1.306, 5.508]
                              ],
                              "v": [
                                [34.712, 70.985],
                                [27.735, 63.663],
                                [3.802, 50.602],
                                [-33.852, 44.446],
                                [-22.136, 30.641],
                                [12.897, 36.243],
                                [38.613, 54.332]
                              ],
                              "c": true
                            },
                            "a": 0
                          }
                        },
                        {
                          "ty": "st",
                          "nm": "Stroke 1",
                          "bm": 0,
                          "mn": "ADBE Vector Graphic - Stroke",
                          "lc": 2,
                          "lj": 2,
                          "o": { "a": 0, "k": 100.0 },
                          "w": { "a": 0, "k": 0.684 },
                          "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] }
                        },
                        {
                          "ty": "tr",
                          "o": { "a": 0, "k": 100.0 },
                          "r": { "a": 0, "k": 0.0 },
                          "p": { "a": 0, "k": [0.0, 0.0] },
                          "a": { "a": 0, "k": [0.0, 0.0] },
                          "s": { "a": 0, "k": [100.0, 100.0] },
                          "nm": "Transform",
                          "sk": { "a": 0, "k": 0.0 },
                          "sa": { "a": 0, "k": 0.0 }
                        }
                      ]
                    },
                    {
                      "ty": "gr",
                      "nm": "Group 4",
                      "bm": 0,
                      "mn": "ADBE Vector Group",
                      "it": [
                        {
                          "ty": "sh",
                          "nm": "Path 1",
                          "mn": "ADBE Vector Shape - Group",
                          "ind": 0,
                          "ks": {
                            "k": {
                              "i": [
                                [1.334, -5.594],
                                [2.556, 2.189],
                                [8.637, 2.997],
                                [12.781, -0.125],
                                [-4.187, 4.354],
                                [-6.077, 4.615],
                                [-8.547, 5.773],
                                [-7.592, 4.031],
                                [-8.679, 0.274],
                                [-9.904, 0.313],
                                [-0.508, -0.519],
                                [0.17, -0.815],
                                [3.706, -4.88],
                                [1.434, -2.351],
                                [2.133, -1.31],
                                [1.265, -0.155],
                                [5.394, -0.659],
                                [2.534, -0.465],
                                [1.031, -2.025],
                                [0.834, -2.226],
                                [2.696, -11.392]
                              ],
                              "o": [
                                [-2.062, -2.677],
                                [-6.94, -5.951],
                                [-12.071, -4.189],
                                [3.612, -4.836],
                                [5.287, -5.505],
                                [8.204, -6.229],
                                [7.043, -4.757],
                                [7.626, -4.049],
                                [9.904, -0.313],
                                [0.725, -0.023],
                                [0.582, 0.595],
                                [-1.251, 5.999],
                                [-1.665, 2.193],
                                [-1.255, 2.058],
                                [-1.086, 0.667],
                                [-5.394, 0.659],
                                [-2.561, 0.313],
                                [-2.022, 0.371],
                                [-1.089, 2.117],
                                [-4.172, 11.169],
                                [-1.306, 5.508]
                              ],
                              "v": [
                                [34.712, 70.985],
                                [27.735, 63.663],
                                [3.802, 50.602],
                                [-33.852, 44.446],
                                [-22.136, 30.641],
                                [-5.056, 15.436],
                                [19.43, -3.418],
                                [40.336, -17.956],
                                [65.087, -25.044],
                                [94.799, -25.982],
                                [96.849, -25.474],
                                [97.156, -23.1],
                                [89.596, -6.508],
                                [84.608, 0.071],
                                [81.757, 6.694],
                                [78.097, 7.685],
                                [61.916, 9.662],
                                [54.174, 10.589],
                                [50.953, 13.739],
                                [48.374, 20.532],
                                [38.613, 54.332]
                              ],
                              "c": true
                            },
                            "a": 0
                          }
                        },
                        {
                          "ty": "st",
                          "nm": "Stroke 1",
                          "bm": 0,
                          "mn": "ADBE Vector Graphic - Stroke",
                          "lc": 2,
                          "lj": 2,
                          "o": { "a": 0, "k": 100.0 },
                          "w": { "a": 0, "k": 0.684 },
                          "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] }
                        },
                        {
                          "ty": "fl",
                          "nm": "Fill 1",
                          "bm": 0,
                          "mn": "ADBE Vector Graphic - Fill",
                          "c": { "a": 0, "k": [1.0, 1.0, 1.0, 1.0] },
                          "o": { "a": 0, "k": 100.0 },
                          "r": 1
                        },
                        {
                          "ty": "tr",
                          "o": { "a": 0, "k": 100.0 },
                          "r": { "a": 0, "k": 0.0 },
                          "p": { "a": 0, "k": [0.0, 0.0] },
                          "a": { "a": 0, "k": [0.0, 0.0] },
                          "s": { "a": 0, "k": [100.0, 100.0] },
                          "nm": "Transform",
                          "sk": { "a": 0, "k": 0.0 },
                          "sa": { "a": 0, "k": 0.0 }
                        }
                      ]
                    },
                    {
                      "ty": "gr",
                      "nm": "Group 5",
                      "bm": 0,
                      "mn": "ADBE Vector Group",
                      "it": [
                        {
                          "ty": "sh",
                          "nm": "Path 1",
                          "mn": "ADBE Vector Shape - Group",
                          "ind": 0,
                          "ks": {
                            "k": {
                              "i": [
                                [0.0, 0.0],
                                [-0.771, -0.66],
                                [3.688, 0.589]
                              ],
                              "o": [
                                [0.814, 0.599],
                                [-3.645, -0.801],
                                [0.0, 0.0]
                              ],
                              "v": [
                                [-14.613, 44.048],
                                [-12.239, 45.935],
                                [-23.245, 43.854]
                              ],
                              "c": true
                            },
                            "a": 0
                          }
                        },
                        {
                          "ty": "fl",
                          "nm": "Fill 1",
                          "bm": 0,
                          "mn": "ADBE Vector Graphic - Fill",
                          "c": {
                            "a": 0,
                            "k": [0.015686275437, 0.011764706112, 0.003921568859, 1.0]
                          },
                          "o": { "a": 0, "k": 100.0 },
                          "r": 1
                        },
                        {
                          "ty": "tr",
                          "o": { "a": 0, "k": 100.0 },
                          "r": { "a": 0, "k": 0.0 },
                          "p": { "a": 0, "k": [0.0, 0.0] },
                          "a": { "a": 0, "k": [0.0, 0.0] },
                          "s": { "a": 0, "k": [100.0, 100.0] },
                          "nm": "Transform",
                          "sk": { "a": 0, "k": 0.0 },
                          "sa": { "a": 0, "k": 0.0 }
                        }
                      ]
                    },
                    {
                      "ty": "gr",
                      "nm": "Group 6",
                      "bm": 0,
                      "mn": "ADBE Vector Group",
                      "it": [
                        {
                          "ty": "gr",
                          "nm": "Group 1",
                          "bm": 0,
                          "mn": "ADBE Vector Group",
                          "it": [
                            {
                              "ty": "sh",
                              "nm": "Path 1",
                              "mn": "ADBE Vector Shape - Group",
                              "ind": 0,
                              "ks": {
                                "k": {
                                  "i": [
                                    [0.0, 0.0],
                                    [0.153, -2.623]
                                  ],
                                  "o": [
                                    [2.187, 1.455],
                                    [0.0, 0.0]
                                  ],
                                  "v": [
                                    [-49.624, 102.798],
                                    [-46.262, 109.536]
                                  ],
                                  "c": false
                                },
                                "a": 0
                              }
                            },
                            {
                              "ty": "st",
                              "nm": "Stroke 1",
                              "bm": 0,
                              "mn": "ADBE Vector Graphic - Stroke",
                              "lc": 2,
                              "lj": 2,
                              "o": { "a": 0, "k": 100.0 },
                              "w": { "a": 0, "k": 0.684 },
                              "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] }
                            },
                            {
                              "ty": "tr",
                              "o": { "a": 0, "k": 100.0 },
                              "r": { "a": 0, "k": 0.0 },
                              "p": { "a": 0, "k": [0.0, 0.0] },
                              "a": { "a": 0, "k": [0.0, 0.0] },
                              "s": { "a": 0, "k": [100.0, 100.0] },
                              "nm": "Transform",
                              "sk": { "a": 0, "k": 0.0 },
                              "sa": { "a": 0, "k": 0.0 }
                            }
                          ]
                        },
                        {
                          "ty": "gr",
                          "nm": "Group 2",
                          "bm": 0,
                          "mn": "ADBE Vector Group",
                          "it": [
                            {
                              "ty": "sh",
                              "nm": "Path 1",
                              "mn": "ADBE Vector Shape - Group",
                              "ind": 0,
                              "ks": {
                                "k": {
                                  "i": [
                                    [0.0, 0.0],
                                    [0.075, -2.745]
                                  ],
                                  "o": [
                                    [2.39, 1.353],
                                    [0.0, 0.0]
                                  ],
                                  "v": [
                                    [-43.768, 99.641],
                                    [-40.122, 106.094]
                                  ],
                                  "c": false
                                },
                                "a": 0
                              }
                            },
                            {
                              "ty": "st",
                              "nm": "Stroke 1",
                              "bm": 0,
                              "mn": "ADBE Vector Graphic - Stroke",
                              "lc": 2,
                              "lj": 2,
                              "o": { "a": 0, "k": 100.0 },
                              "w": { "a": 0, "k": 0.684 },
                              "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] }
                            },
                            {
                              "ty": "tr",
                              "o": { "a": 0, "k": 100.0 },
                              "r": { "a": 0, "k": 0.0 },
                              "p": { "a": 0, "k": [0.0, 0.0] },
                              "a": { "a": 0, "k": [0.0, 0.0] },
                              "s": { "a": 0, "k": [100.0, 100.0] },
                              "nm": "Transform",
                              "sk": { "a": 0, "k": 0.0 },
                              "sa": { "a": 0, "k": 0.0 }
                            }
                          ]
                        },
                        {
                          "ty": "gr",
                          "nm": "Group 3",
                          "bm": 0,
                          "mn": "ADBE Vector Group",
                          "it": [
                            {
                              "ty": "sh",
                              "nm": "Path 1",
                              "mn": "ADBE Vector Shape - Group",
                              "ind": 0,
                              "ks": {
                                "k": {
                                  "i": [
                                    [0.0, 0.0],
                                    [3.377, -1.949],
                                    [4.784, -2.545],
                                    [-0.21, 0.101]
                                  ],
                                  "o": [
                                    [-3.377, 1.949],
                                    [-4.784, 2.545],
                                    [0.21, -0.101],
                                    [0.0, 0.0]
                                  ],
                                  "v": [
                                    [-32.019, 101.905],
                                    [-42.148, 107.752],
                                    [-56.501, 115.388],
                                    [-55.87, 115.086]
                                  ],
                                  "c": false
                                },
                                "a": 0
                              }
                            },
                            {
                              "ty": "st",
                              "nm": "Stroke 1",
                              "bm": 0,
                              "mn": "ADBE Vector Graphic - Stroke",
                              "lc": 2,
                              "lj": 2,
                              "o": { "a": 0, "k": 100.0 },
                              "w": { "a": 0, "k": 0.684 },
                              "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] }
                            },
                            {
                              "ty": "tr",
                              "o": { "a": 0, "k": 100.0 },
                              "r": { "a": 0, "k": 0.0 },
                              "p": { "a": 0, "k": [0.0, 0.0] },
                              "a": { "a": 0, "k": [0.0, 0.0] },
                              "s": { "a": 0, "k": [100.0, 100.0] },
                              "nm": "Transform",
                              "sk": { "a": 0, "k": 0.0 },
                              "sa": { "a": 0, "k": 0.0 }
                            }
                          ]
                        },
                        {
                          "ty": "gr",
                          "nm": "Group 4",
                          "bm": 0,
                          "mn": "ADBE Vector Group",
                          "it": [
                            {
                              "ty": "sh",
                              "nm": "Path 1",
                              "mn": "ADBE Vector Shape - Group",
                              "ind": 0,
                              "ks": {
                                "k": {
                                  "i": [
                                    [0.0, 0.0],
                                    [5.247, -5.433]
                                  ],
                                  "o": [
                                    [2.639, 7.077],
                                    [0.0, 0.0]
                                  ],
                                  "v": [
                                    [-57.646, 106.84],
                                    [-62.031, 127.87]
                                  ],
                                  "c": false
                                },
                                "a": 0
                              }
                            },
                            {
                              "ty": "st",
                              "nm": "Stroke 1",
                              "bm": 0,
                              "mn": "ADBE Vector Graphic - Stroke",
                              "lc": 2,
                              "lj": 2,
                              "o": { "a": 0, "k": 100.0 },
                              "w": { "a": 0, "k": 0.684 },
                              "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] }
                            },
                            {
                              "ty": "tr",
                              "o": { "a": 0, "k": 100.0 },
                              "r": { "a": 0, "k": 0.0 },
                              "p": { "a": 0, "k": [0.0, 0.0] },
                              "a": { "a": 0, "k": [0.0, 0.0] },
                              "s": { "a": 0, "k": [100.0, 100.0] },
                              "nm": "Transform",
                              "sk": { "a": 0, "k": 0.0 },
                              "sa": { "a": 0, "k": 0.0 }
                            }
                          ]
                        },
                        {
                          "ty": "gr",
                          "nm": "Group 5",
                          "bm": 0,
                          "mn": "ADBE Vector Group",
                          "it": [
                            {
                              "ty": "sh",
                              "nm": "Path 1",
                              "mn": "ADBE Vector Shape - Group",
                              "ind": 0,
                              "ks": {
                                "k": {
                                  "i": [
                                    [0.0, 0.0],
                                    [0.0, 0.0],
                                    [-3.649, 3.523],
                                    [-4.541, -0.128]
                                  ],
                                  "o": [
                                    [0.0, 0.0],
                                    [-1.083, -4.92],
                                    [3.268, -3.147],
                                    [0.0, 0.0]
                                  ],
                                  "v": [
                                    [-8.54, 133.304],
                                    [-20.16, 132.408],
                                    [-15.85, 118.51],
                                    [-3.444, 113.904]
                                  ],
                                  "c": true
                                },
                                "a": 0
                              }
                            },
                            {
                              "ty": "fl",
                              "nm": "Fill 1",
                              "bm": 0,
                              "mn": "ADBE Vector Graphic - Fill",
                              "c": {
                                "a": 0,
                                "k": [0.015686275437, 0.011764706112, 0.003921568859, 1.0]
                              },
                              "o": { "a": 0, "k": 100.0 },
                              "r": 1
                            },
                            {
                              "ty": "tr",
                              "o": { "a": 0, "k": 100.0 },
                              "r": { "a": 0, "k": 0.0 },
                              "p": { "a": 0, "k": [0.0, 0.0] },
                              "a": { "a": 0, "k": [0.0, 0.0] },
                              "s": { "a": 0, "k": [100.0, 100.0] },
                              "nm": "Transform",
                              "sk": { "a": 0, "k": 0.0 },
                              "sa": { "a": 0, "k": 0.0 }
                            }
                          ]
                        },
                        {
                          "ty": "gr",
                          "nm": "Group 6",
                          "bm": 0,
                          "mn": "ADBE Vector Group",
                          "it": [
                            {
                              "ty": "sh",
                              "nm": "Path 1",
                              "mn": "ADBE Vector Shape - Group",
                              "ind": 0,
                              "ks": {
                                "k": {
                                  "i": [
                                    [0.0, 0.0],
                                    [0.0, 0.0],
                                    [0.0, 0.0],
                                    [8.582, 5.288],
                                    [-4.131, 2.213],
                                    [-3.893, -2.614],
                                    [-9.658, 7.048],
                                    [-12.999, 3.994],
                                    [0.0, 0.0]
                                  ],
                                  "o": [
                                    [0.0, 0.0],
                                    [0.0, 0.0],
                                    [-3.655, -0.565],
                                    [1.146, -4.548],
                                    [4.674, -2.501],
                                    [10.137, -6.26],
                                    [7.642, 11.403],
                                    [0.0, 0.0],
                                    [0.0, 0.0]
                                  ],
                                  "v": [
                                    [-8.54, 133.304],
                                    [-20.16, 132.408],
                                    [-55.54, 129.671],
                                    [-81.751, 115.353],
                                    [-74.349, 106.694],
                                    [-57.17, 107.142],
                                    [-38.655, 95.936],
                                    [0.002, 100.799],
                                    [-3.444, 113.904]
                                  ],
                                  "c": true
                                },
                                "a": 0
                              }
                            },
                            {
                              "ty": "st",
                              "nm": "Stroke 1",
                              "bm": 0,
                              "mn": "ADBE Vector Graphic - Stroke",
                              "lc": 2,
                              "lj": 2,
                              "o": { "a": 0, "k": 100.0 },
                              "w": { "a": 0, "k": 0.684 },
                              "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] }
                            },
                            {
                              "ty": "fl",
                              "nm": "Fill 1",
                              "bm": 0,
                              "mn": "ADBE Vector Graphic - Fill",
                              "c": { "a": 0, "k": [1.0, 1.0, 1.0, 1.0] },
                              "o": { "a": 0, "k": 100.0 },
                              "r": 1
                            },
                            {
                              "ty": "tr",
                              "o": { "a": 0, "k": 100.0 },
                              "r": { "a": 0, "k": 0.0 },
                              "p": { "a": 0, "k": [0.0, 0.0] },
                              "a": { "a": 0, "k": [0.0, 0.0] },
                              "s": { "a": 0, "k": [100.0, 100.0] },
                              "nm": "Transform",
                              "sk": { "a": 0, "k": 0.0 },
                              "sa": { "a": 0, "k": 0.0 }
                            }
                          ]
                        },
                        {
                          "ty": "gr",
                          "nm": "Group 7",
                          "bm": 0,
                          "mn": "ADBE Vector Group",
                          "it": [
                            {
                              "ty": "sh",
                              "nm": "Path 1",
                              "mn": "ADBE Vector Shape - Group",
                              "ind": 0,
                              "ks": {
                                "k": {
                                  "i": [
                                    [0.0, 0.0],
                                    [0.0, 0.0]
                                  ],
                                  "o": [
                                    [-0.323, 0.571],
                                    [0.0, 0.0]
                                  ],
                                  "v": [
                                    [-23.899, 81.547],
                                    [-35.901, 102.356]
                                  ],
                                  "c": false
                                },
                                "a": 0
                              }
                            },
                            {
                              "ty": "st",
                              "nm": "Stroke 1",
                              "bm": 0,
                              "mn": "ADBE Vector Graphic - Stroke",
                              "lc": 2,
                              "lj": 2,
                              "o": { "a": 0, "k": 100.0 },
                              "w": { "a": 0, "k": 0.684 },
                              "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] }
                            },
                            {
                              "ty": "tr",
                              "o": { "a": 0, "k": 100.0 },
                              "r": { "a": 0, "k": 0.0 },
                              "p": { "a": 0, "k": [0.0, 0.0] },
                              "a": { "a": 0, "k": [0.0, 0.0] },
                              "s": { "a": 0, "k": [100.0, 100.0] },
                              "nm": "Transform",
                              "sk": { "a": 0, "k": 0.0 },
                              "sa": { "a": 0, "k": 0.0 }
                            }
                          ]
                        },
                        {
                          "ty": "gr",
                          "nm": "Group 8",
                          "bm": 0,
                          "mn": "ADBE Vector Group",
                          "it": [
                            {
                              "ty": "sh",
                              "nm": "Path 1",
                              "mn": "ADBE Vector Shape - Group",
                              "ind": 0,
                              "ks": {
                                "k": {
                                  "i": [
                                    [0.0, 0.0],
                                    [0.0, 0.0]
                                  ],
                                  "o": [
                                    [-0.243, 0.61],
                                    [0.0, 0.0]
                                  ],
                                  "v": [
                                    [-19.373, 81.794],
                                    [-28.512, 104.221]
                                  ],
                                  "c": false
                                },
                                "a": 0
                              }
                            },
                            {
                              "ty": "st",
                              "nm": "Stroke 1",
                              "bm": 0,
                              "mn": "ADBE Vector Graphic - Stroke",
                              "lc": 2,
                              "lj": 2,
                              "o": { "a": 0, "k": 100.0 },
                              "w": { "a": 0, "k": 0.684 },
                              "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] }
                            },
                            {
                              "ty": "tr",
                              "o": { "a": 0, "k": 100.0 },
                              "r": { "a": 0, "k": 0.0 },
                              "p": { "a": 0, "k": [0.0, 0.0] },
                              "a": { "a": 0, "k": [0.0, 0.0] },
                              "s": { "a": 0, "k": [100.0, 100.0] },
                              "nm": "Transform",
                              "sk": { "a": 0, "k": 0.0 },
                              "sa": { "a": 0, "k": 0.0 }
                            }
                          ]
                        },
                        {
                          "ty": "gr",
                          "nm": "Group 9",
                          "bm": 0,
                          "mn": "ADBE Vector Group",
                          "it": [
                            {
                              "ty": "sh",
                              "nm": "Path 1",
                              "mn": "ADBE Vector Shape - Group",
                              "ind": 0,
                              "ks": {
                                "k": {
                                  "i": [
                                    [0.0, 0.0],
                                    [0.0, 0.0]
                                  ],
                                  "o": [
                                    [-0.243, 0.61],
                                    [0.0, 0.0]
                                  ],
                                  "v": [
                                    [-14.305, 82.536],
                                    [-23.364, 104.768]
                                  ],
                                  "c": false
                                },
                                "a": 0
                              }
                            },
                            {
                              "ty": "st",
                              "nm": "Stroke 1",
                              "bm": 0,
                              "mn": "ADBE Vector Graphic - Stroke",
                              "lc": 2,
                              "lj": 2,
                              "o": { "a": 0, "k": 100.0 },
                              "w": { "a": 0, "k": 0.684 },
                              "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] }
                            },
                            {
                              "ty": "tr",
                              "o": { "a": 0, "k": 100.0 },
                              "r": { "a": 0, "k": 0.0 },
                              "p": { "a": 0, "k": [0.0, 0.0] },
                              "a": { "a": 0, "k": [0.0, 0.0] },
                              "s": { "a": 0, "k": [100.0, 100.0] },
                              "nm": "Transform",
                              "sk": { "a": 0, "k": 0.0 },
                              "sa": { "a": 0, "k": 0.0 }
                            }
                          ]
                        },
                        {
                          "ty": "gr",
                          "nm": "Group 10",
                          "bm": 0,
                          "mn": "ADBE Vector Group",
                          "it": [
                            {
                              "ty": "sh",
                              "nm": "Path 1",
                              "mn": "ADBE Vector Shape - Group",
                              "ind": 0,
                              "ks": {
                                "k": {
                                  "i": [
                                    [0.0, 0.0],
                                    [0.0, 0.0]
                                  ],
                                  "o": [
                                    [-0.226, 0.572],
                                    [0.0, 0.0]
                                  ],
                                  "v": [
                                    [-9.297, 82.81],
                                    [-17.923, 104.067]
                                  ],
                                  "c": false
                                },
                                "a": 0
                              }
                            },
                            {
                              "ty": "st",
                              "nm": "Stroke 1",
                              "bm": 0,
                              "mn": "ADBE Vector Graphic - Stroke",
                              "lc": 2,
                              "lj": 2,
                              "o": { "a": 0, "k": 100.0 },
                              "w": { "a": 0, "k": 0.684 },
                              "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] }
                            },
                            {
                              "ty": "tr",
                              "o": { "a": 0, "k": 100.0 },
                              "r": { "a": 0, "k": 0.0 },
                              "p": { "a": 0, "k": [0.0, 0.0] },
                              "a": { "a": 0, "k": [0.0, 0.0] },
                              "s": { "a": 0, "k": [100.0, 100.0] },
                              "nm": "Transform",
                              "sk": { "a": 0, "k": 0.0 },
                              "sa": { "a": 0, "k": 0.0 }
                            }
                          ]
                        },
                        {
                          "ty": "gr",
                          "nm": "Group 11",
                          "bm": 0,
                          "mn": "ADBE Vector Group",
                          "it": [
                            {
                              "ty": "sh",
                              "nm": "Path 1",
                              "mn": "ADBE Vector Shape - Group",
                              "ind": 0,
                              "ks": {
                                "k": {
                                  "i": [
                                    [0.0, 0.0],
                                    [0.0, 0.0]
                                  ],
                                  "o": [
                                    [-0.227, 0.572],
                                    [0.0, 0.0]
                                  ],
                                  "v": [
                                    [-4.468, 83.405],
                                    [-13.094, 104.663]
                                  ],
                                  "c": false
                                },
                                "a": 0
                              }
                            },
                            {
                              "ty": "st",
                              "nm": "Stroke 1",
                              "bm": 0,
                              "mn": "ADBE Vector Graphic - Stroke",
                              "lc": 2,
                              "lj": 2,
                              "o": { "a": 0, "k": 100.0 },
                              "w": { "a": 0, "k": 0.684 },
                              "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] }
                            },
                            {
                              "ty": "tr",
                              "o": { "a": 0, "k": 100.0 },
                              "r": { "a": 0, "k": 0.0 },
                              "p": { "a": 0, "k": [0.0, 0.0] },
                              "a": { "a": 0, "k": [0.0, 0.0] },
                              "s": { "a": 0, "k": [100.0, 100.0] },
                              "nm": "Transform",
                              "sk": { "a": 0, "k": 0.0 },
                              "sa": { "a": 0, "k": 0.0 }
                            }
                          ]
                        },
                        {
                          "ty": "gr",
                          "nm": "Group 12",
                          "bm": 0,
                          "mn": "ADBE Vector Group",
                          "it": [
                            {
                              "ty": "sh",
                              "nm": "Path 1",
                              "mn": "ADBE Vector Shape - Group",
                              "ind": 0,
                              "ks": {
                                "k": {
                                  "i": [
                                    [0.0, 0.0],
                                    [0.0, 0.0]
                                  ],
                                  "o": [
                                    [0.0, 0.0],
                                    [0.0, 0.0]
                                  ],
                                  "v": [
                                    [-0.56, 83.859],
                                    [-8.91, 105.558]
                                  ],
                                  "c": false
                                },
                                "a": 0
                              }
                            },
                            {
                              "ty": "st",
                              "nm": "Stroke 1",
                              "bm": 0,
                              "mn": "ADBE Vector Graphic - Stroke",
                              "lc": 2,
                              "lj": 2,
                              "o": { "a": 0, "k": 100.0 },
                              "w": { "a": 0, "k": 0.684 },
                              "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] }
                            },
                            {
                              "ty": "tr",
                              "o": { "a": 0, "k": 100.0 },
                              "r": { "a": 0, "k": 0.0 },
                              "p": { "a": 0, "k": [0.0, 0.0] },
                              "a": { "a": 0, "k": [0.0, 0.0] },
                              "s": { "a": 0, "k": [100.0, 100.0] },
                              "nm": "Transform",
                              "sk": { "a": 0, "k": 0.0 },
                              "sa": { "a": 0, "k": 0.0 }
                            }
                          ]
                        },
                        {
                          "ty": "gr",
                          "nm": "Group 13",
                          "bm": 0,
                          "mn": "ADBE Vector Group",
                          "it": [
                            {
                              "ty": "sh",
                              "nm": "Path 1",
                              "mn": "ADBE Vector Shape - Group",
                              "ind": 0,
                              "ks": {
                                "k": {
                                  "i": [
                                    [0.0, 0.0],
                                    [0.18, 0.046],
                                    [6.588, 13.774],
                                    [0.0, 0.0],
                                    [-9.79, -1.036]
                                  ],
                                  "o": [
                                    [-0.175, -0.041],
                                    [-12.992, 4.465],
                                    [0.0, 0.0],
                                    [9.791, 1.031],
                                    [0.0, 0.0]
                                  ],
                                  "v": [
                                    [-0.958, 102.605],
                                    [-0.958, 102.605],
                                    [-38.656, 95.934],
                                    [-25.032, 81.09],
                                    [4.34, 84.193]
                                  ],
                                  "c": true
                                },
                                "a": 0
                              }
                            },
                            {
                              "ty": "st",
                              "nm": "Stroke 1",
                              "bm": 0,
                              "mn": "ADBE Vector Graphic - Stroke",
                              "lc": 2,
                              "lj": 2,
                              "o": { "a": 0, "k": 100.0 },
                              "w": { "a": 0, "k": 0.684 },
                              "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] }
                            },
                            {
                              "ty": "fl",
                              "nm": "Fill 1",
                              "bm": 0,
                              "mn": "ADBE Vector Graphic - Fill",
                              "c": { "a": 0, "k": [1.0, 1.0, 1.0, 1.0] },
                              "o": { "a": 0, "k": 100.0 },
                              "r": 1
                            },
                            {
                              "ty": "tr",
                              "o": { "a": 0, "k": 100.0 },
                              "r": { "a": 0, "k": 0.0 },
                              "p": { "a": 0, "k": [0.0, 0.0] },
                              "a": { "a": 0, "k": [0.0, 0.0] },
                              "s": { "a": 0, "k": [100.0, 100.0] },
                              "nm": "Transform",
                              "sk": { "a": 0, "k": 0.0 },
                              "sa": { "a": 0, "k": 0.0 }
                            }
                          ]
                        },
                        {
                          "ty": "gr",
                          "nm": "Group 14",
                          "bm": 0,
                          "mn": "ADBE Vector Group",
                          "it": [
                            {
                              "ty": "sh",
                              "nm": "Path 1",
                              "mn": "ADBE Vector Shape - Group",
                              "ind": 0,
                              "ks": {
                                "k": {
                                  "i": [
                                    [0.356, -2.091],
                                    [0.0, 0.0],
                                    [1.871, 0.137],
                                    [0.0, 0.0],
                                    [0.491, 0.296],
                                    [0.0, 0.0],
                                    [-1.204, 1.726],
                                    [0.0, 0.0],
                                    [-1.609, -0.768],
                                    [-0.452, -0.178],
                                    [-11.059, -1.005]
                                  ],
                                  "o": [
                                    [0.0, 0.0],
                                    [-0.315, 1.848],
                                    [0.0, 0.0],
                                    [-0.572, -0.042],
                                    [0.0, 0.0],
                                    [-1.803, -1.087],
                                    [0.0, 0.0],
                                    [1.02, -1.461],
                                    [7.625, 3.639],
                                    [0.454, 0.179],
                                    [2.114, 0.192]
                                  ],
                                  "v": [
                                    [-5.612, 137.234],
                                    [-5.711, 137.817],
                                    [-9.566, 140.834],
                                    [-56.52, 137.404],
                                    [-58.136, 136.89],
                                    [-83.289, 121.726],
                                    [-84.395, 116.53],
                                    [-84.395, 116.53],
                                    [-79.843, 115.327],
                                    [-51.085, 129.012],
                                    [-8.867, 133.001]
                                  ],
                                  "c": true
                                },
                                "a": 0
                              }
                            },
                            {
                              "ty": "fl",
                              "nm": "Fill 1",
                              "bm": 0,
                              "mn": "ADBE Vector Graphic - Fill",
                              "c": {
                                "a": 0,
                                "k": [0.015686275437, 0.011764706112, 0.003921568859, 1.0]
                              },
                              "o": { "a": 0, "k": 100.0 },
                              "r": 1
                            },
                            {
                              "ty": "tr",
                              "o": { "a": 0, "k": 100.0 },
                              "r": { "a": 0, "k": 0.0 },
                              "p": { "a": 0, "k": [0.0, 0.0] },
                              "a": { "a": 0, "k": [0.0, 0.0] },
                              "s": { "a": 0, "k": [100.0, 100.0] },
                              "nm": "Transform",
                              "sk": { "a": 0, "k": 0.0 },
                              "sa": { "a": 0, "k": 0.0 }
                            }
                          ]
                        },
                        {
                          "ty": "gr",
                          "nm": "Group 15",
                          "bm": 0,
                          "mn": "ADBE Vector Group",
                          "it": [
                            {
                              "ty": "sh",
                              "nm": "Path 1",
                              "mn": "ADBE Vector Shape - Group",
                              "ind": 0,
                              "ks": {
                                "k": {
                                  "i": [
                                    [5.396, 3.002],
                                    [2.564, 1.486],
                                    [0.0, 0.0],
                                    [0.0, 0.0],
                                    [0.0, 0.0],
                                    [0.0, 0.0],
                                    [0.0, 0.0],
                                    [0.0, 0.0]
                                  ],
                                  "o": [
                                    [-2.59, -1.441],
                                    [0.0, 0.0],
                                    [0.0, 0.0],
                                    [0.0, 0.0],
                                    [0.0, 0.0],
                                    [0.0, 0.0],
                                    [0.0, 0.0],
                                    [-5.673, -2.409]
                                  ],
                                  "v": [
                                    [7.402, 40.929],
                                    [-0.316, 36.515],
                                    [-1.701, 39.163],
                                    [-2.842, 42.088],
                                    [-25.032, 81.09],
                                    [4.34, 84.193],
                                    [21.402, 55.408],
                                    [24.008, 48.932]
                                  ],
                                  "c": true
                                },
                                "a": 0
                              }
                            },
                            {
                              "ty": "st",
                              "nm": "Stroke 1",
                              "bm": 0,
                              "mn": "ADBE Vector Graphic - Stroke",
                              "lc": 2,
                              "lj": 2,
                              "o": { "a": 0, "k": 100.0 },
                              "w": { "a": 0, "k": 0.684 },
                              "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] }
                            },
                            {
                              "ty": "fl",
                              "nm": "Fill 1",
                              "bm": 0,
                              "mn": "ADBE Vector Graphic - Fill",
                              "c": { "a": 0, "k": [1.0, 1.0, 1.0, 1.0] },
                              "o": { "a": 0, "k": 100.0 },
                              "r": 1
                            },
                            {
                              "ty": "tr",
                              "o": { "a": 0, "k": 100.0 },
                              "r": { "a": 0, "k": 0.0 },
                              "p": { "a": 0, "k": [0.0, 0.0] },
                              "a": { "a": 0, "k": [0.0, 0.0] },
                              "s": { "a": 0, "k": [100.0, 100.0] },
                              "nm": "Transform",
                              "sk": { "a": 0, "k": 0.0 },
                              "sa": { "a": 0, "k": 0.0 }
                            }
                          ]
                        },
                        {
                          "ty": "tr",
                          "o": { "a": 0, "k": 100.0 },
                          "r": {
                            "a": 1,
                            "k": [
                              {
                                "i": { "x": [0.667], "y": [1] },
                                "o": { "x": [0.333], "y": [0] },
                                "t": 16,
                                "s": [0.0]
                              },
                              {
                                "i": { "x": [0.667], "y": [1] },
                                "o": { "x": [0.333], "y": [0] },
                                "t": 29,
                                "s": [21.0]
                              },
                              {
                                "i": { "x": [0.667], "y": [1] },
                                "o": { "x": [0.333], "y": [0] },
                                "t": 41,
                                "s": [0.0]
                              },
                              {
                                "i": { "x": [0.667], "y": [1] },
                                "o": { "x": [0.333], "y": [0] },
                                "t": 54,
                                "s": [21.0]
                              },
                              {
                                "i": { "x": [0.667], "y": [1] },
                                "o": { "x": [0.333], "y": [0] },
                                "t": 66,
                                "s": [0.0]
                              },
                              {
                                "i": { "x": [0.667], "y": [1] },
                                "o": { "x": [0.333], "y": [0] },
                                "t": 79,
                                "s": [21.0]
                              },
                              { "t": 91, "s": [0.0] }
                            ]
                          },
                          "p": { "a": 0, "k": [0.0, 43.5] },
                          "a": { "a": 0, "k": [0.0, 43.5] },
                          "s": { "a": 0, "k": [100.0, 100.0] },
                          "nm": "Transform",
                          "sk": { "a": 0, "k": 0.0 },
                          "sa": { "a": 0, "k": 0.0 }
                        }
                      ]
                    },
                    {
                      "ty": "gr",
                      "nm": "Group 7",
                      "bm": 0,
                      "mn": "ADBE Vector Group",
                      "it": [
                        {
                          "ty": "sh",
                          "nm": "Path 1",
                          "mn": "ADBE Vector Shape - Group",
                          "ind": 0,
                          "ks": {
                            "k": {
                              "i": [
                                [-0.033, 0.14],
                                [2.559, 2.193],
                                [8.636, 2.995],
                                [12.782, -0.121],
                                [0.122, -0.165],
                                [-2.109, -0.989],
                                [-9.379, -1.714],
                                [-0.092, 0.373]
                              ],
                              "o": [
                                [-2.064, -2.674],
                                [-6.94, -5.947],
                                [-12.077, -4.188],
                                [-0.123, 0.164],
                                [-0.947, 1.278],
                                [8.632, 4.048],
                                [1.619, 0.296],
                                [0.034, -0.14]
                              ],
                              "v": [
                                [34.713, 70.985],
                                [27.733, 63.66],
                                [3.806, 50.601],
                                [-33.853, 44.445],
                                [-34.228, 44.932],
                                [-10.644, 59.928],
                                [16.52, 68.627],
                                [34.614, 71.404]
                              ],
                              "c": true
                            },
                            "a": 0
                          }
                        },
                        {
                          "ty": "fl",
                          "nm": "Fill 1",
                          "bm": 0,
                          "mn": "ADBE Vector Graphic - Fill",
                          "c": {
                            "a": 0,
                            "k": [0.015686275437, 0.011764706112, 0.003921568859, 1.0]
                          },
                          "o": { "a": 0, "k": 100.0 },
                          "r": 1
                        },
                        {
                          "ty": "tr",
                          "o": { "a": 0, "k": 100.0 },
                          "r": { "a": 0, "k": 0.0 },
                          "p": { "a": 0, "k": [0.0, 0.0] },
                          "a": { "a": 0, "k": [0.0, 0.0] },
                          "s": { "a": 0, "k": [100.0, 100.0] },
                          "nm": "Transform",
                          "sk": { "a": 0, "k": 0.0 },
                          "sa": { "a": 0, "k": 0.0 }
                        }
                      ]
                    },
                    {
                      "ty": "tr",
                      "o": { "a": 0, "k": 100.0 },
                      "r": { "a": 0, "k": 0.0 },
                      "p": { "a": 0, "k": [0.0, 0.0] },
                      "a": { "a": 0, "k": [0.0, 0.0] },
                      "s": { "a": 0, "k": [100.0, 100.0] },
                      "nm": "Transform",
                      "sk": { "a": 0, "k": 0.0 },
                      "sa": { "a": 0, "k": 0.0 }
                    }
                  ]
                },
                {
                  "ty": "gr",
                  "nm": "Group 15",
                  "bm": 0,
                  "mn": "ADBE Vector Group",
                  "it": [
                    {
                      "ty": "sh",
                      "nm": "Path 1",
                      "mn": "ADBE Vector Shape - Group",
                      "ind": 0,
                      "ks": {
                        "k": {
                          "i": [
                            [0.056, -4.805],
                            [-0.432, -3.14],
                            [0.879, 0.1],
                            [-0.94, -0.664],
                            [-3.08, -0.713],
                            [-2.834, 0.049],
                            [-2.971, -1.043],
                            [-0.095, -1.563],
                            [-0.285, 10.09],
                            [-0.278, 4.522],
                            [-0.595, 2.773],
                            [-0.009, 1.355],
                            [0.801, 0.396],
                            [-0.006, -0.071],
                            [0.947, -0.884],
                            [1.233, -0.132],
                            [1.274, 1.455],
                            [0.077, 0.515],
                            [0.188, -0.028],
                            [2.11, -2.395],
                            [0.543, -1.212]
                          ],
                          "o": [
                            [-0.035, 3.175],
                            [0.255, 1.889],
                            [1.144, 0.131],
                            [3.265, -1.676],
                            [2.755, 0.638],
                            [3.149, -0.054],
                            [1.265, 0.444],
                            [-0.615, -10.075],
                            [0.128, -4.529],
                            [0.174, -2.836],
                            [0.285, -1.326],
                            [0.006, -0.94],
                            [-1.278, -0.633],
                            [0.125, 1.365],
                            [-0.905, 0.843],
                            [-1.873, 0.202],
                            [-0.251, -0.285],
                            [-0.028, -0.181],
                            [-3.022, 0.48],
                            [-0.877, 0.996],
                            [-1.964, 4.387]
                          ],
                          "v": [
                            [72.062, -54.674],
                            [73.211, -45.142],
                            [73.349, -24.638],
                            [76.948, -24.638],
                            [86.405, -22.699],
                            [94.7, -23.155],
                            [103.982, -21.651],
                            [111.766, -17.283],
                            [111.281, -47.55],
                            [111.926, -61.122],
                            [113.244, -69.525],
                            [114.149, -73.765],
                            [111.94, -75.935],
                            [97.47, -76.915],
                            [95.974, -73.329],
                            [92.666, -71.831],
                            [87.485, -73.621],
                            [86.573, -75.153],
                            [86.19, -75.438],
                            [77.744, -71.929],
                            [75.752, -68.503]
                          ],
                          "c": true
                        },
                        "a": 0
                      }
                    },
                    {
                      "ty": "st",
                      "nm": "Stroke 1",
                      "bm": 0,
                      "mn": "ADBE Vector Graphic - Stroke",
                      "lc": 2,
                      "lj": 2,
                      "o": { "a": 0, "k": 100.0 },
                      "w": { "a": 0, "k": 0.684 },
                      "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] }
                    },
                    {
                      "ty": "fl",
                      "nm": "Fill 1",
                      "bm": 0,
                      "mn": "ADBE Vector Graphic - Fill",
                      "c": { "a": 0, "k": [0.92549020052, 0.92549020052, 0.92549020052, 1.0] },
                      "o": { "a": 0, "k": 100.0 },
                      "r": 1
                    },
                    {
                      "ty": "tr",
                      "o": { "a": 0, "k": 100.0 },
                      "r": { "a": 0, "k": 0.0 },
                      "p": { "a": 0, "k": [0.0, 0.0] },
                      "a": { "a": 0, "k": [0.0, 0.0] },
                      "s": { "a": 0, "k": [100.0, 100.0] },
                      "nm": "Transform",
                      "sk": { "a": 0, "k": 0.0 },
                      "sa": { "a": 0, "k": 0.0 }
                    }
                  ]
                },
                {
                  "ty": "gr",
                  "nm": "Group 16",
                  "bm": 0,
                  "mn": "ADBE Vector Group",
                  "it": [
                    {
                      "ty": "sh",
                      "nm": "Path 1",
                      "mn": "ADBE Vector Shape - Group",
                      "ind": 0,
                      "ks": {
                        "k": {
                          "i": [
                            [0.162, -0.265],
                            [0.725, -0.575],
                            [1.937, -0.78],
                            [0.573, 0.173],
                            [0.025, -0.008],
                            [0.0, 0.0],
                            [0.033, 0.041],
                            [0.002, 0.222],
                            [0.036, 2.124],
                            [-0.209, -0.049],
                            [-0.962, -0.078],
                            [-1.883, 0.424]
                          ],
                          "o": [
                            [-0.501, 0.819],
                            [-1.636, 1.298],
                            [-0.452, 0.184],
                            [-0.025, 0.008],
                            [0.0, 0.0],
                            [-0.054, -0.024],
                            [-0.139, -0.172],
                            [-0.039, -2.117],
                            [0.004, 0.232],
                            [0.939, 0.222],
                            [1.923, 0.156],
                            [-0.083, 0.303]
                          ],
                          "v": [
                            [96.941, -85.894],
                            [94.899, -83.847],
                            [89.502, -80.705],
                            [86.943, -79.938],
                            [86.875, -79.913],
                            [86.929, -79.942],
                            [86.797, -80.035],
                            [86.777, -81.254],
                            [86.657, -91.479],
                            [88.707, -90.659],
                            [91.563, -90.209],
                            [97.316, -90.61]
                          ],
                          "c": true
                        },
                        "a": 0
                      }
                    },
                    {
                      "ty": "fl",
                      "nm": "Fill 1",
                      "bm": 0,
                      "mn": "ADBE Vector Graphic - Fill",
                      "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] },
                      "o": { "a": 0, "k": 100.0 },
                      "r": 1
                    },
                    {
                      "ty": "tr",
                      "o": { "a": 0, "k": 100.0 },
                      "r": { "a": 0, "k": 0.0 },
                      "p": { "a": 0, "k": [0.0, 0.0] },
                      "a": { "a": 0, "k": [0.0, 0.0] },
                      "s": { "a": 0, "k": [100.0, 100.0] },
                      "nm": "Transform",
                      "sk": { "a": 0, "k": 0.0 },
                      "sa": { "a": 0, "k": 0.0 }
                    }
                  ]
                },
                {
                  "ty": "gr",
                  "nm": "Group 17",
                  "bm": 0,
                  "mn": "ADBE Vector Group",
                  "it": [
                    {
                      "ty": "sh",
                      "nm": "Path 1",
                      "mn": "ADBE Vector Shape - Group",
                      "ind": 0,
                      "ks": {
                        "k": {
                          "i": [
                            [0.0, 0.0],
                            [0.0, 0.0],
                            [0.0, 0.0],
                            [0.0, 0.0],
                            [-2.633, -0.147],
                            [-0.726, 0.031],
                            [-0.266, 0.023]
                          ],
                          "o": [
                            [0.0, 0.0],
                            [0.0, 0.0],
                            [0.0, 0.0],
                            [2.278, 1.169],
                            [0.734, 0.045],
                            [0.271, -0.014],
                            [0.0, 0.0]
                          ],
                          "v": [
                            [97.47, -70.662],
                            [86.987, -70.577],
                            [86.664, -82.545],
                            [86.521, -91.479],
                            [92.924, -90.128],
                            [96.224, -90.481],
                            [97.033, -90.532]
                          ],
                          "c": true
                        },
                        "a": 0
                      }
                    },
                    {
                      "ty": "st",
                      "nm": "Stroke 1",
                      "bm": 0,
                      "mn": "ADBE Vector Graphic - Stroke",
                      "lc": 2,
                      "lj": 2,
                      "o": { "a": 0, "k": 100.0 },
                      "w": { "a": 0, "k": 0.684 },
                      "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] }
                    },
                    {
                      "ty": "fl",
                      "nm": "Fill 1",
                      "bm": 0,
                      "mn": "ADBE Vector Graphic - Fill",
                      "c": { "a": 0, "k": [1.0, 1.0, 1.0, 1.0] },
                      "o": { "a": 0, "k": 100.0 },
                      "r": 1
                    },
                    {
                      "ty": "tr",
                      "o": { "a": 0, "k": 100.0 },
                      "r": { "a": 0, "k": 0.0 },
                      "p": { "a": 0, "k": [0.0, 0.0] },
                      "a": { "a": 0, "k": [0.0, 0.0] },
                      "s": { "a": 0, "k": [100.0, 100.0] },
                      "nm": "Transform",
                      "sk": { "a": 0, "k": 0.0 },
                      "sa": { "a": 0, "k": 0.0 }
                    }
                  ]
                },
                {
                  "ty": "gr",
                  "nm": "Group 18",
                  "bm": 0,
                  "mn": "ADBE Vector Group",
                  "it": [
                    {
                      "ty": "sh",
                      "nm": "Path 1",
                      "mn": "ADBE Vector Shape - Group",
                      "ind": 0,
                      "ks": {
                        "k": {
                          "i": [
                            [-0.296, -1.812],
                            [-7.941, 1.262],
                            [0.296, 1.812],
                            [7.935, -1.296]
                          ],
                          "o": [
                            [0.296, 1.812],
                            [12.975, -2.062],
                            [-0.296, -1.812],
                            [-7.935, 1.296]
                          ],
                          "v": [
                            [78.63, 8.521],
                            [99.258, 13.055],
                            [113.805, 0.925],
                            [97.972, 0.052]
                          ],
                          "c": true
                        },
                        "a": 0
                      }
                    },
                    {
                      "ty": "fl",
                      "nm": "Fill 1",
                      "bm": 0,
                      "mn": "ADBE Vector Graphic - Fill",
                      "c": { "a": 0, "k": [0.015686275437, 0.011764706112, 0.003921568859, 1.0] },
                      "o": { "a": 0, "k": 100.0 },
                      "r": 1
                    },
                    {
                      "ty": "tr",
                      "o": { "a": 0, "k": 100.0 },
                      "r": { "a": 0, "k": 0.0 },
                      "p": { "a": 0, "k": [0.0, 0.0] },
                      "a": { "a": 0, "k": [0.0, 0.0] },
                      "s": { "a": 0, "k": [100.0, 100.0] },
                      "nm": "Transform",
                      "sk": { "a": 0, "k": 0.0 },
                      "sa": { "a": 0, "k": 0.0 }
                    }
                  ]
                },
                {
                  "ty": "tr",
                  "o": { "a": 0, "k": 100.0 },
                  "r": { "a": 0, "k": 0.0 },
                  "p": { "a": 0, "k": [0.0, -1.0] },
                  "a": { "a": 0, "k": [0.0, 0.0] },
                  "s": { "a": 0, "k": [100.0, 100.0] },
                  "nm": "Transform",
                  "sk": { "a": 0, "k": 0.0 },
                  "sa": { "a": 0, "k": 0.0 }
                }
              ]
            },
            {
              "ty": "gr",
              "nm": "Group 3",
              "bm": 0,
              "mn": "ADBE Vector Group",
              "it": [
                {
                  "ty": "gr",
                  "nm": "Group 1",
                  "bm": 0,
                  "mn": "ADBE Vector Group",
                  "it": [
                    {
                      "ty": "sh",
                      "nm": "Path 1",
                      "mn": "ADBE Vector Shape - Group",
                      "ind": 0,
                      "ks": {
                        "k": {
                          "i": [
                            [-4.037, 7.036],
                            [2.26, -1.377],
                            [1.635, -2.081],
                            [1.453, -2.486],
                            [0.647, -1.308],
                            [-0.097, -0.178],
                            [-0.188, -0.058],
                            [-0.739, -0.227],
                            [-0.208, -0.071],
                            [-0.228, -0.091],
                            [-0.514, -0.045]
                          ],
                          "o": [
                            [-2.548, -0.716],
                            [-2.26, 1.377],
                            [-1.779, 2.264],
                            [-0.736, 1.26],
                            [-0.085, 0.172],
                            [0.094, 0.174],
                            [0.739, 0.227],
                            [0.214, 0.066],
                            [0.23, 0.078],
                            [0.479, 0.191],
                            [-0.005, -2.315]
                          ],
                          "v": [
                            [86.663, -76.063],
                            [79.064, -74.715],
                            [73.366, -69.249],
                            [68.51, -62.111],
                            [66.435, -58.256],
                            [66.082, -57.39],
                            [67.08, -57.058],
                            [69.297, -56.376],
                            [69.949, -56.201],
                            [70.623, -55.88],
                            [72.122, -55.522]
                          ],
                          "c": true
                        },
                        "a": 0
                      }
                    },
                    {
                      "ty": "fl",
                      "nm": "Fill 1",
                      "bm": 0,
                      "mn": "ADBE Vector Graphic - Fill",
                      "c": { "a": 0, "k": [0.015686275437, 0.011764706112, 0.003921568859, 1.0] },
                      "o": { "a": 0, "k": 100.0 },
                      "r": 1
                    },
                    {
                      "ty": "tr",
                      "o": { "a": 0, "k": 100.0 },
                      "r": { "a": 0, "k": 0.0 },
                      "p": { "a": 0, "k": [0.0, 0.0] },
                      "a": { "a": 0, "k": [0.0, 0.0] },
                      "s": { "a": 0, "k": [100.0, 100.0] },
                      "nm": "Transform",
                      "sk": { "a": 0, "k": 0.0 },
                      "sa": { "a": 0, "k": 0.0 }
                    }
                  ]
                },
                {
                  "ty": "gr",
                  "nm": "Group 2",
                  "bm": 0,
                  "mn": "ADBE Vector Group",
                  "it": [
                    {
                      "ty": "sh",
                      "nm": "Path 1",
                      "mn": "ADBE Vector Shape - Group",
                      "ind": 0,
                      "ks": {
                        "k": {
                          "i": [
                            [0.0, 0.0],
                            [-1.152, 4.031],
                            [1.532, 3.903]
                          ],
                          "o": [
                            [3.363, -2.504],
                            [1.152, -4.031],
                            [0.0, 0.0]
                          ],
                          "v": [
                            [17.819, -73.181],
                            [24.843, -83.346],
                            [24.252, -95.688]
                          ],
                          "c": false
                        },
                        "a": 0
                      }
                    },
                    {
                      "ty": "st",
                      "nm": "Stroke 1",
                      "bm": 0,
                      "mn": "ADBE Vector Graphic - Stroke",
                      "lc": 1,
                      "lj": 1,
                      "ml": 10.0,
                      "o": { "a": 0, "k": 100.0 },
                      "w": { "a": 0, "k": 0.684 },
                      "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] }
                    },
                    {
                      "ty": "tr",
                      "o": { "a": 0, "k": 100.0 },
                      "r": { "a": 0, "k": 0.0 },
                      "p": { "a": 0, "k": [0.0, 0.0] },
                      "a": { "a": 0, "k": [0.0, 0.0] },
                      "s": { "a": 0, "k": [100.0, 100.0] },
                      "nm": "Transform",
                      "sk": { "a": 0, "k": 0.0 },
                      "sa": { "a": 0, "k": 0.0 }
                    }
                  ]
                },
                {
                  "ty": "gr",
                  "nm": "Group 3",
                  "bm": 0,
                  "mn": "ADBE Vector Group",
                  "it": [
                    {
                      "ty": "sh",
                      "nm": "Path 1",
                      "mn": "ADBE Vector Shape - Group",
                      "ind": 0,
                      "ks": {
                        "k": {
                          "i": [
                            [-0.327, 1.031],
                            [0.0, 0.0],
                            [-1.04, -0.329],
                            [0.0, 0.0],
                            [-0.015, -0.846],
                            [6.068, -6.515],
                            [0.733, 0.241],
                            [0.0, 0.0]
                          ],
                          "o": [
                            [0.0, 0.0],
                            [0.329, -1.039],
                            [0.0, 0.0],
                            [0.807, 0.255],
                            [0.066, 3.613],
                            [-0.526, 0.564],
                            [0.0, 0.0],
                            [-1.028, -0.338]
                          ],
                          "v": [
                            [-3.583, -82.368],
                            [2.212, -100.663],
                            [4.69, -101.949],
                            [19.15, -97.375],
                            [20.529, -95.536],
                            [14.086, -75.706],
                            [12.017, -75.177],
                            [-2.318, -79.896]
                          ],
                          "c": true
                        },
                        "a": 0
                      }
                    },
                    {
                      "ty": "fl",
                      "nm": "Fill 1",
                      "bm": 0,
                      "mn": "ADBE Vector Graphic - Fill",
                      "c": { "a": 0, "k": [0.015686275437, 0.011764706112, 0.003921568859, 1.0] },
                      "o": { "a": 0, "k": 100.0 },
                      "r": 1
                    },
                    {
                      "ty": "tr",
                      "o": { "a": 0, "k": 100.0 },
                      "r": { "a": 0, "k": 0.0 },
                      "p": { "a": 0, "k": [0.0, 0.0] },
                      "a": { "a": 0, "k": [0.0, 0.0] },
                      "s": { "a": 0, "k": [100.0, 100.0] },
                      "nm": "Transform",
                      "sk": { "a": 0, "k": 0.0 },
                      "sa": { "a": 0, "k": 0.0 }
                    }
                  ]
                },
                {
                  "ty": "gr",
                  "nm": "Group 4",
                  "bm": 0,
                  "mn": "ADBE Vector Group",
                  "it": [
                    {
                      "ty": "sh",
                      "nm": "Path 1",
                      "mn": "ADBE Vector Shape - Group",
                      "ind": 0,
                      "ks": {
                        "k": {
                          "i": [
                            [0.0, 0.0],
                            [0.0, 0.0],
                            [0.329, -1.039],
                            [0.0, 0.0],
                            [-1.028, -0.338],
                            [0.0, 0.0]
                          ],
                          "o": [
                            [0.0, 0.0],
                            [-1.04, -0.329],
                            [0.0, 0.0],
                            [-0.327, 1.031],
                            [0.0, 0.0],
                            [0.0, 0.0]
                          ],
                          "v": [
                            [86.618, -76.033],
                            [4.69, -101.949],
                            [2.212, -100.663],
                            [-3.583, -82.368],
                            [-2.318, -79.896],
                            [72.489, -55.269]
                          ],
                          "c": false
                        },
                        "a": 0
                      }
                    },
                    {
                      "ty": "st",
                      "nm": "Stroke 1",
                      "bm": 0,
                      "mn": "ADBE Vector Graphic - Stroke",
                      "lc": 1,
                      "lj": 1,
                      "ml": 10.0,
                      "o": { "a": 0, "k": 100.0 },
                      "w": { "a": 0, "k": 0.684 },
                      "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] }
                    },
                    {
                      "ty": "fl",
                      "nm": "Fill 1",
                      "bm": 0,
                      "mn": "ADBE Vector Graphic - Fill",
                      "c": { "a": 0, "k": [0.92549020052, 0.92549020052, 0.92549020052, 1.0] },
                      "o": { "a": 0, "k": 100.0 },
                      "r": 1
                    },
                    {
                      "ty": "tr",
                      "o": { "a": 0, "k": 100.0 },
                      "r": { "a": 0, "k": 0.0 },
                      "p": { "a": 0, "k": [0.0, 0.0] },
                      "a": { "a": 0, "k": [0.0, 0.0] },
                      "s": { "a": 0, "k": [100.0, 100.0] },
                      "nm": "Transform",
                      "sk": { "a": 0, "k": 0.0 },
                      "sa": { "a": 0, "k": 0.0 }
                    }
                  ]
                },
                {
                  "ty": "gr",
                  "nm": "Group 5",
                  "bm": 0,
                  "mn": "ADBE Vector Group",
                  "it": [
                    {
                      "ty": "gr",
                      "nm": "Group 1",
                      "bm": 0,
                      "mn": "ADBE Vector Group",
                      "it": [
                        {
                          "ty": "gr",
                          "nm": "Group 1",
                          "bm": 0,
                          "mn": "ADBE Vector Group",
                          "it": [
                            {
                              "ty": "sh",
                              "nm": "Path 1",
                              "mn": "ADBE Vector Shape - Group",
                              "ind": 0,
                              "ks": {
                                "k": {
                                  "i": [
                                    [0.0, 0.0],
                                    [1.047, -0.014],
                                    [-2.589, -2.141],
                                    [-1.188, -0.314],
                                    [-4.002, -0.945],
                                    [-2.116, -0.491],
                                    [-1.747, -0.499]
                                  ],
                                  "o": [
                                    [-0.971, -0.399],
                                    [-3.32, 0.046],
                                    [0.928, 0.768],
                                    [3.906, 1.032],
                                    [2.05, 0.484],
                                    [1.769, 0.41],
                                    [0.0, 0.0]
                                  ],
                                  "v": [
                                    [-24.326, -93.867],
                                    [-27.617, -94.886],
                                    [-29.515, -89.908],
                                    [-26.182, -88.584],
                                    [-14.338, -86.044],
                                    [-7.836, -84.581],
                                    [0.789, -82.465]
                                  ],
                                  "c": false
                                },
                                "a": 0
                              }
                            },
                            {
                              "ty": "st",
                              "nm": "Stroke 1",
                              "bm": 0,
                              "mn": "ADBE Vector Graphic - Stroke",
                              "lc": 2,
                              "lj": 2,
                              "o": { "a": 0, "k": 100.0 },
                              "w": { "a": 0, "k": 0.684 },
                              "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] }
                            },
                            {
                              "ty": "fl",
                              "nm": "Fill 1",
                              "bm": 0,
                              "mn": "ADBE Vector Graphic - Fill",
                              "c": { "a": 0, "k": [1.0, 1.0, 1.0, 1.0] },
                              "o": { "a": 0, "k": 100.0 },
                              "r": 1
                            },
                            {
                              "ty": "tr",
                              "o": { "a": 0, "k": 100.0 },
                              "r": { "a": 0, "k": 0.0 },
                              "p": { "a": 0, "k": [0.0, 0.0] },
                              "a": { "a": 0, "k": [0.0, 0.0] },
                              "s": { "a": 0, "k": [100.0, 100.0] },
                              "nm": "Transform",
                              "sk": { "a": 0, "k": 0.0 },
                              "sa": { "a": 0, "k": 0.0 }
                            }
                          ]
                        },
                        {
                          "ty": "gr",
                          "nm": "Group 2",
                          "bm": 0,
                          "mn": "ADBE Vector Group",
                          "it": [
                            {
                              "ty": "sh",
                              "nm": "Path 1",
                              "mn": "ADBE Vector Shape - Group",
                              "ind": 0,
                              "ks": {
                                "k": {
                                  "i": [
                                    [0.0, 0.0],
                                    [0.999, -0.121],
                                    [0.587, -0.859],
                                    [-0.777, -1.06],
                                    [-1.244, -0.343],
                                    [-1.545, -0.562]
                                  ],
                                  "o": [
                                    [-0.976, -0.149],
                                    [-0.999, 0.121],
                                    [-0.721, 1.055],
                                    [0.777, 1.06],
                                    [1.575, 0.435],
                                    [0.0, 0.0]
                                  ],
                                  "v": [
                                    [-26.471, -101.321],
                                    [-29.428, -101.6],
                                    [-32.027, -100.283],
                                    [-31.973, -96.941],
                                    [-28.717, -95.358],
                                    [-23.991, -93.735]
                                  ],
                                  "c": false
                                },
                                "a": 0
                              }
                            },
                            {
                              "ty": "st",
                              "nm": "Stroke 1",
                              "bm": 0,
                              "mn": "ADBE Vector Graphic - Stroke",
                              "lc": 2,
                              "lj": 2,
                              "o": { "a": 0, "k": 100.0 },
                              "w": { "a": 0, "k": 0.684 },
                              "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] }
                            },
                            {
                              "ty": "fl",
                              "nm": "Fill 1",
                              "bm": 0,
                              "mn": "ADBE Vector Graphic - Fill",
                              "c": { "a": 0, "k": [1.0, 1.0, 1.0, 1.0] },
                              "o": { "a": 0, "k": 100.0 },
                              "r": 1
                            },
                            {
                              "ty": "tr",
                              "o": { "a": 0, "k": 100.0 },
                              "r": { "a": 0, "k": 0.0 },
                              "p": { "a": 0, "k": [0.0, 0.0] },
                              "a": { "a": 0, "k": [0.0, 0.0] },
                              "s": { "a": 0, "k": [100.0, 100.0] },
                              "nm": "Transform",
                              "sk": { "a": 0, "k": 0.0 },
                              "sa": { "a": 0, "k": 0.0 }
                            }
                          ]
                        },
                        {
                          "ty": "gr",
                          "nm": "Group 3",
                          "bm": 0,
                          "mn": "ADBE Vector Group",
                          "it": [
                            {
                              "ty": "sh",
                              "nm": "Path 1",
                              "mn": "ADBE Vector Shape - Group",
                              "ind": 0,
                              "ks": {
                                "k": {
                                  "i": [
                                    [0.0, 0.0],
                                    [1.612, 3.347],
                                    [-1.303, 0.861],
                                    [-1.193, -0.239]
                                  ],
                                  "o": [
                                    [-3.166, -1.033],
                                    [-0.668, -1.386],
                                    [1.082, -0.715],
                                    [0.0, 0.0]
                                  ],
                                  "v": [
                                    [-23.331, -100.452],
                                    [-31.744, -104.935],
                                    [-30.556, -108.871],
                                    [-26.723, -108.945]
                                  ],
                                  "c": false
                                },
                                "a": 0
                              }
                            },
                            {
                              "ty": "st",
                              "nm": "Stroke 1",
                              "bm": 0,
                              "mn": "ADBE Vector Graphic - Stroke",
                              "lc": 2,
                              "lj": 2,
                              "o": { "a": 0, "k": 100.0 },
                              "w": { "a": 0, "k": 0.684 },
                              "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] }
                            },
                            {
                              "ty": "fl",
                              "nm": "Fill 1",
                              "bm": 0,
                              "mn": "ADBE Vector Graphic - Fill",
                              "c": { "a": 0, "k": [1.0, 1.0, 1.0, 1.0] },
                              "o": { "a": 0, "k": 100.0 },
                              "r": 1
                            },
                            {
                              "ty": "tr",
                              "o": { "a": 0, "k": 100.0 },
                              "r": { "a": 0, "k": 0.0 },
                              "p": { "a": 0, "k": [0.0, 0.0] },
                              "a": { "a": 0, "k": [0.0, 0.0] },
                              "s": { "a": 0, "k": [100.0, 100.0] },
                              "nm": "Transform",
                              "sk": { "a": 0, "k": 0.0 },
                              "sa": { "a": 0, "k": 0.0 }
                            }
                          ]
                        },
                        {
                          "ty": "gr",
                          "nm": "Group 4",
                          "bm": 0,
                          "mn": "ADBE Vector Group",
                          "it": [
                            {
                              "ty": "sh",
                              "nm": "Path 1",
                              "mn": "ADBE Vector Shape - Group",
                              "ind": 0,
                              "ks": {
                                "k": {
                                  "i": [
                                    [0.0, 0.0],
                                    [3.696, -1.386],
                                    [0.666, -0.775],
                                    [-1.551, -1.166],
                                    [-1.039, -0.031],
                                    [-2.253, 1.416],
                                    [-2.354, -1.661]
                                  ],
                                  "o": [
                                    [-3.915, 0.267],
                                    [-0.956, 0.358],
                                    [-1.174, 1.365],
                                    [0.808, 0.608],
                                    [2.614, 0.077],
                                    [0.479, 2.85],
                                    [0.0, 0.0]
                                  ],
                                  "v": [
                                    [-6.897, -106.275],
                                    [-17.171, -104.272],
                                    [-19.704, -102.619],
                                    [-19.537, -98.37],
                                    [-16.692, -97.637],
                                    [-9.528, -99.424],
                                    [-5.288, -92.811]
                                  ],
                                  "c": false
                                },
                                "a": 0
                              }
                            },
                            {
                              "ty": "st",
                              "nm": "Stroke 1",
                              "bm": 0,
                              "mn": "ADBE Vector Graphic - Stroke",
                              "lc": 2,
                              "lj": 2,
                              "o": { "a": 0, "k": 100.0 },
                              "w": { "a": 0, "k": 0.684 },
                              "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] }
                            },
                            {
                              "ty": "fl",
                              "nm": "Fill 1",
                              "bm": 0,
                              "mn": "ADBE Vector Graphic - Fill",
                              "c": { "a": 0, "k": [1.0, 1.0, 1.0, 1.0] },
                              "o": { "a": 0, "k": 100.0 },
                              "r": 1
                            },
                            {
                              "ty": "tr",
                              "o": { "a": 0, "k": 100.0 },
                              "r": { "a": 0, "k": 0.0 },
                              "p": { "a": 0, "k": [0.0, 0.0] },
                              "a": { "a": 0, "k": [0.0, 0.0] },
                              "s": { "a": 0, "k": [100.0, 100.0] },
                              "nm": "Transform",
                              "sk": { "a": 0, "k": 0.0 },
                              "sa": { "a": 0, "k": 0.0 }
                            }
                          ]
                        },
                        {
                          "ty": "gr",
                          "nm": "Group 5",
                          "bm": 0,
                          "mn": "ADBE Vector Group",
                          "it": [
                            {
                              "ty": "sh",
                              "nm": "Path 1",
                              "mn": "ADBE Vector Shape - Group",
                              "ind": 0,
                              "ks": {
                                "k": {
                                  "i": [
                                    [0.0, 0.0],
                                    [11.363, 4.834],
                                    [1.752, -0.174],
                                    [0.528, -1.532],
                                    [-0.646, -0.888],
                                    [-1.914, -0.875],
                                    [-3.254, -1.356]
                                  ],
                                  "o": [
                                    [-10.198, -6.603],
                                    [-1.379, -0.587],
                                    [-1.483, 0.147],
                                    [-0.381, 1.105],
                                    [1.443, 1.984],
                                    [3.355, 1.534],
                                    [0.0, 0.0]
                                  ],
                                  "v": [
                                    [5.909, -98.659],
                                    [-27.687, -118.862],
                                    [-32.73, -119.943],
                                    [-36.508, -117.3],
                                    [-35.959, -114.139],
                                    [-29.636, -110.262],
                                    [-20.381, -106.438]
                                  ],
                                  "c": false
                                },
                                "a": 0
                              }
                            },
                            {
                              "ty": "st",
                              "nm": "Stroke 1",
                              "bm": 0,
                              "mn": "ADBE Vector Graphic - Stroke",
                              "lc": 2,
                              "lj": 2,
                              "o": { "a": 0, "k": 100.0 },
                              "w": { "a": 0, "k": 0.684 },
                              "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] }
                            },
                            {
                              "ty": "fl",
                              "nm": "Fill 1",
                              "bm": 0,
                              "mn": "ADBE Vector Graphic - Fill",
                              "c": { "a": 0, "k": [1.0, 1.0, 1.0, 1.0] },
                              "o": { "a": 0, "k": 100.0 },
                              "r": 1
                            },
                            {
                              "ty": "tr",
                              "o": { "a": 0, "k": 100.0 },
                              "r": { "a": 0, "k": 0.0 },
                              "p": { "a": 0, "k": [0.0, 0.0] },
                              "a": { "a": 0, "k": [0.0, 0.0] },
                              "s": { "a": 0, "k": [100.0, 100.0] },
                              "nm": "Transform",
                              "sk": { "a": 0, "k": 0.0 },
                              "sa": { "a": 0, "k": 0.0 }
                            }
                          ]
                        },
                        {
                          "ty": "tr",
                          "o": { "a": 0, "k": 100.0 },
                          "r": { "a": 0, "k": 0.0 },
                          "p": { "a": 0, "k": [0.0, 0.0] },
                          "a": { "a": 0, "k": [0.0, 0.0] },
                          "s": { "a": 0, "k": [100.0, 100.0] },
                          "nm": "Transform",
                          "sk": { "a": 0, "k": 0.0 },
                          "sa": { "a": 0, "k": 0.0 }
                        }
                      ]
                    },
                    {
                      "ty": "gr",
                      "nm": "Group 2",
                      "bm": 0,
                      "mn": "ADBE Vector Group",
                      "it": [
                        {
                          "ty": "sh",
                          "nm": "Path 1",
                          "mn": "ADBE Vector Shape - Group",
                          "ind": 0,
                          "ks": {
                            "k": {
                              "i": [
                                [-10.19, -6.6],
                                [0.0, 0.0],
                                [1.77, 0.41],
                                [2.05, 0.48],
                                [3.91, 1.03],
                                [0.93, 0.77],
                                [-3.32, 0.04],
                                [-0.2, -0.04],
                                [0.56, 0.16],
                                [0.78, 1.06],
                                [-0.73, 1.05],
                                [-0.99, 0.12],
                                [-0.92, -0.15],
                                [1.06, 2.2],
                                [-1.31, 0.86],
                                [-1.07, -0.16],
                                [0.79, 0.36],
                                [1.45, 1.99],
                                [-0.38, 1.11],
                                [-1.48, 0.15],
                                [-1.38, -0.59]
                              ],
                              "o": [
                                [0.0, 0.0],
                                [-1.75, -0.5],
                                [-2.12, -0.49],
                                [-4.0, -0.95],
                                [-1.19, -0.32],
                                [-2.59, -2.14],
                                [0.19, 0.0],
                                [-0.56, -0.19],
                                [-1.25, -0.34],
                                [-0.78, -1.06],
                                [0.58, -0.86],
                                [0.95, -0.11],
                                [-2.11, -0.58],
                                [-0.67, -1.39],
                                [0.89, -0.58],
                                [-0.73, -0.3],
                                [-1.92, -0.88],
                                [-0.64, -0.89],
                                [0.53, -1.53],
                                [1.75, -0.18],
                                [11.36, 4.83]
                              ],
                              "v": [
                                [5.906, -98.662],
                                [0.789, -82.466],
                                [-7.832, -84.581],
                                [-14.342, -86.041],
                                [-26.182, -88.581],
                                [-29.512, -89.911],
                                [-27.612, -94.881],
                                [-27.032, -94.831],
                                [-28.712, -95.361],
                                [-31.972, -96.941],
                                [-32.022, -100.281],
                                [-29.432, -101.601],
                                [-26.632, -101.351],
                                [-31.742, -104.931],
                                [-30.552, -108.871],
                                [-27.362, -109.271],
                                [-29.632, -110.261],
                                [-35.962, -114.141],
                                [-36.512, -117.301],
                                [-32.732, -119.941],
                                [-27.682, -118.861]
                              ],
                              "c": true
                            },
                            "a": 0
                          }
                        },
                        {
                          "ty": "fl",
                          "nm": "Fill 1",
                          "bm": 0,
                          "mn": "ADBE Vector Graphic - Fill",
                          "c": { "a": 0, "k": [1.0, 1.0, 1.0, 1.0] },
                          "o": { "a": 0, "k": 100.0 },
                          "r": 1
                        },
                        {
                          "ty": "tr",
                          "o": { "a": 0, "k": 100.0 },
                          "r": { "a": 0, "k": 0.0 },
                          "p": { "a": 0, "k": [0.0, 0.0] },
                          "a": { "a": 0, "k": [0.0, 0.0] },
                          "s": { "a": 0, "k": [100.0, 100.0] },
                          "nm": "Transform",
                          "sk": { "a": 0, "k": 0.0 },
                          "sa": { "a": 0, "k": 0.0 }
                        }
                      ]
                    },
                    {
                      "ty": "tr",
                      "o": { "a": 0, "k": 100.0 },
                      "r": { "a": 0, "k": 0.0 },
                      "p": { "a": 0, "k": [0.0, 0.0] },
                      "a": { "a": 0, "k": [0.0, 0.0] },
                      "s": { "a": 0, "k": [100.0, 100.0] },
                      "nm": "Transform",
                      "sk": { "a": 0, "k": 0.0 },
                      "sa": { "a": 0, "k": 0.0 }
                    }
                  ]
                },
                {
                  "ty": "tr",
                  "o": { "a": 0, "k": 100.0 },
                  "r": {
                    "a": 1,
                    "k": [
                      {
                        "i": { "x": [0.667], "y": [1] },
                        "o": { "x": [0.333], "y": [0] },
                        "t": 0,
                        "s": [0.0]
                      },
                      {
                        "i": { "x": [0.667], "y": [1] },
                        "o": { "x": [0.333], "y": [0] },
                        "t": 12,
                        "s": [-10.0]
                      },
                      {
                        "i": { "x": [0.667], "y": [1] },
                        "o": { "x": [0.333], "y": [0] },
                        "t": 25,
                        "s": [0.0]
                      },
                      {
                        "i": { "x": [0.667], "y": [1] },
                        "o": { "x": [0.333], "y": [0] },
                        "t": 37,
                        "s": [-10.0]
                      },
                      {
                        "i": { "x": [0.667], "y": [1] },
                        "o": { "x": [0.333], "y": [0] },
                        "t": 50,
                        "s": [0.0]
                      },
                      {
                        "i": { "x": [0.667], "y": [1] },
                        "o": { "x": [0.333], "y": [0] },
                        "t": 62,
                        "s": [-10.0]
                      },
                      { "t": 75, "s": [0.0] }
                    ]
                  },
                  "p": { "a": 0, "k": [86.5, -76.0] },
                  "a": { "a": 0, "k": [86.5, -76.0] },
                  "s": { "a": 0, "k": [100.0, 100.0] },
                  "nm": "Transform",
                  "sk": { "a": 0, "k": 0.0 },
                  "sa": { "a": 0, "k": 0.0 }
                }
              ]
            },
            {
              "ty": "tr",
              "o": { "a": 0, "k": 100.0 },
              "r": { "a": 0, "k": 0.0 },
              "p": { "a": 0, "k": [0.0, 0.0] },
              "a": { "a": 0, "k": [0.0, 0.0] },
              "s": { "a": 0, "k": [100.0, 100.0] },
              "nm": "Transform",
              "sk": { "a": 0, "k": 0.0 },
              "sa": { "a": 0, "k": 0.0 }
            }
          ]
        },
        {
          "ty": "gr",
          "nm": "Group 2",
          "bm": 0,
          "mn": "ADBE Vector Group",
          "it": [
            {
              "ty": "gr",
              "nm": "Group 1",
              "bm": 0,
              "mn": "ADBE Vector Group",
              "it": [
                {
                  "ty": "sh",
                  "nm": "Path 1",
                  "mn": "ADBE Vector Shape - Group",
                  "ind": 0,
                  "ks": {
                    "k": {
                      "i": [
                        [0.0, 0.0],
                        [8.624, 7.228],
                        [3.207, 6.756],
                        [-4.425, 4.522],
                        [-5.773, -2.589],
                        [0.434, -6.312],
                        [1.027, -1.309],
                        [1.614, 0.404],
                        [0.361, 1.633],
                        [-0.391, 1.626],
                        [-3.372, 3.354],
                        [-4.7, -0.727],
                        [-1.078, -6.527],
                        [2.93, -5.932],
                        [2.878, -5.957],
                        [-1.248, -6.497]
                      ],
                      "o": [
                        [-0.016, -11.252],
                        [-5.731, -4.804],
                        [-2.713, -5.716],
                        [4.425, -4.522],
                        [5.773, 2.589],
                        [-0.114, 1.66],
                        [-1.027, 1.309],
                        [-1.622, -0.406],
                        [-0.361, -1.633],
                        [1.111, -4.624],
                        [3.372, -3.354],
                        [6.538, 1.011],
                        [1.078, 6.527],
                        [-2.93, 5.932],
                        [-2.878, 5.957],
                        [0.0, 0.0]
                      ],
                      "v": [
                        [128.857, 124.746],
                        [115.009, 95.125],
                        [98.672, 80.094],
                        [101.613, 62.509],
                        [119.13, 59.19],
                        [128.301, 74.479],
                        [126.752, 79.145],
                        [122.364, 80.883],
                        [119.238, 77.289],
                        [119.554, 72.327],
                        [126.056, 59.832],
                        [138.987, 55.153],
                        [151.46, 68.908],
                        [147.572, 88.04],
                        [137.938, 105.386],
                        [134.387, 124.565]
                      ],
                      "c": false
                    },
                    "a": 0
                  }
                },
                {
                  "ty": "st",
                  "nm": "Stroke 1",
                  "bm": 0,
                  "mn": "ADBE Vector Graphic - Stroke",
                  "lc": 2,
                  "lj": 2,
                  "o": { "a": 0, "k": 100.0 },
                  "w": { "a": 0, "k": 0.684 },
                  "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] }
                },
                {
                  "ty": "fl",
                  "nm": "Fill 1",
                  "bm": 0,
                  "mn": "ADBE Vector Graphic - Fill",
                  "c": { "a": 0, "k": [1.0, 1.0, 1.0, 1.0] },
                  "o": { "a": 0, "k": 100.0 },
                  "r": 1
                },
                {
                  "ty": "tr",
                  "o": { "a": 0, "k": 100.0 },
                  "r": { "a": 0, "k": 0.0 },
                  "p": { "a": 0, "k": [0.0, 0.0] },
                  "a": { "a": 0, "k": [0.0, 0.0] },
                  "s": { "a": 0, "k": [100.0, 100.0] },
                  "nm": "Transform",
                  "sk": { "a": 0, "k": 0.0 },
                  "sa": { "a": 0, "k": 0.0 }
                }
              ]
            },
            {
              "ty": "gr",
              "nm": "Group 2",
              "bm": 0,
              "mn": "ADBE Vector Group",
              "it": [
                {
                  "ty": "sh",
                  "nm": "Path 1",
                  "mn": "ADBE Vector Shape - Group",
                  "ind": 0,
                  "ks": {
                    "k": {
                      "i": [
                        [0.0, 0.0],
                        [-0.507, -2.643],
                        [7.915, -1.519],
                        [0.592, 3.088],
                        [-4.356, 1.809]
                      ],
                      "o": [
                        [6.431, -0.63],
                        [0.592, 3.088],
                        [-7.915, 1.519],
                        [-0.411, -2.142],
                        [0.0, 0.0]
                      ],
                      "v": [
                        [136.805, 119.243],
                        [148.87, 122.568],
                        [135.611, 130.909],
                        [120.206, 128.069],
                        [126.883, 121.664]
                      ],
                      "c": false
                    },
                    "a": 0
                  }
                },
                {
                  "ty": "st",
                  "nm": "Stroke 1",
                  "bm": 0,
                  "mn": "ADBE Vector Graphic - Stroke",
                  "lc": 2,
                  "lj": 2,
                  "o": { "a": 0, "k": 100.0 },
                  "w": { "a": 0, "k": 0.684 },
                  "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] }
                },
                {
                  "ty": "tr",
                  "o": { "a": 0, "k": 100.0 },
                  "r": { "a": 0, "k": 0.0 },
                  "p": { "a": 0, "k": [0.0, 0.0] },
                  "a": { "a": 0, "k": [0.0, 0.0] },
                  "s": { "a": 0, "k": [100.0, 100.0] },
                  "nm": "Transform",
                  "sk": { "a": 0, "k": 0.0 },
                  "sa": { "a": 0, "k": 0.0 }
                }
              ]
            },
            {
              "ty": "gr",
              "nm": "Group 3",
              "bm": 0,
              "mn": "ADBE Vector Group",
              "it": [
                {
                  "ty": "sh",
                  "nm": "Path 1",
                  "mn": "ADBE Vector Shape - Group",
                  "ind": 0,
                  "ks": {
                    "k": {
                      "i": [
                        [-0.292, -1.159],
                        [0.0, 0.0],
                        [-0.417, -0.174],
                        [-14.34, 18.879],
                        [0.064, 0.389],
                        [0.0, 0.0],
                        [0.768, -1.004],
                        [22.981, 10.324]
                      ],
                      "o": [
                        [0.0, 0.0],
                        [0.11, 0.438],
                        [4.318, 1.806],
                        [0.239, -0.314],
                        [0.0, 0.0],
                        [-0.206, -1.247],
                        [-4.701, 6.146],
                        [-1.09, -0.49]
                      ],
                      "v": [
                        [112.31, 132.233],
                        [116.622, 149.37],
                        [117.455, 150.343],
                        [160.565, 142.369],
                        [160.835, 141.262],
                        [157.737, 122.551],
                        [155.17, 121.921],
                        [114.282, 130.568]
                      ],
                      "c": true
                    },
                    "a": 0
                  }
                },
                {
                  "ty": "fl",
                  "nm": "Fill 1",
                  "bm": 0,
                  "mn": "ADBE Vector Graphic - Fill",
                  "c": { "a": 0, "k": [0.015686275437, 0.011764706112, 0.003921568859, 1.0] },
                  "o": { "a": 0, "k": 100.0 },
                  "r": 1
                },
                {
                  "ty": "tr",
                  "o": { "a": 0, "k": 100.0 },
                  "r": { "a": 0, "k": 0.0 },
                  "p": { "a": 0, "k": [0.0, 0.0] },
                  "a": { "a": 0, "k": [0.0, 0.0] },
                  "s": { "a": 0, "k": [100.0, 100.0] },
                  "nm": "Transform",
                  "sk": { "a": 0, "k": 0.0 },
                  "sa": { "a": 0, "k": 0.0 }
                }
              ]
            },
            {
              "ty": "gr",
              "nm": "Group 4",
              "bm": 0,
              "mn": "ADBE Vector Group",
              "it": [
                {
                  "ty": "sh",
                  "nm": "Path 1",
                  "mn": "ADBE Vector Shape - Group",
                  "ind": 0,
                  "ks": {
                    "k": {
                      "i": [
                        [0.0, 0.0],
                        [-3.794, -0.637],
                        [-2.939, 2.483],
                        [-0.004, 3.847]
                      ],
                      "o": [
                        [1.966, 3.307],
                        [3.794, 0.637],
                        [2.939, -2.483],
                        [0.0, 0.0]
                      ],
                      "v": [
                        [128.482, 153.412],
                        [137.709, 159.73],
                        [148.494, 156.773],
                        [153.208, 146.632]
                      ],
                      "c": false
                    },
                    "a": 0
                  }
                },
                {
                  "ty": "st",
                  "nm": "Stroke 1",
                  "bm": 0,
                  "mn": "ADBE Vector Graphic - Stroke",
                  "lc": 2,
                  "lj": 2,
                  "o": { "a": 0, "k": 100.0 },
                  "w": { "a": 0, "k": 0.684 },
                  "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] }
                },
                {
                  "ty": "fl",
                  "nm": "Fill 1",
                  "bm": 0,
                  "mn": "ADBE Vector Graphic - Fill",
                  "c": { "a": 0, "k": [1.0, 1.0, 1.0, 1.0] },
                  "o": { "a": 0, "k": 100.0 },
                  "r": 1
                },
                {
                  "ty": "tr",
                  "o": { "a": 0, "k": 100.0 },
                  "r": { "a": 0, "k": 0.0 },
                  "p": { "a": 0, "k": [0.0, 0.0] },
                  "a": { "a": 0, "k": [0.0, 0.0] },
                  "s": { "a": 0, "k": [100.0, 100.0] },
                  "nm": "Transform",
                  "sk": { "a": 0, "k": 0.0 },
                  "sa": { "a": 0, "k": 0.0 }
                }
              ]
            },
            {
              "ty": "gr",
              "nm": "Group 5",
              "bm": 0,
              "mn": "ADBE Vector Group",
              "it": [
                {
                  "ty": "sh",
                  "nm": "Path 1",
                  "mn": "ADBE Vector Shape - Group",
                  "ind": 0,
                  "ks": {
                    "k": {
                      "i": [
                        [13.259, -9.974],
                        [0.0, 0.0],
                        [-0.288, -1.286],
                        [0.0, 0.0],
                        [0.0, 25.212],
                        [-29.407, 0.0],
                        [0.0, -30.287]
                      ],
                      "o": [
                        [0.0, 0.0],
                        [-17.39, 23.646],
                        [0.0, 0.0],
                        [-22.499, -6.394],
                        [0.0, -30.287],
                        [29.392, 0.0],
                        [0.0, 18.202]
                      ],
                      "v": [
                        [153.132, 104.595],
                        [155.64, 123.456],
                        [113.019, 131.274],
                        [107.563, 113.145],
                        [68.535, 60.302],
                        [121.775, 5.478],
                        [175.0, 60.302]
                      ],
                      "c": true
                    },
                    "a": 0
                  }
                },
                {
                  "ty": "st",
                  "nm": "Stroke 1",
                  "bm": 0,
                  "mn": "ADBE Vector Graphic - Stroke",
                  "lc": 2,
                  "lj": 2,
                  "o": { "a": 0, "k": 100.0 },
                  "w": { "a": 0, "k": 0.684 },
                  "c": { "a": 0, "k": [0.0, 0.0, 0.0, 1.0] }
                },
                {
                  "ty": "fl",
                  "nm": "Fill 1",
                  "bm": 0,
                  "mn": "ADBE Vector Graphic - Fill",
                  "c": { "a": 0, "k": [1.0, 1.0, 1.0, 1.0] },
                  "o": { "a": 0, "k": 100.0 },
                  "r": 1
                },
                {
                  "ty": "tr",
                  "o": { "a": 0, "k": 100.0 },
                  "r": { "a": 0, "k": 0.0 },
                  "p": { "a": 0, "k": [0.0, 0.0] },
                  "a": { "a": 0, "k": [0.0, 0.0] },
                  "s": { "a": 0, "k": [100.0, 100.0] },
                  "nm": "Transform",
                  "sk": { "a": 0, "k": 0.0 },
                  "sa": { "a": 0, "k": 0.0 }
                }
              ]
            },
            {
              "ty": "tr",
              "o": { "a": 0, "k": 100.0 },
              "r": { "a": 0, "k": 0.0 },
              "p": { "a": 0, "k": [0.0, 0.0] },
              "a": { "a": 0, "k": [0.0, 0.0] },
              "s": { "a": 0, "k": [100.0, 100.0] },
              "nm": "Transform",
              "sk": { "a": 0, "k": 0.0 },
              "sa": { "a": 0, "k": 0.0 }
            }
          ]
        }
      ],
      "ip": 0,
      "op": 250,
      "st": 0.0
    }
  ],
  "markers": []
}
