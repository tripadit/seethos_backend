{
  "v": "5.7.11",
  "ip": 0,
  "op": 126,
  "fr": 25,
  "w": 512,
  "h": 512,
  "nm": "C",
  "assets": [],
  "layers": [
    {
      "ind": 1,
      "nm": "L",
      "sr": 1.0,
      "ks": {
        "o": { "a": 0, "k": 100 },
        "r": { "a": 0, "k": 0 },
        "p": { "a": 0, "k": [384.594, 285.659, 0], "l": 2 },
        "a": { "a": 0, "k": [107.594, 38.659, 0], "l": 2 },
        "s": { "a": 0, "k": [100, 100, 100], "l": 2 }
      },
      "shapes": [
        {
          "ty": "gr",
          "nm": "G",
          "bm": 0,
          "it": [
            {
              "ty": "sh",
              "nm": "P",
              "ind": 0,
              "ks": {
                "k": [
                  {
                    "i": { "x": 0.667, "y": 1.0 },
                    "o": { "x": 0.333, "y": 0.0 },
                    "t": 0,
                    "s": [
                      {
                        "i": [
                          [0.0, 0.0],
                          [0.0, 0.0]
                        ],
                        "o": [
                          [0.0, 0.0],
                          [0.0, 0.0]
                        ],
                        "v": [
                          [124.499, 55.698],
                          [85.346, 16.545]
                        ],
                        "c": false
                      }
                    ]
                  },
                  {
                    "i": { "x": 0.667, "y": 1.0 },
                    "o": { "x": 0.333, "y": 0.0 },
                    "t": 31.25,
                    "s": [
                      {
                        "i": [
                          [0.0, 0.0],
                          [0.0, 0.0]
                        ],
                        "o": [
                          [0.0, 0.0],
                          [0.0, 0.0]
                        ],
                        "v": [
                          [97.499, 29.698],
                          [85.346, 16.545]
                        ],
                        "c": false
                      }
                    ]
                  },
                  {
                    "i": { "x": 0.667, "y": 1.0 },
                    "o": { "x": 0.333, "y": 0.0 },
                    "t": 62,
                    "s": [
                      {
                        "i": [
                          [0.0, 0.0],
                          [0.0, 0.0]
                        ],
                        "o": [
                          [0.0, 0.0],
                          [0.0, 0.0]
                        ],
                        "v": [
                          [124.499, 55.698],
                          [85.346, 16.545]
                        ],
                        "c": false
                      }
                    ]
                  },
                  {
                    "i": { "x": 0.667, "y": 1.0 },
                    "o": { "x": 0.333, "y": 0.0 },
                    "t": 93.75,
                    "s": [
                      {
                        "i": [
                          [0.0, 0.0],
                          [0.0, 0.0]
                        ],
                        "o": [
                          [0.0, 0.0],
                          [0.0, 0.0]
                        ],
                        "v": [
                          [97.499, 29.698],
                          [85.346, 16.545]
                        ],
                        "c": false
                      }
                    ]
                  },
                  {
                    "t": 125,
                    "s": [
                      {
                        "i": [
                          [0.0, 0.0],
                          [0.0, 0.0]
                        ],
                        "o": [
                          [0.0, 0.0],
                          [0.0, 0.0]
                        ],
                        "v": [
                          [124.499, 55.698],
                          [85.346, 16.545]
                        ],
                        "c": false
                      }
                    ]
                  }
                ],
                "a": 1
              }
            },
            {
              "ty": "st",
              "nm": "S",
              "bm": 0,
              "lc": 2,
              "lj": 2,
              "o": { "a": 0, "k": 100 },
              "w": { "a": 0, "k": 1.176 },
              "c": { "a": 0, "k": [0, 0, 0, 1] }
            },
            {
              "ty": "tr",
              "o": { "a": 0, "k": 100 },
              "r": { "a": 0, "k": 0 },
              "p": { "a": 0, "k": [0, 0] },
              "a": { "a": 0, "k": [0, 0] },
              "s": { "a": 0, "k": [100, 100] },
              "nm": "T",
              "sk": { "a": 0, "k": 0 },
              "sa": { "a": 0, "k": 0 }
            }
          ]
        },
        {
          "ty": "gr",
          "nm": "G",
          "bm": 0,
          "it": [
            {
              "ty": "sh",
              "nm": "P",
              "ind": 0,
              "ks": {
                "k": [
                  {
                    "i": { "x": 0.667, "y": 1.0 },
                    "o": { "x": 0.333, "y": 0.0 },
                    "t": 0,
                    "s": [
                      {
                        "i": [
                          [0.0, -1.613],
                          [1.613, 0.0],
                          [0.0, 1.613],
                          [-1.589, 0.0]
                        ],
                        "o": [
                          [0.0, 1.613],
                          [-1.589, 0.0],
                          [0.0, -1.613],
                          [1.613, 0.0]
                        ],
                        "v": [
                          [129.843, 57.836],
                          [126.93, 60.773],
                          [124.016, 57.836],
                          [126.93, 54.947]
                        ],
                        "c": true
                      }
                    ]
                  },
                  {
                    "i": { "x": 0.667, "y": 1.0 },
                    "o": { "x": 0.333, "y": 0.0 },
                    "t": 31.25,
                    "s": [
                      {
                        "i": [
                          [0.0, -1.613],
                          [1.613, 0.0],
                          [0.0, 1.613],
                          [-1.589, 0.0]
                        ],
                        "o": [
                          [0.0, 1.613],
                          [-1.589, 0.0],
                          [0.0, -1.613],
                          [1.613, 0.0]
                        ],
                        "v": [
                          [102.843, 31.836],
                          [99.93, 34.773],
                          [97.016, 31.836],
                          [99.93, 28.947]
                        ],
                        "c": true
                      }
                    ]
                  },
                  {
                    "i": { "x": 0.667, "y": 1.0 },
                    "o": { "x": 0.333, "y": 0.0 },
                    "t": 62,
                    "s": [
                      {
                        "i": [
                          [0.0, -1.613],
                          [1.613, 0.0],
                          [0.0, 1.613],
                          [-1.589, 0.0]
                        ],
                        "o": [
                          [0.0, 1.613],
                          [-1.589, 0.0],
                          [0.0, -1.613],
                          [1.613, 0.0]
                        ],
                        "v": [
                          [129.843, 57.836],
                          [126.93, 60.773],
                          [124.016, 57.836],
                          [126.93, 54.947]
                        ],
                        "c": true
                      }
                    ]
                  },
                  {
                    "i": { "x": 0.667, "y": 1.0 },
                    "o": { "x": 0.333, "y": 0.0 },
                    "t": 93.75,
                    "s": [
                      {
                        "i": [
                          [0.0, -1.613],
                          [1.613, 0.0],
                          [0.0, 1.613],
                          [-1.589, 0.0]
                        ],
                        "o": [
                          [0.0, 1.613],
                          [-1.589, 0.0],
                          [0.0, -1.613],
                          [1.613, 0.0]
                        ],
                        "v": [
                          [102.843, 31.836],
                          [99.93, 34.773],
                          [97.016, 31.836],
                          [99.93, 28.947]
                        ],
                        "c": true
                      }
                    ]
                  },
                  {
                    "t": 125,
                    "s": [
                      {
                        "i": [
                          [0.0, -1.613],
                          [1.613, 0.0],
                          [0.0, 1.613],
                          [-1.589, 0.0]
                        ],
                        "o": [
                          [0.0, 1.613],
                          [-1.589, 0.0],
                          [0.0, -1.613],
                          [1.613, 0.0]
                        ],
                        "v": [
                          [129.843, 57.836],
                          [126.93, 60.773],
                          [124.016, 57.836],
                          [126.93, 54.947]
                        ],
                        "c": true
                      }
                    ]
                  }
                ],
                "a": 1
              }
            },
            {
              "ty": "st",
              "nm": "S",
              "bm": 0,
              "lc": 2,
              "lj": 2,
              "o": { "a": 0, "k": 100 },
              "w": { "a": 0, "k": 1.176 },
              "c": { "a": 0, "k": [0, 0, 0, 1] }
            },
            {
              "ty": "fl",
              "nm": "F",
              "bm": 0,
              "c": { "a": 0, "k": [0, 0, 0, 1] },
              "o": { "a": 0, "k": 100 },
              "r": 1
            },
            {
              "ty": "tr",
              "o": { "a": 0, "k": 100 },
              "r": { "a": 0, "k": 0 },
              "p": { "a": 0, "k": [0, 0] },
              "a": { "a": 0, "k": [0, 0] },
              "s": { "a": 0, "k": [100, 100] },
              "nm": "T",
              "sk": { "a": 0, "k": 0 },
              "sa": { "a": 0, "k": 0 }
            }
          ]
        }
      ],
      "ip": 0,
      "op": 200,
      "st": 0.0,
      "ty": 4
    },
    {
      "ind": 2,
      "nm": "L",
      "sr": 1.0,
      "ks": {
        "o": { "a": 0, "k": 100 },
        "r": { "a": 0, "k": 0 },
        "p": { "a": 0, "k": [200.997, 321.468, 0], "l": 2 },
        "a": { "a": 0, "k": [-55.003, 65.468, 0], "l": 2 },
        "s": { "a": 0, "k": [100, 100, 100], "l": 2 }
      },
      "shapes": [
        {
          "ty": "gr",
          "nm": "G",
          "bm": 0,
          "it": [
            {
              "ty": "sh",
              "nm": "P",
              "ind": 0,
              "ks": {
                "k": [
                  {
                    "i": { "x": 0.667, "y": 1.0 },
                    "o": { "x": 0.333, "y": 0.0 },
                    "t": 0,
                    "s": [
                      {
                        "i": [
                          [0.0, 0.0],
                          [0.0, 0.0],
                          [0.0, 0.0]
                        ],
                        "o": [
                          [0.0, 0.0],
                          [0.0, 0.0],
                          [0.0, 0.0]
                        ],
                        "v": [
                          [-35.215, 104.209],
                          [-27.773, 100.28],
                          [-35.215, 96.351]
                        ],
                        "c": true
                      }
                    ]
                  },
                  {
                    "i": { "x": 0.667, "y": 1.0 },
                    "o": { "x": 0.333, "y": 0.0 },
                    "t": 31.25,
                    "s": [
                      {
                        "i": [
                          [0.0, 0.0],
                          [0.0, 0.0],
                          [0.0, 0.0]
                        ],
                        "o": [
                          [0.0, 0.0],
                          [0.0, 0.0],
                          [0.0, 0.0]
                        ],
                        "v": [
                          [-62.715, 104.209],
                          [-55.273, 100.28],
                          [-62.715, 96.351]
                        ],
                        "c": true
                      }
                    ]
                  },
                  {
                    "i": { "x": 0.667, "y": 1.0 },
                    "o": { "x": 0.333, "y": 0.0 },
                    "t": 62,
                    "s": [
                      {
                        "i": [
                          [0.0, 0.0],
                          [0.0, 0.0],
                          [0.0, 0.0]
                        ],
                        "o": [
                          [0.0, 0.0],
                          [0.0, 0.0],
                          [0.0, 0.0]
                        ],
                        "v": [
                          [-35.215, 104.209],
                          [-27.773, 100.28],
                          [-35.215, 96.351]
                        ],
                        "c": true
                      }
                    ]
                  },
                  {
                    "i": { "x": 0.667, "y": 1.0 },
                    "o": { "x": 0.333, "y": 0.0 },
                    "t": 93.75,
                    "s": [
                      {
                        "i": [
                          [0.0, 0.0],
                          [0.0, 0.0],
                          [0.0, 0.0]
                        ],
                        "o": [
                          [0.0, 0.0],
                          [0.0, 0.0],
                          [0.0, 0.0]
                        ],
                        "v": [
                          [-62.715, 104.209],
                          [-55.273, 100.28],
                          [-62.715, 96.351]
                        ],
                        "c": true
                      }
                    ]
                  },
                  {
                    "t": 125,
                    "s": [
                      {
                        "i": [
                          [0.0, 0.0],
                          [0.0, 0.0],
                          [0.0, 0.0]
                        ],
                        "o": [
                          [0.0, 0.0],
                          [0.0, 0.0],
                          [0.0, 0.0]
                        ],
                        "v": [
                          [-35.215, 104.209],
                          [-27.773, 100.28],
                          [-35.215, 96.351]
                        ],
                        "c": true
                      }
                    ]
                  }
                ],
                "a": 1
              }
            },
            {
              "ty": "st",
              "nm": "S",
              "bm": 0,
              "lc": 2,
              "lj": 2,
              "o": { "a": 0, "k": 100 },
              "w": { "a": 0, "k": 1.176 },
              "c": { "a": 0, "k": [0, 0, 0, 1] }
            },
            {
              "ty": "tr",
              "o": { "a": 0, "k": 100 },
              "r": { "a": 0, "k": 0 },
              "p": { "a": 0, "k": [0, 0] },
              "a": { "a": 0, "k": [0, 0] },
              "s": { "a": 0, "k": [100, 100] },
              "nm": "T",
              "sk": { "a": 0, "k": 0 },
              "sa": { "a": 0, "k": 0 }
            }
          ]
        },
        {
          "ty": "gr",
          "nm": "G",
          "bm": 0,
          "it": [
            {
              "ty": "sh",
              "nm": "P",
              "ind": 0,
              "ks": {
                "k": [
                  {
                    "i": { "x": 0.667, "y": 1.0 },
                    "o": { "x": 0.333, "y": 0.0 },
                    "t": 0,
                    "s": [
                      {
                        "i": [
                          [0.0, 0.0],
                          [0.0, 0.0],
                          [0.0, 0.0]
                        ],
                        "o": [
                          [0.0, 0.0],
                          [0.0, 0.0],
                          [0.0, 0.0]
                        ],
                        "v": [
                          [-82.234, 26.727],
                          [-82.234, 100.28],
                          [-41.785, 100.28]
                        ],
                        "c": false
                      }
                    ]
                  },
                  {
                    "i": { "x": 0.667, "y": 1.0 },
                    "o": { "x": 0.333, "y": 0.0 },
                    "t": 31.25,
                    "s": [
                      {
                        "i": [
                          [0.0, 0.0],
                          [0.0, 0.0],
                          [0.0, 0.0]
                        ],
                        "o": [
                          [0.0, 0.0],
                          [0.0, 0.0],
                          [0.0, 0.0]
                        ],
                        "v": [
                          [-82.234, 26.727],
                          [-82.234, 100.28],
                          [-69.285, 100.28]
                        ],
                        "c": false
                      }
                    ]
                  },
                  {
                    "i": { "x": 0.667, "y": 1.0 },
                    "o": { "x": 0.333, "y": 0.0 },
                    "t": 62,
                    "s": [
                      {
                        "i": [
                          [0.0, 0.0],
                          [0.0, 0.0],
                          [0.0, 0.0]
                        ],
                        "o": [
                          [0.0, 0.0],
                          [0.0, 0.0],
                          [0.0, 0.0]
                        ],
                        "v": [
                          [-82.234, 26.727],
                          [-82.234, 100.28],
                          [-41.785, 100.28]
                        ],
                        "c": false
                      }
                    ]
                  },
                  {
                    "i": { "x": 0.667, "y": 1.0 },
                    "o": { "x": 0.333, "y": 0.0 },
                    "t": 93.75,
                    "s": [
                      {
                        "i": [
                          [0.0, 0.0],
                          [0.0, 0.0],
                          [0.0, 0.0]
                        ],
                        "o": [
                          [0.0, 0.0],
                          [0.0, 0.0],
                          [0.0, 0.0]
                        ],
                        "v": [
                          [-82.234, 26.727],
                          [-82.234, 100.28],
                          [-69.285, 100.28]
                        ],
                        "c": false
                      }
                    ]
                  },
                  {
                    "t": 125,
                    "s": [
                      {
                        "i": [
                          [0.0, 0.0],
                          [0.0, 0.0],
                          [0.0, 0.0]
                        ],
                        "o": [
                          [0.0, 0.0],
                          [0.0, 0.0],
                          [0.0, 0.0]
                        ],
                        "v": [
                          [-82.234, 26.727],
                          [-82.234, 100.28],
                          [-41.785, 100.28]
                        ],
                        "c": false
                      }
                    ]
                  }
                ],
                "a": 1
              }
            },
            {
              "ty": "st",
              "nm": "S",
              "bm": 0,
              "lc": 2,
              "lj": 2,
              "o": { "a": 0, "k": 100 },
              "w": { "a": 0, "k": 1.176 },
              "c": { "a": 0, "k": [0, 0, 0, 1] }
            },
            {
              "ty": "tr",
              "o": { "a": 0, "k": 100 },
              "r": { "a": 0, "k": 0 },
              "p": { "a": 0, "k": [0, 0] },
              "a": { "a": 0, "k": [0, 0] },
              "s": { "a": 0, "k": [100, 100] },
              "nm": "T",
              "sk": { "a": 0, "k": 0 },
              "sa": { "a": 0, "k": 0 }
            }
          ]
        }
      ],
      "ip": 0,
      "op": 200,
      "st": 0.0,
      "ty": 4
    },
    {
      "ind": 3,
      "nm": "L",
      "sr": 1.0,
      "ks": {
        "o": { "a": 0, "k": 100 },
        "r": { "a": 0, "k": 0 },
        "p": { "a": 0, "k": [168.131, 180.467, 0], "l": 2 },
        "a": { "a": 0, "k": [-87.869, -75.533, 0], "l": 2 },
        "s": { "a": 0, "k": [100, 100, 100], "l": 2 }
      },
      "shapes": [
        {
          "ty": "gr",
          "nm": "G",
          "bm": 0,
          "it": [
            {
              "ty": "sh",
              "nm": "P",
              "ind": 0,
              "ks": {
                "k": {
                  "i": [
                    [0.0, 0.0],
                    [0.0, 0.0],
                    [0.0, 0.0]
                  ],
                  "o": [
                    [0.0, 0.0],
                    [0.0, 0.0],
                    [0.0, 0.0]
                  ],
                  "v": [
                    [-94.664, -61.34],
                    [-80.672, -75.332],
                    [-95.066, -89.726]
                  ],
                  "c": false
                },
                "a": 0
              }
            },
            {
              "ty": "st",
              "nm": "S",
              "bm": 0,
              "lc": 2,
              "lj": 2,
              "o": { "a": 0, "k": 100 },
              "w": { "a": 0, "k": 1.176 },
              "c": { "a": 0, "k": [0, 0, 0, 1] }
            },
            {
              "ty": "tr",
              "o": { "a": 0, "k": 100 },
              "r": { "a": 0, "k": 0 },
              "p": { "a": 0, "k": [0, 0] },
              "a": { "a": 0, "k": [0, 0] },
              "s": { "a": 0, "k": [100, 100] },
              "nm": "T",
              "sk": { "a": 0, "k": 0 },
              "sa": { "a": 0, "k": 0 }
            }
          ]
        },
        {
          "ty": "tm",
          "nm": "T",
          "s": {
            "a": 1,
            "k": [
              {
                "i": { "x": [0.667], "y": [1.0] },
                "o": { "x": [0.333], "y": [0.0] },
                "t": 31,
                "s": [50]
              },
              {
                "i": { "x": [0.667], "y": [1.0] },
                "o": { "x": [0.333], "y": [0.0] },
                "t": 48,
                "s": [0]
              },
              {
                "i": { "x": [0.667], "y": [1.0] },
                "o": { "x": [0.333], "y": [0.0] },
                "t": 100,
                "s": [0]
              },
              { "t": 115, "s": [50] }
            ]
          },
          "e": {
            "a": 1,
            "k": [
              {
                "i": { "x": [0.667], "y": [1.0] },
                "o": { "x": [0.333], "y": [0.0] },
                "t": 31,
                "s": [50]
              },
              {
                "i": { "x": [0.667], "y": [1.0] },
                "o": { "x": [0.333], "y": [0.0] },
                "t": 48,
                "s": [100]
              },
              {
                "i": { "x": [0.667], "y": [1.0] },
                "o": { "x": [0.333], "y": [0.0] },
                "t": 100,
                "s": [100]
              },
              { "t": 115, "s": [50] }
            ]
          },
          "o": { "a": 0, "k": 0 },
          "m": 1
        }
      ],
      "ip": 0,
      "op": 200,
      "st": 0.0,
      "ty": 4
    },
    {
      "ind": 4,
      "nm": "L",
      "sr": 1.0,
      "ks": {
        "o": { "a": 0, "k": 100 },
        "r": {
          "a": 1,
          "k": [
            {
              "i": { "x": [0.833], "y": [0.833] },
              "o": { "x": [0.167], "y": [0.167] },
              "t": 0,
              "s": [0]
            },
            { "t": 125, "s": [360] }
          ]
        },
        "p": {
          "k": [
            {
              "i": { "x": 0.667, "y": 1.0 },
              "o": { "x": 0.333, "y": 0.0 },
              "t": 0,
              "s": [430.533, 156.245, 0],
              "ti": [0, 0, 0],
              "to": [0, 0, 0]
            },
            {
              "i": { "x": 0.667, "y": 1.0 },
              "o": { "x": 0.333, "y": 0.0 },
              "t": 62,
              "s": [360.533, 196.245, 0],
              "ti": [0, 0, 0],
              "to": [0, 0, 0]
            },
            { "t": 125, "s": [430.533, 156.245, 0] }
          ],
          "a": 1,
          "l": 2
        },
        "a": { "a": 0, "k": [104.533, -59.755, 0], "l": 2 },
        "s": { "a": 0, "k": [100, 100, 100], "l": 2 }
      },
      "shapes": [
        {
          "ty": "gr",
          "nm": "G",
          "bm": 0,
          "it": [
            {
              "ty": "sh",
              "nm": "P",
              "ind": 0,
              "ks": {
                "k": {
                  "i": [
                    [0.0, -0.668],
                    [0.0, 0.0],
                    [0.668, 0.0],
                    [0.0, 0.0],
                    [0.0, 0.668],
                    [0.0, 0.0],
                    [-0.668, 0.0],
                    [0.0, 0.0]
                  ],
                  "o": [
                    [0.0, 0.0],
                    [0.0, 0.668],
                    [0.0, 0.0],
                    [-0.668, 0.0],
                    [0.0, 0.0],
                    [0.0, -0.668],
                    [0.0, 0.0],
                    [0.668, 0.0]
                  ],
                  "v": [
                    [107.71, -61.723],
                    [107.71, -57.788],
                    [106.5, -56.578],
                    [102.566, -56.578],
                    [101.356, -57.788],
                    [101.356, -61.723],
                    [102.566, -62.933],
                    [106.5, -62.933]
                  ],
                  "c": true
                },
                "a": 0
              }
            },
            {
              "ty": "st",
              "nm": "S",
              "bm": 0,
              "lc": 2,
              "lj": 2,
              "o": { "a": 0, "k": 100 },
              "w": { "a": 0, "k": 1.176 },
              "c": { "a": 0, "k": [0, 0, 0, 1] }
            },
            {
              "ty": "tr",
              "o": { "a": 0, "k": 100 },
              "r": { "a": 0, "k": 0 },
              "p": { "a": 0, "k": [0, 0] },
              "a": { "a": 0, "k": [0, 0] },
              "s": { "a": 0, "k": [100, 100] },
              "nm": "T",
              "sk": { "a": 0, "k": 0 },
              "sa": { "a": 0, "k": 0 }
            }
          ]
        }
      ],
      "ip": 0,
      "op": 200,
      "st": 0.0,
      "ty": 4
    },
    {
      "ind": 5,
      "nm": "L",
      "sr": 1.0,
      "ks": {
        "o": { "a": 0, "k": 100 },
        "r": { "a": 0, "k": 0 },
        "p": { "a": 0, "k": [251.961, 128.446, 0], "l": 2 },
        "a": { "a": 0, "k": [-24.039, -117.554, 0], "l": 2 },
        "s": { "a": 0, "k": [100, 100, 100], "l": 2 }
      },
      "shapes": [
        {
          "ty": "gr",
          "nm": "G",
          "bm": 0,
          "it": [
            {
              "ty": "sh",
              "nm": "P",
              "ind": 0,
              "ks": {
                "k": [
                  {
                    "i": { "x": 0.667, "y": 1.0 },
                    "o": { "x": 0.333, "y": 0.0 },
                    "t": 0,
                    "s": [
                      {
                        "i": [
                          [0.0, 0.0],
                          [0.0, 0.0]
                        ],
                        "o": [
                          [0.0, 0.0],
                          [0.0, 0.0]
                        ],
                        "v": [
                          [-45.559, -117.554],
                          [14.822, -117.554]
                        ],
                        "c": false
                      }
                    ]
                  },
                  {
                    "i": { "x": 0.667, "y": 1.0 },
                    "o": { "x": 0.333, "y": 0.0 },
                    "t": 31.25,
                    "s": [
                      {
                        "i": [
                          [0.0, 0.0],
                          [0.0, 0.0]
                        ],
                        "o": [
                          [0.0, 0.0],
                          [0.0, 0.0]
                        ],
                        "v": [
                          [-5.559, -117.554],
                          [14.822, -117.554]
                        ],
                        "c": false
                      }
                    ]
                  },
                  {
                    "i": { "x": 0.667, "y": 1.0 },
                    "o": { "x": 0.333, "y": 0.0 },
                    "t": 62,
                    "s": [
                      {
                        "i": [
                          [0.0, 0.0],
                          [0.0, 0.0]
                        ],
                        "o": [
                          [0.0, 0.0],
                          [0.0, 0.0]
                        ],
                        "v": [
                          [-45.559, -117.554],
                          [14.822, -117.554]
                        ],
                        "c": false
                      }
                    ]
                  },
                  {
                    "i": { "x": 0.667, "y": 1.0 },
                    "o": { "x": 0.333, "y": 0.0 },
                    "t": 93.75,
                    "s": [
                      {
                        "i": [
                          [0.0, 0.0],
                          [0.0, 0.0]
                        ],
                        "o": [
                          [0.0, 0.0],
                          [0.0, 0.0]
                        ],
                        "v": [
                          [-5.559, -117.554],
                          [14.822, -117.554]
                        ],
                        "c": false
                      }
                    ]
                  },
                  {
                    "t": 125,
                    "s": [
                      {
                        "i": [
                          [0.0, 0.0],
                          [0.0, 0.0]
                        ],
                        "o": [
                          [0.0, 0.0],
                          [0.0, 0.0]
                        ],
                        "v": [
                          [-45.559, -117.554],
                          [14.822, -117.554]
                        ],
                        "c": false
                      }
                    ]
                  }
                ],
                "a": 1
              }
            },
            {
              "ty": "st",
              "nm": "S",
              "bm": 0,
              "lc": 2,
              "lj": 2,
              "o": { "a": 0, "k": 100 },
              "w": { "a": 0, "k": 1.176 },
              "c": { "a": 0, "k": [0, 0, 0, 1] }
            },
            {
              "ty": "tr",
              "o": { "a": 0, "k": 100 },
              "r": { "a": 0, "k": 0 },
              "p": { "a": 0, "k": [0, 0] },
              "a": { "a": 0, "k": [0, 0] },
              "s": { "a": 0, "k": [100, 100] },
              "nm": "T",
              "sk": { "a": 0, "k": 0 },
              "sa": { "a": 0, "k": 0 }
            }
          ]
        },
        {
          "ty": "gr",
          "nm": "G",
          "bm": 0,
          "it": [
            {
              "ty": "sh",
              "nm": "P",
              "ind": 0,
              "ks": {
                "k": [
                  {
                    "i": { "x": 0.667, "y": 1.0 },
                    "o": { "x": 0.333, "y": 0.0 },
                    "t": 0,
                    "s": [
                      {
                        "i": [
                          [0.0, -0.746],
                          [0.0, 0.0],
                          [0.746, 0.0],
                          [0.0, 0.0],
                          [0.0, 0.746],
                          [0.0, 0.0],
                          [-0.746, 0.0],
                          [0.0, 0.0]
                        ],
                        "o": [
                          [0.0, 0.0],
                          [0.0, 0.746],
                          [0.0, 0.0],
                          [-0.746, 0.0],
                          [0.0, 0.0],
                          [0.0, -0.746],
                          [0.0, 0.0],
                          [0.746, 0.0]
                        ],
                        "v": [
                          [-53.489, -120.908],
                          [-53.489, -114.201],
                          [-54.84, -112.849],
                          [-61.547, -112.849],
                          [-62.899, -114.201],
                          [-62.899, -120.908],
                          [-61.547, -122.259],
                          [-54.84, -122.259]
                        ],
                        "c": true
                      }
                    ]
                  },
                  {
                    "i": { "x": 0.667, "y": 1.0 },
                    "o": { "x": 0.333, "y": 0.0 },
                    "t": 31.25,
                    "s": [
                      {
                        "i": [
                          [0.0, -0.746],
                          [0.0, 0.0],
                          [0.746, 0.0],
                          [0.0, 0.0],
                          [0.0, 0.746],
                          [0.0, 0.0],
                          [-0.746, 0.0],
                          [0.0, 0.0]
                        ],
                        "o": [
                          [0.0, 0.0],
                          [0.0, 0.746],
                          [0.0, 0.0],
                          [-0.746, 0.0],
                          [0.0, 0.0],
                          [0.0, -0.746],
                          [0.0, 0.0],
                          [0.746, 0.0]
                        ],
                        "v": [
                          [-13.489, -120.908],
                          [-13.489, -114.201],
                          [-14.84, -112.849],
                          [-21.547, -112.849],
                          [-22.899, -114.201],
                          [-22.899, -120.908],
                          [-21.547, -122.259],
                          [-14.84, -122.259]
                        ],
                        "c": true
                      }
                    ]
                  },
                  {
                    "i": { "x": 0.667, "y": 1.0 },
                    "o": { "x": 0.333, "y": 0.0 },
                    "t": 62,
                    "s": [
                      {
                        "i": [
                          [0.0, -0.746],
                          [0.0, 0.0],
                          [0.746, 0.0],
                          [0.0, 0.0],
                          [0.0, 0.746],
                          [0.0, 0.0],
                          [-0.746, 0.0],
                          [0.0, 0.0]
                        ],
                        "o": [
                          [0.0, 0.0],
                          [0.0, 0.746],
                          [0.0, 0.0],
                          [-0.746, 0.0],
                          [0.0, 0.0],
                          [0.0, -0.746],
                          [0.0, 0.0],
                          [0.746, 0.0]
                        ],
                        "v": [
                          [-53.489, -120.908],
                          [-53.489, -114.201],
                          [-54.84, -112.849],
                          [-61.547, -112.849],
                          [-62.899, -114.201],
                          [-62.899, -120.908],
                          [-61.547, -122.259],
                          [-54.84, -122.259]
                        ],
                        "c": true
                      }
                    ]
                  },
                  {
                    "i": { "x": 0.667, "y": 1.0 },
                    "o": { "x": 0.333, "y": 0.0 },
                    "t": 93.75,
                    "s": [
                      {
                        "i": [
                          [0.0, -0.746],
                          [0.0, 0.0],
                          [0.746, 0.0],
                          [0.0, 0.0],
                          [0.0, 0.746],
                          [0.0, 0.0],
                          [-0.746, 0.0],
                          [0.0, 0.0]
                        ],
                        "o": [
                          [0.0, 0.0],
                          [0.0, 0.746],
                          [0.0, 0.0],
                          [-0.746, 0.0],
                          [0.0, 0.0],
                          [0.0, -0.746],
                          [0.0, 0.0],
                          [0.746, 0.0]
                        ],
                        "v": [
                          [-13.489, -120.908],
                          [-13.489, -114.201],
                          [-14.84, -112.849],
                          [-21.547, -112.849],
                          [-22.899, -114.201],
                          [-22.899, -120.908],
                          [-21.547, -122.259],
                          [-14.84, -122.259]
                        ],
                        "c": true
                      }
                    ]
                  },
                  {
                    "t": 125,
                    "s": [
                      {
                        "i": [
                          [0.0, -0.746],
                          [0.0, 0.0],
                          [0.746, 0.0],
                          [0.0, 0.0],
                          [0.0, 0.746],
                          [0.0, 0.0],
                          [-0.746, 0.0],
                          [0.0, 0.0]
                        ],
                        "o": [
                          [0.0, 0.0],
                          [0.0, 0.746],
                          [0.0, 0.0],
                          [-0.746, 0.0],
                          [0.0, 0.0],
                          [0.0, -0.746],
                          [0.0, 0.0],
                          [0.746, 0.0]
                        ],
                        "v": [
                          [-53.489, -120.908],
                          [-53.489, -114.201],
                          [-54.84, -112.849],
                          [-61.547, -112.849],
                          [-62.899, -114.201],
                          [-62.899, -120.908],
                          [-61.547, -122.259],
                          [-54.84, -122.259]
                        ],
                        "c": true
                      }
                    ]
                  }
                ],
                "a": 1
              }
            },
            {
              "ty": "st",
              "nm": "S",
              "bm": 0,
              "lc": 2,
              "lj": 2,
              "o": { "a": 0, "k": 100 },
              "w": { "a": 0, "k": 1.176 },
              "c": { "a": 0, "k": [0, 0, 0, 1] }
            },
            {
              "ty": "tr",
              "o": { "a": 0, "k": 100 },
              "r": { "a": 0, "k": 0 },
              "p": { "a": 0, "k": [0, 0] },
              "a": { "a": 0, "k": [0, 0] },
              "s": { "a": 0, "k": [100, 100] },
              "nm": "T",
              "sk": { "a": 0, "k": 0 },
              "sa": { "a": 0, "k": 0 }
            }
          ]
        }
      ],
      "ip": 0,
      "op": 200,
      "st": 0.0,
      "ty": 4
    },
    {
      "ind": 6,
      "nm": "L",
      "sr": 1.0,
      "ks": {
        "o": { "a": 0, "k": 100 },
        "r": { "a": 0, "k": 0 },
        "p": { "a": 0, "k": [105.106, 346.95, 0], "l": 2 },
        "a": { "a": 0, "k": [-150.894, 90.95, 0], "l": 2 },
        "s": {
          "k": [
            {
              "i": { "x": [0.833, 0.833, 0.833], "y": [0.833, 0.833, 0.833] },
              "o": { "x": [0.167, 0.167, 0.167], "y": [0.167, 0.167, 0.167] },
              "t": 70,
              "s": [0, 0, 100]
            },
            { "t": 77, "s": [100, 100, 100] }
          ],
          "a": 1,
          "l": 2
        }
      },
      "shapes": [
        {
          "ty": "gr",
          "nm": "G",
          "bm": 0,
          "it": [
            {
              "ty": "sh",
              "nm": "P",
              "ind": 0,
              "ks": {
                "k": {
                  "i": [
                    [-0.927, 0.0],
                    [0.0, 0.0],
                    [0.155, 0.915],
                    [5.09, 0.0],
                    [0.825, -4.903]
                  ],
                  "o": [
                    [0.0, 0.0],
                    [0.928, 0.0],
                    [-0.831, -4.902],
                    [-5.124, 0.0],
                    [-0.154, 0.914]
                  ],
                  "v": [
                    [-184.137, 101.404],
                    [-166.757, 101.404],
                    [-165.269, 99.648],
                    [-175.446, 91.08],
                    [-185.625, 99.649]
                  ],
                  "c": true
                },
                "a": 0
              }
            },
            {
              "ty": "st",
              "nm": "S",
              "bm": 0,
              "lc": 2,
              "lj": 2,
              "o": { "a": 0, "k": 100 },
              "w": { "a": 0, "k": 1.176 },
              "c": { "a": 0, "k": [0, 0, 0, 1] }
            },
            {
              "ty": "tr",
              "o": { "a": 0, "k": 100 },
              "r": { "a": 0, "k": 0 },
              "p": { "a": 0, "k": [0, 0] },
              "a": { "a": 0, "k": [0, 0] },
              "s": { "a": 0, "k": [100, 100] },
              "nm": "T",
              "sk": { "a": 0, "k": 0 },
              "sa": { "a": 0, "k": 0 }
            }
          ]
        },
        {
          "ty": "gr",
          "nm": "G",
          "bm": 0,
          "it": [
            {
              "ty": "sh",
              "nm": "P",
              "ind": 0,
              "ks": {
                "k": {
                  "i": [
                    [0.0, -1.87],
                    [-1.87, 0.0],
                    [0.0, 1.87],
                    [1.842, 0.0]
                  ],
                  "o": [
                    [0.0, 1.87],
                    [1.842, 0.0],
                    [0.0, -1.87],
                    [-1.87, 0.0]
                  ],
                  "v": [
                    [-178.814, 83.843],
                    [-175.437, 87.248],
                    [-172.06, 83.843],
                    [-175.437, 80.494]
                  ],
                  "c": true
                },
                "a": 0
              }
            },
            {
              "ty": "st",
              "nm": "S",
              "bm": 0,
              "lc": 2,
              "lj": 2,
              "o": { "a": 0, "k": 100 },
              "w": { "a": 0, "k": 1.176 },
              "c": { "a": 0, "k": [0, 0, 0, 1] }
            },
            {
              "ty": "fl",
              "nm": "F",
              "bm": 0,
              "c": { "a": 0, "k": [0, 0, 0, 1] },
              "o": { "a": 0, "k": 100 },
              "r": 1
            },
            {
              "ty": "tr",
              "o": { "a": 0, "k": 100 },
              "r": { "a": 0, "k": 0 },
              "p": { "a": 0, "k": [0, 0] },
              "a": { "a": 0, "k": [0, 0] },
              "s": { "a": 0, "k": [100, 100] },
              "nm": "T",
              "sk": { "a": 0, "k": 0 },
              "sa": { "a": 0, "k": 0 }
            }
          ]
        },
        {
          "ty": "gr",
          "nm": "G",
          "bm": 0,
          "it": [
            {
              "ty": "sh",
              "nm": "P",
              "ind": 0,
              "ks": {
                "k": {
                  "i": [
                    [0.0, -10.911],
                    [10.911, 0.0],
                    [0.0, 10.937],
                    [-10.937, 0.0]
                  ],
                  "o": [
                    [0.0, 10.937],
                    [-10.937, 0.0],
                    [0.0, -10.911],
                    [10.911, 0.0]
                  ],
                  "v": [
                    [-155.69, 90.936],
                    [-175.434, 110.706],
                    [-195.203, 90.936],
                    [-175.434, 71.193]
                  ],
                  "c": true
                },
                "a": 0
              }
            },
            {
              "ty": "st",
              "nm": "S",
              "bm": 0,
              "lc": 2,
              "lj": 2,
              "o": { "a": 0, "k": 100 },
              "w": { "a": 0, "k": 1.176 },
              "c": { "a": 0, "k": [0, 0, 0, 1] }
            },
            {
              "ty": "tr",
              "o": { "a": 0, "k": 100 },
              "r": { "a": 0, "k": 0 },
              "p": { "a": 0, "k": [0, 0] },
              "a": { "a": 0, "k": [0, 0] },
              "s": { "a": 0, "k": [100, 100] },
              "nm": "T",
              "sk": { "a": 0, "k": 0 },
              "sa": { "a": 0, "k": 0 }
            }
          ]
        },
        {
          "ty": "gr",
          "nm": "G",
          "bm": 0,
          "it": [
            {
              "ty": "sh",
              "nm": "P",
              "ind": 0,
              "ks": {
                "k": {
                  "i": [
                    [13.531, 0.0],
                    [0.0, 13.545],
                    [-13.545, 0.0],
                    [0.0, -13.531]
                  ],
                  "o": [
                    [-13.545, 0.0],
                    [0.0, -13.531],
                    [13.531, 0.0],
                    [0.0, 13.545]
                  ],
                  "v": [
                    [-175.434, 115.502],
                    [-200.0, 90.937],
                    [-175.434, 66.397],
                    [-150.894, 90.937]
                  ],
                  "c": true
                },
                "a": 0
              }
            },
            {
              "ty": "tm",
              "nm": "T",
              "s": { "a": 0, "k": 0 },
              "e": { "a": 0, "k": 100 },
              "o": {
                "a": 1,
                "k": [
                  {
                    "i": { "x": [0.667], "y": [1.0] },
                    "o": { "x": [0.333], "y": [0.0] },
                    "t": 0,
                    "s": [0]
                  },
                  { "t": 125, "s": [360] }
                ]
              },
              "m": 1
            },
            {
              "ty": "st",
              "nm": "S",
              "bm": 0,
              "lc": 2,
              "lj": 2,
              "o": { "a": 0, "k": 100 },
              "w": { "a": 0, "k": 1.176 },
              "d": [{ "nm": "d", "n": "d", "v": { "a": 0, "k": 4.706 } }],
              "c": { "a": 0, "k": [0, 0, 0, 1] }
            },
            {
              "ty": "tr",
              "o": { "a": 0, "k": 100 },
              "r": { "a": 0, "k": 0 },
              "p": { "a": 0, "k": [0, 0] },
              "a": { "a": 0, "k": [0, 0] },
              "s": { "a": 0, "k": [100, 100] },
              "nm": "T",
              "sk": { "a": 0, "k": 0 },
              "sa": { "a": 0, "k": 0 }
            }
          ]
        }
      ],
      "ip": 0,
      "op": 200,
      "st": 0.0,
      "ty": 4
    },
    {
      "ind": 7,
      "nm": "L",
      "sr": 1.0,
      "ks": {
        "o": { "a": 0, "k": 100 },
        "r": { "a": 0, "k": 0 },
        "p": { "a": 0, "k": [114.499, 347.089, 0], "l": 2 },
        "a": { "a": 0, "k": [-141.501, 91.089, 0], "l": 2 },
        "s": { "a": 0, "k": [100, 100, 100], "l": 2 }
      },
      "shapes": [
        {
          "ty": "gr",
          "nm": "G",
          "bm": 0,
          "it": [
            {
              "ty": "sh",
              "nm": "P",
              "ind": 0,
              "ks": {
                "k": {
                  "i": [
                    [0.0, 0.0],
                    [0.0, 0.0]
                  ],
                  "o": [
                    [0.0, 0.0],
                    [0.0, 0.0]
                  ],
                  "v": [
                    [-132.101, 91.089],
                    [-150.901, 91.089]
                  ],
                  "c": false
                },
                "a": 0
              }
            },
            {
              "ty": "st",
              "nm": "S",
              "bm": 0,
              "lc": 2,
              "lj": 2,
              "o": { "a": 0, "k": 100 },
              "w": { "a": 0, "k": 1.176 },
              "c": { "a": 0, "k": [0, 0, 0, 1] }
            },
            {
              "ty": "tr",
              "o": { "a": 0, "k": 100 },
              "r": { "a": 0, "k": 0 },
              "p": { "a": 0, "k": [0, 0] },
              "a": { "a": 0, "k": [0, 0] },
              "s": { "a": 0, "k": [100, 100] },
              "nm": "T",
              "sk": { "a": 0, "k": 0 },
              "sa": { "a": 0, "k": 0 }
            }
          ]
        },
        {
          "ty": "tm",
          "nm": "T",
          "s": { "a": 0, "k": 0 },
          "e": {
            "a": 1,
            "k": [
              {
                "i": { "x": [0.833], "y": [0.833] },
                "o": { "x": [0.167], "y": [0.167] },
                "t": 61,
                "s": [0]
              },
              { "t": 70, "s": [100] }
            ]
          },
          "o": { "a": 0, "k": 0 },
          "m": 1
        }
      ],
      "ip": 0,
      "op": 200,
      "st": 0.0,
      "ty": 4
    },
    {
      "ind": 8,
      "nm": "L",
      "sr": 1.0,
      "ks": {
        "o": { "a": 0, "k": 100 },
        "r": { "a": 0, "k": 0 },
        "p": { "a": 0, "k": [133.123, 337.63, 0], "l": 2 },
        "a": { "a": 0, "k": [-122.877, 81.63, 0], "l": 2 },
        "s": {
          "k": [
            {
              "i": { "x": [0.833, 0.833, 0.833], "y": [0.833, 0.833, 0.833] },
              "o": { "x": [0.167, 0.167, 0.167], "y": [0.167, 0.167, 0.167] },
              "t": 55,
              "s": [0, 0, 100]
            },
            { "t": 61, "s": [100, 100, 100] }
          ],
          "a": 1,
          "l": 2
        }
      },
      "shapes": [
        {
          "ty": "gr",
          "nm": "G",
          "bm": 0,
          "it": [
            {
              "ty": "sh",
              "nm": "P",
              "ind": 0,
              "ks": {
                "k": {
                  "i": [
                    [0.0, 0.0],
                    [0.0, 0.0],
                    [0.0, 0.0],
                    [0.0, 0.0],
                    [0.0, 0.0]
                  ],
                  "o": [
                    [0.0, 0.0],
                    [0.0, 0.0],
                    [0.0, 0.0],
                    [0.0, 0.0],
                    [0.0, 0.0]
                  ],
                  "v": [
                    [-113.536, 90.971],
                    [-122.877, 100.289],
                    [-132.1, 91.089],
                    [-132.218, 90.971],
                    [-122.877, 81.63]
                  ],
                  "c": true
                },
                "a": 0
              }
            },
            {
              "ty": "st",
              "nm": "S",
              "bm": 0,
              "lc": 2,
              "lj": 2,
              "o": { "a": 0, "k": 100 },
              "w": { "a": 0, "k": 1.176 },
              "c": { "a": 0, "k": [0, 0, 0, 1] }
            },
            {
              "ty": "tr",
              "o": { "a": 0, "k": 100 },
              "r": { "a": 0, "k": 0 },
              "p": { "a": 0, "k": [0, 0] },
              "a": { "a": 0, "k": [0, 0] },
              "s": { "a": 0, "k": [100, 100] },
              "nm": "T",
              "sk": { "a": 0, "k": 0 },
              "sa": { "a": 0, "k": 0 }
            }
          ]
        }
      ],
      "ip": 0,
      "op": 200,
      "st": 0.0,
      "ty": 4
    },
    {
      "ind": 9,
      "nm": "L",
      "sr": 1.0,
      "ks": {
        "o": { "a": 0, "k": 100 },
        "r": { "a": 0, "k": 0 },
        "p": { "a": 0, "k": [133.123, 303.135, 0], "l": 2 },
        "a": { "a": 0, "k": [-122.877, 47.135, 0], "l": 2 },
        "s": { "a": 0, "k": [100, 100, 100], "l": 2 }
      },
      "shapes": [
        {
          "ty": "gr",
          "nm": "G",
          "bm": 0,
          "it": [
            {
              "ty": "sh",
              "nm": "P",
              "ind": 0,
              "ks": {
                "k": {
                  "i": [
                    [0.0, 0.0],
                    [0.0, 0.0]
                  ],
                  "o": [
                    [0.0, 0.0],
                    [0.0, 0.0]
                  ],
                  "v": [
                    [-122.877, 81.63],
                    [-122.877, 12.64]
                  ],
                  "c": false
                },
                "a": 0
              }
            },
            {
              "ty": "st",
              "nm": "S",
              "bm": 0,
              "lc": 2,
              "lj": 2,
              "o": { "a": 0, "k": 100 },
              "w": { "a": 0, "k": 1.176 },
              "c": { "a": 0, "k": [0, 0, 0, 1] }
            },
            {
              "ty": "tr",
              "o": { "a": 0, "k": 100 },
              "r": { "a": 0, "k": 0 },
              "p": { "a": 0, "k": [0, 0] },
              "a": { "a": 0, "k": [0, 0] },
              "s": { "a": 0, "k": [100, 100] },
              "nm": "T",
              "sk": { "a": 0, "k": 0 },
              "sa": { "a": 0, "k": 0 }
            }
          ]
        },
        {
          "ty": "tm",
          "nm": "T",
          "s": {
            "a": 1,
            "k": [
              {
                "i": { "x": [0.833], "y": [0.833] },
                "o": { "x": [0.167], "y": [0.167] },
                "t": 46,
                "s": [100]
              },
              { "t": 55, "s": [0] }
            ]
          },
          "e": { "a": 0, "k": 100 },
          "o": { "a": 0, "k": 0 },
          "m": 1
        }
      ],
      "ip": 0,
      "op": 200,
      "st": 0.0,
      "ty": 4
    },
    {
      "ind": 10,
      "nm": "L",
      "sr": 1.0,
      "ks": {
        "o": { "a": 0, "k": 100 },
        "r": { "a": 0, "k": 0 },
        "p": { "a": 0, "k": [364.469, 227.933, 0], "l": 2 },
        "a": { "a": 0, "k": [108.469, -28.067, 0], "l": 2 },
        "s": {
          "k": [
            {
              "i": { "x": [0.667, 0.667, 0.667], "y": [1.0, 1.0, 1.0] },
              "o": { "x": [0.333, 0.333, 0.333], "y": [0.0, 0.0, 0.0] },
              "t": 53,
              "s": [0, 0, 100]
            },
            { "t": 60, "s": [100, 100, 100] }
          ],
          "a": 1,
          "l": 2
        }
      },
      "shapes": [
        {
          "ty": "gr",
          "nm": "G",
          "bm": 0,
          "it": [
            {
              "ty": "sh",
              "nm": "P",
              "ind": 0,
              "ks": {
                "k": {
                  "i": [
                    [0.927, 0.0],
                    [0.0, 0.0],
                    [-0.155, 0.915],
                    [-5.09, 0.0],
                    [-0.825, -4.903]
                  ],
                  "o": [
                    [0.0, 0.0],
                    [-0.928, 0.0],
                    [0.831, -4.902],
                    [5.124, 0.0],
                    [0.154, 0.914]
                  ],
                  "v": [
                    [135.629, -2.963],
                    [118.25, -2.963],
                    [116.762, -4.719],
                    [126.939, -13.287],
                    [137.118, -4.718]
                  ],
                  "c": true
                },
                "a": 0
              }
            },
            {
              "ty": "st",
              "nm": "S",
              "bm": 0,
              "lc": 2,
              "lj": 2,
              "o": { "a": 0, "k": 100 },
              "w": { "a": 0, "k": 1.176 },
              "c": { "a": 0, "k": [0, 0, 0, 1] }
            },
            {
              "ty": "tr",
              "o": { "a": 0, "k": 100 },
              "r": { "a": 0, "k": 0 },
              "p": { "a": 0, "k": [0, 0] },
              "a": { "a": 0, "k": [0, 0] },
              "s": { "a": 0, "k": [100, 100] },
              "nm": "T",
              "sk": { "a": 0, "k": 0 },
              "sa": { "a": 0, "k": 0 }
            }
          ]
        },
        {
          "ty": "gr",
          "nm": "G",
          "bm": 0,
          "it": [
            {
              "ty": "sh",
              "nm": "P",
              "ind": 0,
              "ks": {
                "k": {
                  "i": [
                    [0.0, -1.87],
                    [1.87, 0.0],
                    [0.0, 1.87],
                    [-1.842, 0.0]
                  ],
                  "o": [
                    [0.0, 1.87],
                    [-1.842, 0.0],
                    [0.0, -1.87],
                    [1.87, 0.0]
                  ],
                  "v": [
                    [130.306, -20.524],
                    [126.93, -17.119],
                    [123.553, -20.524],
                    [126.93, -23.873]
                  ],
                  "c": true
                },
                "a": 0
              }
            },
            {
              "ty": "st",
              "nm": "S",
              "bm": 0,
              "lc": 2,
              "lj": 2,
              "o": { "a": 0, "k": 100 },
              "w": { "a": 0, "k": 1.176 },
              "c": { "a": 0, "k": [0, 0, 0, 1] }
            },
            {
              "ty": "fl",
              "nm": "F",
              "bm": 0,
              "c": { "a": 0, "k": [0, 0, 0, 1] },
              "o": { "a": 0, "k": 100 },
              "r": 1
            },
            {
              "ty": "tr",
              "o": { "a": 0, "k": 100 },
              "r": { "a": 0, "k": 0 },
              "p": { "a": 0, "k": [0, 0] },
              "a": { "a": 0, "k": [0, 0] },
              "s": { "a": 0, "k": [100, 100] },
              "nm": "T",
              "sk": { "a": 0, "k": 0 },
              "sa": { "a": 0, "k": 0 }
            }
          ]
        },
        {
          "ty": "gr",
          "nm": "G",
          "bm": 0,
          "it": [
            {
              "ty": "gr",
              "nm": "G",
              "bm": 0,
              "it": [
                {
                  "ty": "gr",
                  "nm": "G",
                  "bm": 0,
                  "it": [
                    {
                      "ty": "sh",
                      "nm": "P",
                      "ind": 0,
                      "ks": {
                        "k": {
                          "i": [
                            [0.0, -10.911],
                            [-10.911, 0.0],
                            [0.0, 10.937],
                            [10.937, 0.0]
                          ],
                          "o": [
                            [0.0, 10.937],
                            [10.937, 0.0],
                            [0.0, -10.911],
                            [-10.911, 0.0]
                          ],
                          "v": [
                            [107.183, -11.921],
                            [126.927, 7.849],
                            [146.696, -11.921],
                            [126.927, -31.665]
                          ],
                          "c": true
                        },
                        "a": 0
                      }
                    },
                    {
                      "ty": "st",
                      "nm": "S",
                      "bm": 0,
                      "lc": 2,
                      "lj": 2,
                      "o": { "a": 0, "k": 100 },
                      "w": { "a": 0, "k": 1.176 },
                      "c": { "a": 0, "k": [0, 0, 0, 1] }
                    },
                    {
                      "ty": "tr",
                      "o": { "a": 0, "k": 100 },
                      "r": { "a": 0, "k": 0 },
                      "p": { "a": 0, "k": [0, 0] },
                      "a": { "a": 0, "k": [0, 0] },
                      "s": { "a": 0, "k": [100, 100] },
                      "nm": "T",
                      "sk": { "a": 0, "k": 0 },
                      "sa": { "a": 0, "k": 0 }
                    }
                  ]
                },
                {
                  "ty": "gr",
                  "nm": "G",
                  "bm": 0,
                  "it": [
                    {
                      "ty": "sh",
                      "nm": "P",
                      "ind": 0,
                      "ks": {
                        "k": {
                          "i": [
                            [13.545, 0.0],
                            [0.0, 13.545],
                            [-13.531, 0.0],
                            [0.0, -13.531]
                          ],
                          "o": [
                            [-13.531, 0.0],
                            [0.0, -13.531],
                            [13.545, 0.0],
                            [0.0, 13.545]
                          ],
                          "v": [
                            [126.926, 12.645],
                            [102.386, -11.92],
                            [126.926, -36.46],
                            [151.492, -11.92]
                          ],
                          "c": true
                        },
                        "a": 0
                      }
                    },
                    {
                      "ty": "st",
                      "nm": "S",
                      "bm": 0,
                      "lc": 2,
                      "lj": 2,
                      "o": { "a": 0, "k": 100 },
                      "w": { "a": 0, "k": 1.176 },
                      "d": [{ "nm": "d", "n": "d", "v": { "a": 0, "k": 4.706 } }],
                      "c": { "a": 0, "k": [0, 0, 0, 1] }
                    },
                    {
                      "ty": "tm",
                      "nm": "T",
                      "s": { "a": 0, "k": 0 },
                      "e": { "a": 0, "k": 100 },
                      "o": {
                        "a": 1,
                        "k": [
                          {
                            "i": { "x": [0.667], "y": [1.0] },
                            "o": { "x": [0.333], "y": [0.0] },
                            "t": 0,
                            "s": [0]
                          },
                          { "t": 125, "s": [360] }
                        ]
                      },
                      "m": 1
                    },
                    {
                      "ty": "tr",
                      "o": { "a": 0, "k": 100 },
                      "r": { "a": 0, "k": 0 },
                      "p": { "a": 0, "k": [0, 0] },
                      "a": { "a": 0, "k": [0, 0] },
                      "s": { "a": 0, "k": [100, 100] },
                      "nm": "T",
                      "sk": { "a": 0, "k": 0 },
                      "sa": { "a": 0, "k": 0 }
                    }
                  ]
                },
                {
                  "ty": "tr",
                  "o": { "a": 0, "k": 100 },
                  "r": { "a": 0, "k": 0 },
                  "p": { "a": 0, "k": [0, 0] },
                  "a": { "a": 0, "k": [0, 0] },
                  "s": { "a": 0, "k": [100, 100] },
                  "nm": "T",
                  "sk": { "a": 0, "k": 0 },
                  "sa": { "a": 0, "k": 0 }
                }
              ]
            },
            {
              "ty": "tr",
              "o": { "a": 0, "k": 100 },
              "r": { "a": 0, "k": 0 },
              "p": { "a": 0, "k": [0, 0] },
              "a": { "a": 0, "k": [0, 0] },
              "s": { "a": 0, "k": [100, 100] },
              "nm": "T",
              "sk": { "a": 0, "k": 0 },
              "sa": { "a": 0, "k": 0 }
            }
          ]
        }
      ],
      "ip": 0,
      "op": 200,
      "st": 0.0,
      "ty": 4
    },
    {
      "ind": 11,
      "nm": "L",
      "sr": 1.0,
      "ks": {
        "o": { "a": 0, "k": 100 },
        "r": { "a": 0, "k": 0 },
        "p": { "a": 0, "k": [363.421, 145.31, 0], "l": 2 },
        "a": { "a": 0, "k": [107.421, -110.69, 0], "l": 2 },
        "s": {
          "k": [
            {
              "i": { "x": [0.667, 0.667, 0.667], "y": [1.0, 1.0, 1.0] },
              "o": { "x": [0.333, 0.333, 0.333], "y": [0.0, 0.0, 0.0] },
              "t": 46,
              "s": [0, 0, 100]
            },
            { "t": 53, "s": [100, 100, 100] }
          ],
          "a": 1,
          "l": 2
        }
      },
      "shapes": [
        {
          "ty": "gr",
          "nm": "G",
          "bm": 0,
          "it": [
            {
              "ty": "sh",
              "nm": "P",
              "ind": 0,
              "ks": {
                "k": {
                  "i": [
                    [0.927, 0.0],
                    [0.0, 0.0],
                    [-0.155, 0.915],
                    [-5.09, 0.0],
                    [-0.825, -4.903]
                  ],
                  "o": [
                    [0.0, 0.0],
                    [-0.928, 0.0],
                    [0.831, -4.902],
                    [5.124, 0.0],
                    [0.154, 0.914]
                  ],
                  "v": [
                    [135.629, -117.097],
                    [118.25, -117.097],
                    [116.762, -118.854],
                    [126.939, -127.421],
                    [137.118, -118.852]
                  ],
                  "c": true
                },
                "a": 0
              }
            },
            {
              "ty": "st",
              "nm": "S",
              "bm": 0,
              "lc": 2,
              "lj": 2,
              "o": { "a": 0, "k": 100 },
              "w": { "a": 0, "k": 1.176 },
              "c": { "a": 0, "k": [0, 0, 0, 1] }
            },
            {
              "ty": "tr",
              "o": { "a": 0, "k": 100 },
              "r": { "a": 0, "k": 0 },
              "p": { "a": 0, "k": [0, 0] },
              "a": { "a": 0, "k": [0, 0] },
              "s": { "a": 0, "k": [100, 100] },
              "nm": "T",
              "sk": { "a": 0, "k": 0 },
              "sa": { "a": 0, "k": 0 }
            }
          ]
        },
        {
          "ty": "gr",
          "nm": "G",
          "bm": 0,
          "it": [
            {
              "ty": "sh",
              "nm": "P",
              "ind": 0,
              "ks": {
                "k": {
                  "i": [
                    [0.0, -1.87],
                    [1.87, 0.0],
                    [0.0, 1.87],
                    [-1.842, 0.0]
                  ],
                  "o": [
                    [0.0, 1.87],
                    [-1.842, 0.0],
                    [0.0, -1.87],
                    [1.87, 0.0]
                  ],
                  "v": [
                    [130.306, -134.658],
                    [126.93, -131.253],
                    [123.553, -134.658],
                    [126.93, -138.007]
                  ],
                  "c": true
                },
                "a": 0
              }
            },
            {
              "ty": "st",
              "nm": "S",
              "bm": 0,
              "lc": 2,
              "lj": 2,
              "o": { "a": 0, "k": 100 },
              "w": { "a": 0, "k": 1.176 },
              "c": { "a": 0, "k": [0, 0, 0, 1] }
            },
            {
              "ty": "fl",
              "nm": "F",
              "bm": 0,
              "c": { "a": 0, "k": [0, 0, 0, 1] },
              "o": { "a": 0, "k": 100 },
              "r": 1
            },
            {
              "ty": "tr",
              "o": { "a": 0, "k": 100 },
              "r": { "a": 0, "k": 0 },
              "p": { "a": 0, "k": [0, 0] },
              "a": { "a": 0, "k": [0, 0] },
              "s": { "a": 0, "k": [100, 100] },
              "nm": "T",
              "sk": { "a": 0, "k": 0 },
              "sa": { "a": 0, "k": 0 }
            }
          ]
        },
        {
          "ty": "gr",
          "nm": "G",
          "bm": 0,
          "it": [
            {
              "ty": "sh",
              "nm": "P",
              "ind": 0,
              "ks": {
                "k": {
                  "i": [
                    [0.0, -10.911],
                    [-10.911, 0.0],
                    [0.0, 10.937],
                    [10.937, 0.0]
                  ],
                  "o": [
                    [0.0, 10.937],
                    [10.937, 0.0],
                    [0.0, -10.911],
                    [-10.911, 0.0]
                  ],
                  "v": [
                    [107.183, -126.055],
                    [126.927, -106.286],
                    [146.696, -126.055],
                    [126.927, -145.799]
                  ],
                  "c": true
                },
                "a": 0
              }
            },
            {
              "ty": "st",
              "nm": "S",
              "bm": 0,
              "lc": 2,
              "lj": 2,
              "o": { "a": 0, "k": 100 },
              "w": { "a": 0, "k": 1.176 },
              "c": { "a": 0, "k": [0, 0, 0, 1] }
            },
            {
              "ty": "tr",
              "o": { "a": 0, "k": 100 },
              "r": { "a": 0, "k": 0 },
              "p": { "a": 0, "k": [0, 0] },
              "a": { "a": 0, "k": [0, 0] },
              "s": { "a": 0, "k": [100, 100] },
              "nm": "T",
              "sk": { "a": 0, "k": 0 },
              "sa": { "a": 0, "k": 0 }
            }
          ]
        },
        {
          "ty": "gr",
          "nm": "G",
          "bm": 0,
          "it": [
            {
              "ty": "sh",
              "nm": "P",
              "ind": 0,
              "ks": {
                "k": {
                  "i": [
                    [13.545, 0.0],
                    [0.0, 13.545],
                    [-13.531, 0.0],
                    [0.0, -13.531]
                  ],
                  "o": [
                    [-13.531, 0.0],
                    [0.0, -13.531],
                    [13.545, 0.0],
                    [0.0, 13.545]
                  ],
                  "v": [
                    [126.926, -101.49],
                    [102.386, -126.056],
                    [126.926, -150.596],
                    [151.492, -126.056]
                  ],
                  "c": true
                },
                "a": 0
              }
            },
            {
              "ty": "tm",
              "nm": "T",
              "s": { "a": 0, "k": 0 },
              "e": { "a": 0, "k": 100 },
              "o": {
                "a": 1,
                "k": [
                  {
                    "i": { "x": [0.667], "y": [1.0] },
                    "o": { "x": [0.333], "y": [0.0] },
                    "t": 0,
                    "s": [0]
                  },
                  { "t": 125, "s": [360] }
                ]
              },
              "m": 1
            },
            {
              "ty": "st",
              "nm": "S",
              "bm": 0,
              "lc": 2,
              "lj": 2,
              "o": { "a": 0, "k": 100 },
              "w": { "a": 0, "k": 1.176 },
              "d": [{ "nm": "d", "n": "d", "v": { "a": 0, "k": 4.706 } }],
              "c": { "a": 0, "k": [0, 0, 0, 1] }
            },
            {
              "ty": "tr",
              "o": { "a": 0, "k": 100 },
              "r": { "a": 0, "k": 0 },
              "p": { "a": 0, "k": [0, 0] },
              "a": { "a": 0, "k": [0, 0] },
              "s": { "a": 0, "k": [100, 100] },
              "nm": "T",
              "sk": { "a": 0, "k": 0 },
              "sa": { "a": 0, "k": 0 }
            }
          ]
        }
      ],
      "ip": 0,
      "op": 200,
      "st": 0.0,
      "ty": 4
    },
    {
      "ind": 12,
      "nm": "L",
      "sr": 1.0,
      "ks": {
        "o": { "a": 0, "k": 100 },
        "r": { "a": 0, "k": 0 },
        "p": { "a": 0, "k": [157.667, 219.54, 0], "l": 2 },
        "a": { "a": 0, "k": [-98.333, -36.46, 0], "l": 2 },
        "s": {
          "k": [
            {
              "i": { "x": [0.667, 0.667, 0.667], "y": [1.0, 1.0, 1.0] },
              "o": { "x": [0.333, 0.333, 0.333], "y": [0.0, 0.0, 0.0] },
              "t": 39,
              "s": [0, 0, 100]
            },
            { "t": 46, "s": [100, 100, 100] }
          ],
          "a": 1,
          "l": 2
        }
      },
      "shapes": [
        {
          "ty": "gr",
          "nm": "G",
          "bm": 0,
          "it": [
            {
              "ty": "sh",
              "nm": "P",
              "ind": 0,
              "ks": {
                "k": {
                  "i": [
                    [-0.927, 0.0],
                    [0.0, 0.0],
                    [0.155, 0.915],
                    [5.09, 0.0],
                    [0.825, -4.903]
                  ],
                  "o": [
                    [0.0, 0.0],
                    [0.928, 0.0],
                    [-0.831, -4.902],
                    [-5.124, 0.0],
                    [-0.154, 0.914]
                  ],
                  "v": [
                    [-131.575, -2.963],
                    [-114.196, -2.963],
                    [-112.708, -4.719],
                    [-122.885, -13.287],
                    [-133.064, -4.718]
                  ],
                  "c": true
                },
                "a": 0
              }
            },
            {
              "ty": "st",
              "nm": "S",
              "bm": 0,
              "lc": 2,
              "lj": 2,
              "o": { "a": 0, "k": 100 },
              "w": { "a": 0, "k": 1.176 },
              "c": { "a": 0, "k": [0, 0, 0, 1] }
            },
            {
              "ty": "tr",
              "o": { "a": 0, "k": 100 },
              "r": { "a": 0, "k": 0 },
              "p": { "a": 0, "k": [0, 0] },
              "a": { "a": 0, "k": [0, 0] },
              "s": { "a": 0, "k": [100, 100] },
              "nm": "T",
              "sk": { "a": 0, "k": 0 },
              "sa": { "a": 0, "k": 0 }
            }
          ]
        },
        {
          "ty": "gr",
          "nm": "G",
          "bm": 0,
          "it": [
            {
              "ty": "sh",
              "nm": "P",
              "ind": 0,
              "ks": {
                "k": {
                  "i": [
                    [0.0, -1.87],
                    [-1.87, 0.0],
                    [0.0, 1.87],
                    [1.842, 0.0]
                  ],
                  "o": [
                    [0.0, 1.87],
                    [1.842, 0.0],
                    [0.0, -1.87],
                    [-1.87, 0.0]
                  ],
                  "v": [
                    [-126.252, -20.524],
                    [-122.876, -17.119],
                    [-119.499, -20.524],
                    [-122.876, -23.873]
                  ],
                  "c": true
                },
                "a": 0
              }
            },
            {
              "ty": "st",
              "nm": "S",
              "bm": 0,
              "lc": 2,
              "lj": 2,
              "o": { "a": 0, "k": 100 },
              "w": { "a": 0, "k": 1.176 },
              "c": { "a": 0, "k": [0, 0, 0, 1] }
            },
            {
              "ty": "fl",
              "nm": "F",
              "bm": 0,
              "c": { "a": 0, "k": [0, 0, 0, 1] },
              "o": { "a": 0, "k": 100 },
              "r": 1
            },
            {
              "ty": "tr",
              "o": { "a": 0, "k": 100 },
              "r": { "a": 0, "k": 0 },
              "p": { "a": 0, "k": [0, 0] },
              "a": { "a": 0, "k": [0, 0] },
              "s": { "a": 0, "k": [100, 100] },
              "nm": "T",
              "sk": { "a": 0, "k": 0 },
              "sa": { "a": 0, "k": 0 }
            }
          ]
        },
        {
          "ty": "gr",
          "nm": "G",
          "bm": 0,
          "it": [
            {
              "ty": "sh",
              "nm": "P",
              "ind": 0,
              "ks": {
                "k": {
                  "i": [
                    [0.0, -10.911],
                    [10.911, 0.0],
                    [0.0, 10.937],
                    [-10.937, 0.0]
                  ],
                  "o": [
                    [0.0, 10.937],
                    [-10.937, 0.0],
                    [0.0, -10.911],
                    [10.911, 0.0]
                  ],
                  "v": [
                    [-103.129, -11.921],
                    [-122.873, 7.849],
                    [-142.642, -11.921],
                    [-122.873, -31.665]
                  ],
                  "c": true
                },
                "a": 0
              }
            },
            {
              "ty": "st",
              "nm": "S",
              "bm": 0,
              "lc": 2,
              "lj": 2,
              "o": { "a": 0, "k": 100 },
              "w": { "a": 0, "k": 1.176 },
              "c": { "a": 0, "k": [0, 0, 0, 1] }
            },
            {
              "ty": "tr",
              "o": { "a": 0, "k": 100 },
              "r": { "a": 0, "k": 0 },
              "p": { "a": 0, "k": [0, 0] },
              "a": { "a": 0, "k": [0, 0] },
              "s": { "a": 0, "k": [100, 100] },
              "nm": "T",
              "sk": { "a": 0, "k": 0 },
              "sa": { "a": 0, "k": 0 }
            }
          ]
        },
        {
          "ty": "gr",
          "nm": "G",
          "bm": 0,
          "it": [
            {
              "ty": "sh",
              "nm": "P",
              "ind": 0,
              "ks": {
                "k": {
                  "i": [
                    [13.531, 0.0],
                    [0.0, 13.545],
                    [-13.545, 0.0],
                    [0.0, -13.531]
                  ],
                  "o": [
                    [-13.545, 0.0],
                    [0.0, -13.531],
                    [13.531, 0.0],
                    [0.0, 13.545]
                  ],
                  "v": [
                    [-122.873, 12.645],
                    [-147.439, -11.92],
                    [-122.873, -36.46],
                    [-98.333, -11.92]
                  ],
                  "c": true
                },
                "a": 0
              }
            },
            {
              "ty": "st",
              "nm": "S",
              "bm": 0,
              "lc": 2,
              "lj": 2,
              "o": { "a": 0, "k": 100 },
              "w": { "a": 0, "k": 1.176 },
              "d": [{ "nm": "d", "n": "d", "v": { "a": 0, "k": 4.706 } }],
              "c": { "a": 0, "k": [0, 0, 0, 1] }
            },
            {
              "ty": "tm",
              "nm": "T",
              "s": { "a": 0, "k": 0 },
              "e": { "a": 0, "k": 100 },
              "o": {
                "a": 1,
                "k": [
                  {
                    "i": { "x": [0.667], "y": [1.0] },
                    "o": { "x": [0.333], "y": [0.0] },
                    "t": 0,
                    "s": [0]
                  },
                  { "t": 125, "s": [360] }
                ]
              },
              "m": 1
            },
            {
              "ty": "tr",
              "o": { "a": 0, "k": 100 },
              "r": { "a": 0, "k": 0 },
              "p": { "a": 0, "k": [0, 0] },
              "a": { "a": 0, "k": [0, 0] },
              "s": { "a": 0, "k": [100, 100] },
              "nm": "T",
              "sk": { "a": 0, "k": 0 },
              "sa": { "a": 0, "k": 0 }
            }
          ]
        }
      ],
      "ip": 0,
      "op": 200,
      "st": 0.0,
      "ty": 4
    },
    {
      "ind": 13,
      "nm": "L",
      "sr": 1.0,
      "ks": {
        "o": { "a": 0, "k": 100 },
        "r": { "a": 0, "k": 0 },
        "p": { "a": 0, "k": [162.167, 154.01, 0], "l": 2 },
        "a": { "a": 0, "k": [-93.833, -101.99, 0], "l": 2 },
        "s": {
          "k": [
            {
              "i": { "x": [0.667, 0.667, 0.667], "y": [1.0, 1.0, 1.0] },
              "o": { "x": [0.333, 0.333, 0.333], "y": [0.0, 0.0, 0.0] },
              "t": 32,
              "s": [0, 0, 100]
            },
            { "t": 39, "s": [100, 100, 100] }
          ],
          "x": "var $bm_rt;\nvar fx = effect('\u015dlosilo pli pura');\nvar doAnticipation = fx(1).value;\nvar doInterpolation = fx(2).value;\nvar doFollowThrough = fx(3).value;\nvar damping = $bm_div(fx(15).value, 10);\nvar elasticity = $bm_div(fx(13).value, 10);\nvar bounce = fx(17).value;\nvar anticipationDuration = fx(5).value;\nvar anticipationQuantity = $bm_div(fx(6).value, 100);\nvar slowIn = $bm_div(fx(9).value, 100);\nvar slowOut = $bm_div(fx(10).value, 100);\nvar spatialMode = fx(21).value;\nvar spatialDoInterpolation = fx(20).value;\nvar moBlurPrecision = fx(32).value;\nvar elasticityRandom = fx(14).value;\nvar dampingRandom = fx(16).value;\nvar softBody = fx(28).value;\nvar flexibility = $bm_div(fx(29).value, 100);\nvar doOverlap = fx(23).value;\nvar overlapDuration = fx(24).value;\nvar overlapRandom = fx(25).value;\nvar threshold = $bm_div($bm_div(1, moBlurPrecision), 1000);\nvar zeroValue;\nif ($bm_isInstanceOfArray(value)) {\n    if (value.length == 2)\n        zeroValue = [\n            0,\n            0\n        ];\n    else if (value.length == 3)\n        zeroValue = [\n            0,\n            0,\n            0\n        ];\n    else if (value.length == 4)\n        zeroValue = [\n            0,\n            0,\n            0,\n            0\n        ];\n} else\n    zeroValue = 0;\nvar isThisSpatial = isSpatial(thisProperty);\nvar isThisPosition = thisProperty === $bm_transform.position;\nvar simulate = false;\nif (isThisSpatial) {\n    doInterpolation = doInterpolation && spatialDoInterpolation;\n    if (isThisPosition && thisProperty.numKeys > 0) {\n        doOverlap = false;\n        simulate = false;\n    } else {\n        simulate = spatialMode == 2;\n        doOverlap = overlapDuration != 0 && doOverlap && simulate;\n    }\n} else {\n    doOverlap = false;\n}\nif (!doOverlap) {\n    overlapDuration = 0;\n}\nif (simulate && softBody && isThisSpatial && !isThisPosition && (doFollowThrough || doOverlap)) {\n    var distanceRatio = $bm_div(length(valueAtTime(0), $bm_transform.anchorPoint), $bm_div(thisLayer.width, 2));\n    distanceRatio = $bm_div($bm_sum(1, $bm_mul(distanceRatio, flexibility)), 2);\n    if (doFollowThrough) {\n        elasticity = $bm_div(elasticity, distanceRatio);\n        damping = $bm_div(damping, distanceRatio);\n    }\n    if (doOverlap) {\n        overlapDuration = $bm_mul(overlapDuration, distanceRatio);\n    }\n}\nseedRandom(0, true);\nif (doFollowThrough) {\n    if (elasticityRandom > 0)\n        elasticity = addNoise(elasticity, elasticityRandom);\n    if (dampingRandom > 0)\n        damping = addNoise(damping, dampingRandom);\n}\nif (doOverlap) {\n    if (doOverlap && overlapRandom > 0)\n        overlapDuration = addNoise(overlapDuration, overlapRandom);\n}\nvar result = value;\nfunction isSpatial(prop) {\n    if (!(prop.value instanceof Array))\n        return false;\n    if (prop.value.length != 2 && prop.value.length != 3)\n        return false;\n    try {\n        if (typeof prop.speed !== 'undefined')\n            return true;\n    } catch (e) {\n        return false;\n    }\n}\nfunction addNoise(val, quantity) {\n    var randomValue = random(0.9, 1.1);\n    var noiseValue = noise($bm_mul(valueAtTime(0), randomValue));\n    noiseValue = $bm_mul(noiseValue, $bm_div(quantity, 100));\n    return $bm_mul(val, $bm_sum(noiseValue, 1));\n}\nfunction isAfterLastKey() {\n    if (numKeys == 0)\n        return false;\n    var nKey = nearestKey(time);\n    return nKey.time <= time && nKey.index == numKeys;\n}\nfunction isStill(t, threshold) {\n    var d = $bm_sub(valueAtTime(t), valueAtTime($bm_sum(t, framesToTime(1))));\n    if ($bm_isInstanceOfArray(d)) {\n        for (var i = 0; i < d.length; i++) {\n            d[i] = Math.abs(d[i]);\n            if (d[i] >= threshold) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        d = Math.abs(d);\n        return d < threshold;\n    }\n}\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\n    if (arguments.length !== 5 && arguments.length !== 6)\n        return t;\n    var a = $bm_sub(value2, value1);\n    var b = $bm_sub(tMax, tMin);\n    if (b == 0)\n        return t;\n    var c = clamp($bm_div($bm_sub(t, tMin), b), 0, 1);\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4)\n        bezierPoints = [\n            0.33,\n            0,\n            0.66,\n            1\n        ];\n    return $bm_sum($bm_mul(a, h(c, bezierPoints)), value1);\n    function h(f, g) {\n        var x = $bm_mul(3, g[0]);\n        var j = $bm_sub($bm_mul(3, $bm_sub(g[2], g[0])), x);\n        var k = $bm_sub($bm_sub(1, x), j);\n        var l = $bm_mul(3, g[1]);\n        var m = $bm_sub($bm_mul(3, $bm_sub(g[3], g[1])), l);\n        var n = $bm_sub($bm_sub(1, l), m);\n        var d = f;\n        for (var i = 0; i < 5; i++) {\n            var z = $bm_sub($bm_mul(d, $bm_sum(x, $bm_mul(d, $bm_sum(j, $bm_mul(d, k))))), f);\n            if (Math.abs(z) < 0.001)\n                break;\n            d = $bm_sub(d, $bm_div(z, $bm_sum(x, $bm_mul(d, $bm_sum($bm_mul(2, j), $bm_mul($bm_mul(3, k), d))))));\n        }\n        return $bm_mul(d, $bm_sum(l, $bm_mul(d, $bm_sum(m, $bm_mul(d, n)))));\n    }\n}\nfunction getPropWorldSpeed(t, prop) {\n    return length(getPropWorldVelocity(t, prop));\n}\nfunction getPrevKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time <= t)\n        return nKey;\n    if (nKey.index > 1)\n        return key($bm_sub(nKey.index, 1));\n    return null;\n}\nfunction getNextKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time >= t)\n        return nKey;\n    if (nKey.index < numKeys)\n        return key($bm_sum(nKey.index, 1));\n    return null;\n}\nfunction getPropWorldVelocity(t, prop) {\n    return $bm_mul($bm_sub(getPropWorldValue($bm_sum(t, 0.005), prop), getPropWorldValue($bm_sub(t, 0.005), prop)), 100);\n}\nfunction getLayerWorldPos(t, l) {\n    return l.toWorld(l.anchorPoint, t);\n}\nfunction getPropWorldValue(t, prop) {\n    if (isPosition(prop))\n        return getLayerWorldPos(t, thisLayer);\n    return thisLayer.toWorld(prop.valueAtTime(t), t);\n}\nfunction isPosition(prop) {\n    return prop === $bm_transform.position;\n}\nfunction isKeyTop(k, axis) {\n    var prevSpeed = velocityAtTime($bm_sub(k.time, threshold));\n    var nextSpeed = velocityAtTime($bm_sum(k.time, threshold));\n    if ($bm_isInstanceOfArray(value)) {\n        prevSpeed = prevSpeed[axis];\n        nextSpeed = nextSpeed[axis];\n    }\n    if (Math.abs(prevSpeed) < 0.01 || Math.abs(nextSpeed) < 0.01)\n        return true;\n    return $bm_mul(prevSpeed, nextSpeed) < 0;\n}\nfunction anticipate() {\n    var anticipation = zeroValue;\n    if (isAfterLastKey())\n        return anticipation;\n    if (numKeys < 2)\n        return anticipation;\n    var nextKey = getNextKey(time);\n    var aKey = nextKey;\n    if (!isStill(aKey.time - 0.1, 0.1)) {\n        aKey = getPrevKey(time);\n        if (!isStill(aKey.time - 0.1, 0.1))\n            return anticipation;\n    }\n    if (aKey.index == numKeys)\n        return anticipation;\n    var anticipationMiddle = aKey.time;\n    var anticipationStart = $bm_sub(anticipationMiddle, anticipationDuration);\n    var anticipationEnd = key(aKey.index + 1).time;\n    var startValue = anticipation;\n    var midValue = $bm_mul($bm_sum($bm_neg(valueAtTime($bm_sum(anticipationMiddle, anticipationDuration))), aKey.value), anticipationQuantity);\n    var endValue = anticipation;\n    if (time < anticipationStart) {\n        return anticipation;\n    } else if (time < anticipationMiddle) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue[i], midValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue, midValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else if (time <= anticipationEnd) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue[i], endValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue, endValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else {\n        return anticipation;\n    }\n}\nfunction followThroughAtTime(t) {\n    var fThrough = zeroValue;\n    if (elasticity == 0)\n        return fThrough;\n    var propSpeed;\n    if (!simulate) {\n        if (numKeys < 2)\n            return fThrough;\n        if (nearestKey(t).index == 1)\n            return fThrough;\n        propSpeed = length(velocityAtTime(t));\n        if (propSpeed >= threshold)\n            return fThrough;\n    } else {\n        propSpeed = getPropWorldSpeed(t, thisProperty);\n        if (propSpeed >= threshold)\n            return fThrough;\n    }\n    var fThroughStart = 0;\n    var fThroughTime = 0;\n    if (simulate) {\n        var speedI = getPropWorldSpeed(t, thisProperty);\n        var i = t;\n        while (speedI < threshold && i > 0) {\n            i = $bm_sub(i, $bm_div(thisComp.frameDuration, moBlurPrecision));\n            speedI = getPropWorldSpeed(i, thisProperty);\n        }\n        fThroughStart = i;\n    } else {\n        var fThroughKey = getPrevKey(t);\n        fThroughStart = fThroughKey.time;\n    }\n    if (fThroughStart == 0)\n        return fThrough;\n    fThroughTime = $bm_sub(t, fThroughStart);\n    if (simulate)\n        fThrough = $bm_div(getPropWorldVelocity($bm_sub(fThroughStart, thisComp.frameDuration), thisProperty), 2);\n    else\n        fThrough = $bm_div(velocityAtTime($bm_sub(fThroughStart, thisComp.frameDuration)), 2);\n    if (bounce) {\n        var cycleDamp = Math.exp($bm_mul($bm_mul(fThroughTime, damping), 0.1));\n        var damp = $bm_div(Math.exp($bm_mul(fThroughTime, damping)), $bm_div(elasticity, 2));\n        var cycleDuration = $bm_div(1, $bm_mul(elasticity, 2));\n        cycleDuration = Math.round(timeToFrames(cycleDuration));\n        cycleDuration = framesToTime(cycleDuration);\n        var midDuration = $bm_div(cycleDuration, 2);\n        var maxValue = $bm_mul(fThrough, midDuration);\n        var cycvarime = fThroughTime;\n        var numEndCycles = 1;\n        while (cycvarime > cycleDuration) {\n            cycvarime = $bm_sub(cycvarime, cycleDuration);\n            cycleDuration = $bm_div(cycleDuration, cycleDamp);\n            cycleDuration = Math.round(timeToFrames(cycleDuration));\n            if (cycleDuration < 2) {\n                cycleDuration = 2;\n                numEndCycles++;\n            }\n            cycleDuration = framesToTime(cycleDuration);\n            midDuration = $bm_div(cycleDuration, 2);\n            maxValue = $bm_div($bm_mul(fThrough, midDuration), damp);\n            if (numEndCycles > 100 / damping && maxValue < threshold)\n                return zeroValue;\n        }\n        if (cycvarime < midDuration)\n            fThrough = bezierInterpolation(cycvarime, 0, midDuration, 0, maxValue, [\n                0,\n                0.1,\n                slowIn,\n                1\n            ]);\n        else\n            fThrough = bezierInterpolation(cycvarime, midDuration, cycleDuration, maxValue, 0, [\n                $bm_sub(1, slowIn),\n                0,\n                1,\n                0.9\n            ]);\n    } else {\n        var damp = Math.exp($bm_mul(fThroughTime, damping));\n        var sinus = $bm_mul($bm_mul($bm_mul(elasticity, fThroughTime), 2), Math.PI);\n        sinus = Math.sin(sinus);\n        sinus = $bm_mul($bm_div(0.3, elasticity), sinus);\n        sinus = $bm_div(sinus, damp);\n        if (Math.abs(sinus) < $bm_div(threshold, 100))\n            return 0;\n        fThrough = $bm_mul(fThrough, sinus);\n        if (threshold > 0) {\n            fThrough = $bm_mul(fThrough, $bm_sub(1, $bm_div(propSpeed, threshold)));\n        }\n    }\n    if (bounce) {\n        var prevValue = valueAtTime($bm_sub(fThroughStart, thisComp.frameDuration));\n        var startValue = valueAtTime(fThroughStart);\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < prevValue.length; i++) {\n                if (prevValue[i] > startValue[i])\n                    fThrough[i] = Math.abs(fThrough[i]);\n                if (prevValue[i] < startValue[i])\n                    fThrough[i] = $bm_neg(Math.abs(fThrough[i]));\n            }\n        } else {\n            if (prevValue > startValue)\n                fThrough = Math.abs(fThrough);\n            if (prevValue < startValue)\n                fThrough = $bm_neg(Math.abs(fThrough));\n        }\n    }\n    if (simulate) {\n        if (!isThisPosition) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer));\n            fThrough = $bm_sub(thisLayer.fromWorld(fThrough), thisLayer.anchorPoint);\n        } else if (thisLayer.hasParent) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer.parent));\n            fThrough = $bm_sub(thisLayer.parent.fromWorld(fThrough), thisLayer.parent.anchorPoint);\n        }\n    }\n    return fThrough;\n}\nfunction followThrough() {\n    var propSpeed = length(velocity);\n    if (propSpeed < threshold)\n        return followThroughAtTime($bm_sub(time, overlapDuration));\n    var fThrough = zeroValue;\n    var t = time;\n    while (t > 0) {\n        t = $bm_sub(t, thisComp.frameDuration);\n        if (simulate)\n            propSpeed = getPropWorldSpeed($bm_sub(t, overlapDuration), thisProperty);\n        else\n            propSpeed = length(velocityAtTime(t));\n        if (propSpeed < threshold) {\n            fThrough = followThroughAtTime($bm_sub(t, overlapDuration));\n            break;\n        }\n    }\n    return linear(time, t, $bm_sum(t, $bm_mul(anticipationDuration, 2)), fThrough, zeroValue);\n}\nfunction smartSmooth(axis) {\n    var startKey = nearestKey(time);\n    var endKey = startKey;\n    if (time == startKey.time)\n        return 0;\n    if (time < startKey.time && startKey.index == 1)\n        return 0;\n    if (time > startKey.time && startKey.index == numKeys)\n        return 0;\n    if (time < startKey.time)\n        startKey = key($bm_sub(startKey.index, 1));\n    if (time > startKey.time)\n        endKey = key($bm_sum(startKey.index, 1));\n    var sI = 0.66;\n    var sO = 0.33;\n    var sIV = 1;\n    var sOV = 0;\n    var sVal = startKey.value;\n    var eVal = endKey.value;\n    if ($bm_isInstanceOfArray(value)) {\n        sVal = sVal[axis];\n        eVal = eVal[axis];\n    }\n    var sTime = startKey.time;\n    var eTime = endKey.time;\n    if (isKeyTop(startKey, axis))\n        sO = slowOut;\n    else {\n        var prevKey = key($bm_sub(startKey.index, 1));\n        var pVal = prevKey.value;\n        if ($bm_isInstanceOfArray(value))\n            pVal = pVal[axis];\n        sOV = $bm_div($bm_sub(sVal, pVal), $bm_sub(eVal, pVal));\n    }\n    if (isKeyTop(endKey, axis)) {\n        sI = slowIn;\n        if (endKey.index != numKeys) {\n            var nextKey = key($bm_sum(endKey.index, 1));\n            var nVal = nextKey.value;\n            if ($bm_isInstanceOfArray(value))\n                nVal = nVal[axis];\n            if (Math.abs(nVal - eVal) < 0.01 && doFollowThrough)\n                sI = 1;\n        }\n    } else {\n        var nextKey = key($bm_sum(endKey.index, 1));\n        var nVal = nextKey.value;\n        if ($bm_isInstanceOfArray(value))\n            nVal = nVal[axis];\n        sIV = $bm_div($bm_sub(eVal, sVal), $bm_sub(nVal, sVal));\n    }\n    if (endKey.index == numKeys && doFollowThrough) {\n        sI = 1;\n    }\n    var val = value;\n    if ($bm_isInstanceOfArray(value))\n        val = val[axis];\n    return $bm_sub(bezierInterpolation(time, sTime, eTime, sVal, eVal, [\n        sO,\n        sOV,\n        sI,\n        sIV\n    ]), val);\n}\nfunction overlap() {\n    var ol = zeroValue;\n    if (isThisPosition && !hasParent)\n        return zeroValue;\n    ol = $bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisProperty), getPropWorldValue(time, thisProperty));\n    var motionRatio = $bm_div($bm_div(length(zeroValue, ol), thisLayer.width), 2);\n    if (isThisPosition) {\n        var originalDistance = length(valueAtTime(0));\n        motionRatio = $bm_div(length(zeroValue, ol), thisComp.width);\n    }\n    ol = $bm_sum(ol, getPropWorldValue(time, thisProperty));\n    ol = $bm_sum(ol, $bm_mul($bm_mul($bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisLayer.anchorPoint), ol), motionRatio), flexibility));\n    ol = thisLayer.fromWorld(ol);\n    if (!isThisPosition)\n        ol = $bm_sub(ol, value);\n    else {\n        ol = linear(flexibility, 0, 100, $bm_div(ol, 2), 0);\n        var prevParentWorldPos = getLayerWorldPos($bm_sub(time, overlapDuration), parent);\n        ol = $bm_sum(ol, $bm_mul($bm_mul($bm_mul(thisLayer.fromWorld(prevParentWorldPos), motionRatio), flexibility), 5));\n    }\n    return ol;\n}\nvar okToGo = false;\nif (simulate && fx.enabled)\n    okToGo = true;\nelse if (numKeys > 1 && fx.enabled)\n    okToGo = true;\nif (okToGo) {\n    var smartSmoothResult = zeroValue;\n    if (doInterpolation) {\n        if ($bm_isInstanceOfArray(value)) {\n            if (value.length == 2)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1)\n                ];\n            else if (value.length == 3)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2)\n                ];\n            else if (value.length == 4)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2),\n                    smartSmooth(3)\n                ];\n        } else {\n            smartSmoothResult = smartSmooth(0);\n        }\n    }\n    if (doAnticipation)\n        result = $bm_sum(result, anticipate());\n    result = $bm_sum(result, smartSmoothResult);\n    if (doFollowThrough)\n        result = $bm_sum(result, followThrough());\n    if (doOverlap)\n        result = $bm_sum(result, overlap());\n}\n$bm_rt = result;",
          "a": 1,
          "l": 2
        }
      },
      "shapes": [
        {
          "ty": "gr",
          "nm": "G",
          "bm": 0,
          "it": [
            {
              "ty": "sh",
              "nm": "P",
              "ind": 0,
              "ks": {
                "k": {
                  "i": [
                    [-0.927, 0.0],
                    [0.0, 0.0],
                    [0.155, 0.915],
                    [5.09, 0.0],
                    [0.825, -4.903]
                  ],
                  "o": [
                    [0.0, 0.0],
                    [0.928, 0.0],
                    [-0.831, -4.902],
                    [-5.124, 0.0],
                    [-0.154, 0.914]
                  ],
                  "v": [
                    [-131.575, -117.097],
                    [-114.196, -117.097],
                    [-112.708, -118.854],
                    [-122.885, -127.421],
                    [-133.064, -118.852]
                  ],
                  "c": true
                },
                "a": 0
              }
            },
            {
              "ty": "st",
              "nm": "S",
              "bm": 0,
              "lc": 2,
              "lj": 2,
              "o": { "a": 0, "k": 100 },
              "w": { "a": 0, "k": 1.176 },
              "c": { "a": 0, "k": [0, 0, 0, 1] }
            },
            {
              "ty": "tr",
              "o": { "a": 0, "k": 100 },
              "r": { "a": 0, "k": 0 },
              "p": { "a": 0, "k": [0, 0] },
              "a": { "a": 0, "k": [0, 0] },
              "s": { "a": 0, "k": [100, 100] },
              "nm": "T",
              "sk": { "a": 0, "k": 0 },
              "sa": { "a": 0, "k": 0 }
            }
          ]
        },
        {
          "ty": "gr",
          "nm": "G",
          "bm": 0,
          "it": [
            {
              "ty": "sh",
              "nm": "P",
              "ind": 0,
              "ks": {
                "k": {
                  "i": [
                    [0.0, -1.87],
                    [-1.87, 0.0],
                    [0.0, 1.87],
                    [1.842, 0.0]
                  ],
                  "o": [
                    [0.0, 1.87],
                    [1.842, 0.0],
                    [0.0, -1.87],
                    [-1.87, 0.0]
                  ],
                  "v": [
                    [-126.252, -134.658],
                    [-122.876, -131.253],
                    [-119.499, -134.658],
                    [-122.876, -138.007]
                  ],
                  "c": true
                },
                "a": 0
              }
            },
            {
              "ty": "st",
              "nm": "S",
              "bm": 0,
              "lc": 2,
              "lj": 2,
              "o": { "a": 0, "k": 100 },
              "w": { "a": 0, "k": 1.176 },
              "c": { "a": 0, "k": [0, 0, 0, 1] }
            },
            {
              "ty": "fl",
              "nm": "F",
              "bm": 0,
              "c": { "a": 0, "k": [0, 0, 0, 1] },
              "o": { "a": 0, "k": 100 },
              "r": 1
            },
            {
              "ty": "tr",
              "o": { "a": 0, "k": 100 },
              "r": { "a": 0, "k": 0 },
              "p": { "a": 0, "k": [0, 0] },
              "a": { "a": 0, "k": [0, 0] },
              "s": { "a": 0, "k": [100, 100] },
              "nm": "T",
              "sk": { "a": 0, "k": 0 },
              "sa": { "a": 0, "k": 0 }
            }
          ]
        },
        {
          "ty": "gr",
          "nm": "G",
          "bm": 0,
          "it": [
            {
              "ty": "sh",
              "nm": "P",
              "ind": 0,
              "ks": {
                "k": {
                  "i": [
                    [0.0, -10.911],
                    [10.911, 0.0],
                    [0.0, 10.937],
                    [-10.937, 0.0]
                  ],
                  "o": [
                    [0.0, 10.937],
                    [-10.937, 0.0],
                    [0.0, -10.911],
                    [10.911, 0.0]
                  ],
                  "v": [
                    [-103.129, -126.055],
                    [-122.873, -106.286],
                    [-142.642, -126.055],
                    [-122.873, -145.799]
                  ],
                  "c": true
                },
                "a": 0
              }
            },
            {
              "ty": "st",
              "nm": "S",
              "bm": 0,
              "lc": 2,
              "lj": 2,
              "o": { "a": 0, "k": 100 },
              "w": { "a": 0, "k": 1.176 },
              "c": { "a": 0, "k": [0, 0, 0, 1] }
            },
            {
              "ty": "tr",
              "o": { "a": 0, "k": 100 },
              "r": { "a": 0, "k": 0 },
              "p": { "a": 0, "k": [0, 0] },
              "a": { "a": 0, "k": [0, 0] },
              "s": { "a": 0, "k": [100, 100] },
              "nm": "T",
              "sk": { "a": 0, "k": 0 },
              "sa": { "a": 0, "k": 0 }
            }
          ]
        },
        {
          "ty": "gr",
          "nm": "G",
          "bm": 0,
          "it": [
            {
              "ty": "sh",
              "nm": "P",
              "ind": 0,
              "ks": {
                "k": {
                  "i": [
                    [13.531, 0.0],
                    [0.0, 13.545],
                    [-13.545, 0.0],
                    [0.0, -13.531]
                  ],
                  "o": [
                    [-13.545, 0.0],
                    [0.0, -13.531],
                    [13.531, 0.0],
                    [0.0, 13.545]
                  ],
                  "v": [
                    [-122.873, -101.49],
                    [-147.439, -126.056],
                    [-122.873, -150.596],
                    [-98.333, -126.056]
                  ],
                  "c": true
                },
                "a": 0
              }
            },
            {
              "ty": "st",
              "nm": "S",
              "bm": 0,
              "lc": 2,
              "lj": 2,
              "o": { "a": 0, "k": 100 },
              "w": { "a": 0, "k": 1.176 },
              "d": [{ "nm": "d", "n": "d", "v": { "a": 0, "k": 4.706 } }],
              "c": { "a": 0, "k": [0, 0, 0, 1] }
            },
            {
              "ty": "tm",
              "nm": "T",
              "s": { "a": 0, "k": 0 },
              "e": { "a": 0, "k": 100 },
              "o": {
                "a": 1,
                "k": [
                  {
                    "i": { "x": [0.667], "y": [1.0] },
                    "o": { "x": [0.333], "y": [0.0] },
                    "t": 0,
                    "s": [0]
                  },
                  { "t": 125, "s": [360] }
                ]
              },
              "m": 1
            },
            {
              "ty": "tr",
              "o": { "a": 0, "k": 100 },
              "r": { "a": 0, "k": 0 },
              "p": { "a": 0, "k": [0, 0] },
              "a": { "a": 0, "k": [0, 0] },
              "s": { "a": 0, "k": [100, 100] },
              "nm": "T",
              "sk": { "a": 0, "k": 0 },
              "sa": { "a": 0, "k": 0 }
            }
          ]
        }
      ],
      "ip": 0,
      "op": 200,
      "st": 0.0,
      "ef": [
        {
          "ty": 5,
          "ix": 1,
          "nm": "\u015d",
          "ef": [
            { "ix": 1, "nm": "A", "ty": 7, "v": { "a": 0, "k": 0 } },
            { "ix": 2, "nm": "S", "ty": 7, "v": { "a": 0, "k": 0 } },
            { "ix": 3, "nm": "F", "ty": 7, "v": { "a": 0, "k": 1 } },
            { "ix": 4, "nm": "A", "ty": 6, "v": 0 },
            { "ix": 5, "nm": "D", "ty": 0, "v": { "a": 0, "k": 0 } },
            { "ix": 6, "nm": "A", "ty": 0, "v": { "a": 0, "k": 50 } },
            { "ix": 7, "nm": "", "ty": 6, "v": 0 },
            { "ix": 8, "nm": "I", "ty": 6, "v": 0 },
            { "ix": 9, "nm": "S", "ty": 0, "v": { "a": 0, "k": 60 } },
            { "ix": 10, "nm": "S", "ty": 0, "v": { "a": 0, "k": 25 } },
            { "ix": 11, "nm": "", "ty": 6, "v": 0 },
            { "ix": 12, "nm": "F", "ty": 6, "v": 0 },
            { "ix": 13, "nm": "E", "ty": 0, "v": { "a": 0, "k": 10 } },
            { "ix": 14, "nm": "E", "ty": 0, "v": { "a": 0, "k": 0 } },
            { "ix": 15, "nm": "D", "ty": 0, "v": { "a": 0, "k": 50 } },
            { "ix": 16, "nm": "D", "ty": 0, "v": { "a": 0, "k": 0 } },
            { "ix": 17, "nm": "B", "ty": 7, "v": { "a": 0, "k": 0 } },
            { "ix": 18, "nm": "", "ty": 6, "v": 0 },
            { "ix": 19, "nm": "S", "ty": 6, "v": 0 },
            { "ix": 20, "nm": "S", "ty": 7, "v": { "a": 0, "k": 0 } },
            { "ix": 21, "nm": "M", "ty": 7, "v": { "a": 0, "k": 1 } },
            { "ix": 22, "nm": "O", "ty": 6, "v": 0 },
            { "ix": 23, "nm": "O", "ty": 7, "v": { "a": 0, "k": 1 } },
            { "ix": 24, "nm": "D", "ty": 0, "v": { "a": 0, "k": 0.05 } },
            { "ix": 25, "nm": "O", "ty": 0, "v": { "a": 0, "k": 0 } },
            { "ix": 26, "nm": "", "ty": 6, "v": 0 },
            { "ix": 27, "nm": "S", "ty": 6, "v": 0 },
            { "ix": 28, "nm": "S", "ty": 7, "v": { "a": 0, "k": 1 } },
            { "ix": 29, "nm": "S", "ty": 0, "v": { "a": 0, "k": 100 } },
            { "ix": 30, "nm": "", "ty": 6, "v": 0 },
            { "ix": 31, "nm": "", "ty": 6, "v": 0 },
            { "ix": 32, "nm": "P", "ty": 0, "v": { "a": 0, "k": 1 } }
          ],
          "en": 1
        }
      ],
      "ty": 4
    },
    {
      "ind": 14,
      "nm": "L",
      "sr": 1.0,
      "ks": {
        "o": { "a": 0, "k": 100 },
        "r": { "a": 0, "k": 0 },
        "p": { "a": 0, "k": [170.256, 162.823, 0], "l": 2 },
        "a": { "a": 0, "k": [-85.744, -93.177, 0], "l": 2 },
        "s": { "a": 0, "k": [100, 100, 100], "l": 2 }
      },
      "shapes": [
        {
          "ty": "gr",
          "nm": "G",
          "bm": 0,
          "it": [
            {
              "ty": "sh",
              "nm": "P",
              "ind": 0,
              "ks": {
                "k": {
                  "i": [
                    [0.0, 0.0],
                    [0.0, 0.0]
                  ],
                  "o": [
                    [0.0, 0.0],
                    [0.0, 0.0]
                  ],
                  "v": [
                    [-68.123, -75.456],
                    [-103.365, -110.897]
                  ],
                  "c": false
                },
                "a": 0
              }
            },
            {
              "ty": "st",
              "nm": "S",
              "bm": 0,
              "lc": 2,
              "lj": 2,
              "o": { "a": 0, "k": 100 },
              "w": { "a": 0, "k": 1.176 },
              "c": { "a": 0, "k": [0, 0, 0, 1] }
            },
            {
              "ty": "tr",
              "o": { "a": 0, "k": 100 },
              "r": { "a": 0, "k": 0 },
              "p": { "a": 0, "k": [0, 0] },
              "a": { "a": 0, "k": [0, 0] },
              "s": { "a": 0, "k": [100, 100] },
              "nm": "T",
              "sk": { "a": 0, "k": 0 },
              "sa": { "a": 0, "k": 0 }
            }
          ]
        },
        {
          "ty": "tm",
          "nm": "T",
          "s": { "a": 0, "k": 0 },
          "e": {
            "a": 1,
            "k": [
              {
                "i": { "x": [0.667], "y": [1.0] },
                "o": { "x": [0.333], "y": [0.0] },
                "t": 25,
                "s": [0]
              },
              { "t": 32, "s": [100] }
            ],
            "x": "var $bm_rt;\nvar fx = effect('\u015dlosilo pli pura');\nvar doAnticipation = fx(1).value;\nvar doInterpolation = fx(2).value;\nvar doFollowThrough = fx(3).value;\nvar damping = $bm_div(fx(15).value, 10);\nvar elasticity = $bm_div(fx(13).value, 10);\nvar bounce = fx(17).value;\nvar anticipationDuration = fx(5).value;\nvar anticipationQuantity = $bm_div(fx(6).value, 100);\nvar slowIn = $bm_div(fx(9).value, 100);\nvar slowOut = $bm_div(fx(10).value, 100);\nvar spatialMode = fx(21).value;\nvar spatialDoInterpolation = fx(20).value;\nvar moBlurPrecision = fx(32).value;\nvar elasticityRandom = fx(14).value;\nvar dampingRandom = fx(16).value;\nvar softBody = fx(28).value;\nvar flexibility = $bm_div(fx(29).value, 100);\nvar doOverlap = fx(23).value;\nvar overlapDuration = fx(24).value;\nvar overlapRandom = fx(25).value;\nvar threshold = $bm_div($bm_div(1, moBlurPrecision), 1000);\nvar zeroValue;\nif ($bm_isInstanceOfArray(value)) {\n    if (value.length == 2)\n        zeroValue = [\n            0,\n            0\n        ];\n    else if (value.length == 3)\n        zeroValue = [\n            0,\n            0,\n            0\n        ];\n    else if (value.length == 4)\n        zeroValue = [\n            0,\n            0,\n            0,\n            0\n        ];\n} else\n    zeroValue = 0;\nvar isThisSpatial = isSpatial(thisProperty);\nvar isThisPosition = thisProperty === $bm_transform.position;\nvar simulate = false;\nif (isThisSpatial) {\n    doInterpolation = doInterpolation && spatialDoInterpolation;\n    if (isThisPosition && thisProperty.numKeys > 0) {\n        doOverlap = false;\n        simulate = false;\n    } else {\n        simulate = spatialMode == 2;\n        doOverlap = overlapDuration != 0 && doOverlap && simulate;\n    }\n} else {\n    doOverlap = false;\n}\nif (!doOverlap) {\n    overlapDuration = 0;\n}\nif (simulate && softBody && isThisSpatial && !isThisPosition && (doFollowThrough || doOverlap)) {\n    var distanceRatio = $bm_div(length(valueAtTime(0), $bm_transform.anchorPoint), $bm_div(thisLayer.width, 2));\n    distanceRatio = $bm_div($bm_sum(1, $bm_mul(distanceRatio, flexibility)), 2);\n    if (doFollowThrough) {\n        elasticity = $bm_div(elasticity, distanceRatio);\n        damping = $bm_div(damping, distanceRatio);\n    }\n    if (doOverlap) {\n        overlapDuration = $bm_mul(overlapDuration, distanceRatio);\n    }\n}\nseedRandom(0, true);\nif (doFollowThrough) {\n    if (elasticityRandom > 0)\n        elasticity = addNoise(elasticity, elasticityRandom);\n    if (dampingRandom > 0)\n        damping = addNoise(damping, dampingRandom);\n}\nif (doOverlap) {\n    if (doOverlap && overlapRandom > 0)\n        overlapDuration = addNoise(overlapDuration, overlapRandom);\n}\nvar result = value;\nfunction isSpatial(prop) {\n    if (!(prop.value instanceof Array))\n        return false;\n    if (prop.value.length != 2 && prop.value.length != 3)\n        return false;\n    try {\n        if (typeof prop.speed !== 'undefined')\n            return true;\n    } catch (e) {\n        return false;\n    }\n}\nfunction addNoise(val, quantity) {\n    var randomValue = random(0.9, 1.1);\n    var noiseValue = noise($bm_mul(valueAtTime(0), randomValue));\n    noiseValue = $bm_mul(noiseValue, $bm_div(quantity, 100));\n    return $bm_mul(val, $bm_sum(noiseValue, 1));\n}\nfunction isAfterLastKey() {\n    if (numKeys == 0)\n        return false;\n    var nKey = nearestKey(time);\n    return nKey.time <= time && nKey.index == numKeys;\n}\nfunction isStill(t, threshold) {\n    var d = $bm_sub(valueAtTime(t), valueAtTime($bm_sum(t, framesToTime(1))));\n    if ($bm_isInstanceOfArray(d)) {\n        for (var i = 0; i < d.length; i++) {\n            d[i] = Math.abs(d[i]);\n            if (d[i] >= threshold) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        d = Math.abs(d);\n        return d < threshold;\n    }\n}\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\n    if (arguments.length !== 5 && arguments.length !== 6)\n        return t;\n    var a = $bm_sub(value2, value1);\n    var b = $bm_sub(tMax, tMin);\n    if (b == 0)\n        return t;\n    var c = clamp($bm_div($bm_sub(t, tMin), b), 0, 1);\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4)\n        bezierPoints = [\n            0.33,\n            0,\n            0.66,\n            1\n        ];\n    return $bm_sum($bm_mul(a, h(c, bezierPoints)), value1);\n    function h(f, g) {\n        var x = $bm_mul(3, g[0]);\n        var j = $bm_sub($bm_mul(3, $bm_sub(g[2], g[0])), x);\n        var k = $bm_sub($bm_sub(1, x), j);\n        var l = $bm_mul(3, g[1]);\n        var m = $bm_sub($bm_mul(3, $bm_sub(g[3], g[1])), l);\n        var n = $bm_sub($bm_sub(1, l), m);\n        var d = f;\n        for (var i = 0; i < 5; i++) {\n            var z = $bm_sub($bm_mul(d, $bm_sum(x, $bm_mul(d, $bm_sum(j, $bm_mul(d, k))))), f);\n            if (Math.abs(z) < 0.001)\n                break;\n            d = $bm_sub(d, $bm_div(z, $bm_sum(x, $bm_mul(d, $bm_sum($bm_mul(2, j), $bm_mul($bm_mul(3, k), d))))));\n        }\n        return $bm_mul(d, $bm_sum(l, $bm_mul(d, $bm_sum(m, $bm_mul(d, n)))));\n    }\n}\nfunction getPropWorldSpeed(t, prop) {\n    return length(getPropWorldVelocity(t, prop));\n}\nfunction getPrevKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time <= t)\n        return nKey;\n    if (nKey.index > 1)\n        return key($bm_sub(nKey.index, 1));\n    return null;\n}\nfunction getNextKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time >= t)\n        return nKey;\n    if (nKey.index < numKeys)\n        return key($bm_sum(nKey.index, 1));\n    return null;\n}\nfunction getPropWorldVelocity(t, prop) {\n    return $bm_mul($bm_sub(getPropWorldValue($bm_sum(t, 0.005), prop), getPropWorldValue($bm_sub(t, 0.005), prop)), 100);\n}\nfunction getLayerWorldPos(t, l) {\n    return l.toWorld(l.anchorPoint, t);\n}\nfunction getPropWorldValue(t, prop) {\n    if (isPosition(prop))\n        return getLayerWorldPos(t, thisLayer);\n    return thisLayer.toWorld(prop.valueAtTime(t), t);\n}\nfunction isPosition(prop) {\n    return prop === $bm_transform.position;\n}\nfunction isKeyTop(k, axis) {\n    var prevSpeed = velocityAtTime($bm_sub(k.time, threshold));\n    var nextSpeed = velocityAtTime($bm_sum(k.time, threshold));\n    if ($bm_isInstanceOfArray(value)) {\n        prevSpeed = prevSpeed[axis];\n        nextSpeed = nextSpeed[axis];\n    }\n    if (Math.abs(prevSpeed) < 0.01 || Math.abs(nextSpeed) < 0.01)\n        return true;\n    return $bm_mul(prevSpeed, nextSpeed) < 0;\n}\nfunction anticipate() {\n    var anticipation = zeroValue;\n    if (isAfterLastKey())\n        return anticipation;\n    if (numKeys < 2)\n        return anticipation;\n    var nextKey = getNextKey(time);\n    var aKey = nextKey;\n    if (!isStill(aKey.time - 0.1, 0.1)) {\n        aKey = getPrevKey(time);\n        if (!isStill(aKey.time - 0.1, 0.1))\n            return anticipation;\n    }\n    if (aKey.index == numKeys)\n        return anticipation;\n    var anticipationMiddle = aKey.time;\n    var anticipationStart = $bm_sub(anticipationMiddle, anticipationDuration);\n    var anticipationEnd = key(aKey.index + 1).time;\n    var startValue = anticipation;\n    var midValue = $bm_mul($bm_sum($bm_neg(valueAtTime($bm_sum(anticipationMiddle, anticipationDuration))), aKey.value), anticipationQuantity);\n    var endValue = anticipation;\n    if (time < anticipationStart) {\n        return anticipation;\n    } else if (time < anticipationMiddle) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue[i], midValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue, midValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else if (time <= anticipationEnd) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue[i], endValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue, endValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else {\n        return anticipation;\n    }\n}\nfunction followThroughAtTime(t) {\n    var fThrough = zeroValue;\n    if (elasticity == 0)\n        return fThrough;\n    var propSpeed;\n    if (!simulate) {\n        if (numKeys < 2)\n            return fThrough;\n        if (nearestKey(t).index == 1)\n            return fThrough;\n        propSpeed = length(velocityAtTime(t));\n        if (propSpeed >= threshold)\n            return fThrough;\n    } else {\n        propSpeed = getPropWorldSpeed(t, thisProperty);\n        if (propSpeed >= threshold)\n            return fThrough;\n    }\n    var fThroughStart = 0;\n    var fThroughTime = 0;\n    if (simulate) {\n        var speedI = getPropWorldSpeed(t, thisProperty);\n        var i = t;\n        while (speedI < threshold && i > 0) {\n            i = $bm_sub(i, $bm_div(thisComp.frameDuration, moBlurPrecision));\n            speedI = getPropWorldSpeed(i, thisProperty);\n        }\n        fThroughStart = i;\n    } else {\n        var fThroughKey = getPrevKey(t);\n        fThroughStart = fThroughKey.time;\n    }\n    if (fThroughStart == 0)\n        return fThrough;\n    fThroughTime = $bm_sub(t, fThroughStart);\n    if (simulate)\n        fThrough = $bm_div(getPropWorldVelocity($bm_sub(fThroughStart, thisComp.frameDuration), thisProperty), 2);\n    else\n        fThrough = $bm_div(velocityAtTime($bm_sub(fThroughStart, thisComp.frameDuration)), 2);\n    if (bounce) {\n        var cycleDamp = Math.exp($bm_mul($bm_mul(fThroughTime, damping), 0.1));\n        var damp = $bm_div(Math.exp($bm_mul(fThroughTime, damping)), $bm_div(elasticity, 2));\n        var cycleDuration = $bm_div(1, $bm_mul(elasticity, 2));\n        cycleDuration = Math.round(timeToFrames(cycleDuration));\n        cycleDuration = framesToTime(cycleDuration);\n        var midDuration = $bm_div(cycleDuration, 2);\n        var maxValue = $bm_mul(fThrough, midDuration);\n        var cycvarime = fThroughTime;\n        var numEndCycles = 1;\n        while (cycvarime > cycleDuration) {\n            cycvarime = $bm_sub(cycvarime, cycleDuration);\n            cycleDuration = $bm_div(cycleDuration, cycleDamp);\n            cycleDuration = Math.round(timeToFrames(cycleDuration));\n            if (cycleDuration < 2) {\n                cycleDuration = 2;\n                numEndCycles++;\n            }\n            cycleDuration = framesToTime(cycleDuration);\n            midDuration = $bm_div(cycleDuration, 2);\n            maxValue = $bm_div($bm_mul(fThrough, midDuration), damp);\n            if (numEndCycles > 100 / damping && maxValue < threshold)\n                return zeroValue;\n        }\n        if (cycvarime < midDuration)\n            fThrough = bezierInterpolation(cycvarime, 0, midDuration, 0, maxValue, [\n                0,\n                0.1,\n                slowIn,\n                1\n            ]);\n        else\n            fThrough = bezierInterpolation(cycvarime, midDuration, cycleDuration, maxValue, 0, [\n                $bm_sub(1, slowIn),\n                0,\n                1,\n                0.9\n            ]);\n    } else {\n        var damp = Math.exp($bm_mul(fThroughTime, damping));\n        var sinus = $bm_mul($bm_mul($bm_mul(elasticity, fThroughTime), 2), Math.PI);\n        sinus = Math.sin(sinus);\n        sinus = $bm_mul($bm_div(0.3, elasticity), sinus);\n        sinus = $bm_div(sinus, damp);\n        if (Math.abs(sinus) < $bm_div(threshold, 100))\n            return 0;\n        fThrough = $bm_mul(fThrough, sinus);\n        if (threshold > 0) {\n            fThrough = $bm_mul(fThrough, $bm_sub(1, $bm_div(propSpeed, threshold)));\n        }\n    }\n    if (bounce) {\n        var prevValue = valueAtTime($bm_sub(fThroughStart, thisComp.frameDuration));\n        var startValue = valueAtTime(fThroughStart);\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < prevValue.length; i++) {\n                if (prevValue[i] > startValue[i])\n                    fThrough[i] = Math.abs(fThrough[i]);\n                if (prevValue[i] < startValue[i])\n                    fThrough[i] = $bm_neg(Math.abs(fThrough[i]));\n            }\n        } else {\n            if (prevValue > startValue)\n                fThrough = Math.abs(fThrough);\n            if (prevValue < startValue)\n                fThrough = $bm_neg(Math.abs(fThrough));\n        }\n    }\n    if (simulate) {\n        if (!isThisPosition) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer));\n            fThrough = $bm_sub(thisLayer.fromWorld(fThrough), thisLayer.anchorPoint);\n        } else if (thisLayer.hasParent) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer.parent));\n            fThrough = $bm_sub(thisLayer.parent.fromWorld(fThrough), thisLayer.parent.anchorPoint);\n        }\n    }\n    return fThrough;\n}\nfunction followThrough() {\n    var propSpeed = length(velocity);\n    if (propSpeed < threshold)\n        return followThroughAtTime($bm_sub(time, overlapDuration));\n    var fThrough = zeroValue;\n    var t = time;\n    while (t > 0) {\n        t = $bm_sub(t, thisComp.frameDuration);\n        if (simulate)\n            propSpeed = getPropWorldSpeed($bm_sub(t, overlapDuration), thisProperty);\n        else\n            propSpeed = length(velocityAtTime(t));\n        if (propSpeed < threshold) {\n            fThrough = followThroughAtTime($bm_sub(t, overlapDuration));\n            break;\n        }\n    }\n    return linear(time, t, $bm_sum(t, $bm_mul(anticipationDuration, 2)), fThrough, zeroValue);\n}\nfunction smartSmooth(axis) {\n    var startKey = nearestKey(time);\n    var endKey = startKey;\n    if (time == startKey.time)\n        return 0;\n    if (time < startKey.time && startKey.index == 1)\n        return 0;\n    if (time > startKey.time && startKey.index == numKeys)\n        return 0;\n    if (time < startKey.time)\n        startKey = key($bm_sub(startKey.index, 1));\n    if (time > startKey.time)\n        endKey = key($bm_sum(startKey.index, 1));\n    var sI = 0.66;\n    var sO = 0.33;\n    var sIV = 1;\n    var sOV = 0;\n    var sVal = startKey.value;\n    var eVal = endKey.value;\n    if ($bm_isInstanceOfArray(value)) {\n        sVal = sVal[axis];\n        eVal = eVal[axis];\n    }\n    var sTime = startKey.time;\n    var eTime = endKey.time;\n    if (isKeyTop(startKey, axis))\n        sO = slowOut;\n    else {\n        var prevKey = key($bm_sub(startKey.index, 1));\n        var pVal = prevKey.value;\n        if ($bm_isInstanceOfArray(value))\n            pVal = pVal[axis];\n        sOV = $bm_div($bm_sub(sVal, pVal), $bm_sub(eVal, pVal));\n    }\n    if (isKeyTop(endKey, axis)) {\n        sI = slowIn;\n        if (endKey.index != numKeys) {\n            var nextKey = key($bm_sum(endKey.index, 1));\n            var nVal = nextKey.value;\n            if ($bm_isInstanceOfArray(value))\n                nVal = nVal[axis];\n            if (Math.abs(nVal - eVal) < 0.01 && doFollowThrough)\n                sI = 1;\n        }\n    } else {\n        var nextKey = key($bm_sum(endKey.index, 1));\n        var nVal = nextKey.value;\n        if ($bm_isInstanceOfArray(value))\n            nVal = nVal[axis];\n        sIV = $bm_div($bm_sub(eVal, sVal), $bm_sub(nVal, sVal));\n    }\n    if (endKey.index == numKeys && doFollowThrough) {\n        sI = 1;\n    }\n    var val = value;\n    if ($bm_isInstanceOfArray(value))\n        val = val[axis];\n    return $bm_sub(bezierInterpolation(time, sTime, eTime, sVal, eVal, [\n        sO,\n        sOV,\n        sI,\n        sIV\n    ]), val);\n}\nfunction overlap() {\n    var ol = zeroValue;\n    if (isThisPosition && !hasParent)\n        return zeroValue;\n    ol = $bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisProperty), getPropWorldValue(time, thisProperty));\n    var motionRatio = $bm_div($bm_div(length(zeroValue, ol), thisLayer.width), 2);\n    if (isThisPosition) {\n        var originalDistance = length(valueAtTime(0));\n        motionRatio = $bm_div(length(zeroValue, ol), thisComp.width);\n    }\n    ol = $bm_sum(ol, getPropWorldValue(time, thisProperty));\n    ol = $bm_sum(ol, $bm_mul($bm_mul($bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisLayer.anchorPoint), ol), motionRatio), flexibility));\n    ol = thisLayer.fromWorld(ol);\n    if (!isThisPosition)\n        ol = $bm_sub(ol, value);\n    else {\n        ol = linear(flexibility, 0, 100, $bm_div(ol, 2), 0);\n        var prevParentWorldPos = getLayerWorldPos($bm_sub(time, overlapDuration), parent);\n        ol = $bm_sum(ol, $bm_mul($bm_mul($bm_mul(thisLayer.fromWorld(prevParentWorldPos), motionRatio), flexibility), 5));\n    }\n    return ol;\n}\nvar okToGo = false;\nif (simulate && fx.enabled)\n    okToGo = true;\nelse if (numKeys > 1 && fx.enabled)\n    okToGo = true;\nif (okToGo) {\n    var smartSmoothResult = zeroValue;\n    if (doInterpolation) {\n        if ($bm_isInstanceOfArray(value)) {\n            if (value.length == 2)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1)\n                ];\n            else if (value.length == 3)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2)\n                ];\n            else if (value.length == 4)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2),\n                    smartSmooth(3)\n                ];\n        } else {\n            smartSmoothResult = smartSmooth(0);\n        }\n    }\n    if (doAnticipation)\n        result = $bm_sum(result, anticipate());\n    result = $bm_sum(result, smartSmoothResult);\n    if (doFollowThrough)\n        result = $bm_sum(result, followThrough());\n    if (doOverlap)\n        result = $bm_sum(result, overlap());\n}\n$bm_rt = result;"
          },
          "o": { "a": 0, "k": 0 },
          "m": 1
        }
      ],
      "ip": 0,
      "op": 200,
      "st": 0.0,
      "ef": [
        {
          "ty": 5,
          "ix": 1,
          "nm": "\u015d",
          "ef": [
            { "ix": 1, "nm": "A", "ty": 7, "v": { "a": 0, "k": 0 } },
            { "ix": 2, "nm": "S", "ty": 7, "v": { "a": 0, "k": 0 } },
            { "ix": 3, "nm": "F", "ty": 7, "v": { "a": 0, "k": 1 } },
            { "ix": 4, "nm": "A", "ty": 6, "v": 0 },
            { "ix": 5, "nm": "D", "ty": 0, "v": { "a": 0, "k": 0 } },
            { "ix": 6, "nm": "A", "ty": 0, "v": { "a": 0, "k": 50 } },
            { "ix": 7, "nm": "", "ty": 6, "v": 0 },
            { "ix": 8, "nm": "I", "ty": 6, "v": 0 },
            { "ix": 9, "nm": "S", "ty": 0, "v": { "a": 0, "k": 60 } },
            { "ix": 10, "nm": "S", "ty": 0, "v": { "a": 0, "k": 25 } },
            { "ix": 11, "nm": "", "ty": 6, "v": 0 },
            { "ix": 12, "nm": "F", "ty": 6, "v": 0 },
            { "ix": 13, "nm": "E", "ty": 0, "v": { "a": 0, "k": 10 } },
            { "ix": 14, "nm": "E", "ty": 0, "v": { "a": 0, "k": 0 } },
            { "ix": 15, "nm": "D", "ty": 0, "v": { "a": 0, "k": 50 } },
            { "ix": 16, "nm": "D", "ty": 0, "v": { "a": 0, "k": 0 } },
            { "ix": 17, "nm": "B", "ty": 7, "v": { "a": 0, "k": 0 } },
            { "ix": 18, "nm": "", "ty": 6, "v": 0 },
            { "ix": 19, "nm": "S", "ty": 6, "v": 0 },
            { "ix": 20, "nm": "S", "ty": 7, "v": { "a": 0, "k": 0 } },
            { "ix": 21, "nm": "M", "ty": 7, "v": { "a": 0, "k": 1 } },
            { "ix": 22, "nm": "O", "ty": 6, "v": 0 },
            { "ix": 23, "nm": "O", "ty": 7, "v": { "a": 0, "k": 1 } },
            { "ix": 24, "nm": "D", "ty": 0, "v": { "a": 0, "k": 0.05 } },
            { "ix": 25, "nm": "O", "ty": 0, "v": { "a": 0, "k": 0 } },
            { "ix": 26, "nm": "", "ty": 6, "v": 0 },
            { "ix": 27, "nm": "S", "ty": 6, "v": 0 },
            { "ix": 28, "nm": "S", "ty": 7, "v": { "a": 0, "k": 1 } },
            { "ix": 29, "nm": "S", "ty": 0, "v": { "a": 0, "k": 100 } },
            { "ix": 30, "nm": "", "ty": 6, "v": 0 },
            { "ix": 31, "nm": "", "ty": 6, "v": 0 },
            { "ix": 32, "nm": "P", "ty": 0, "v": { "a": 0, "k": 1 } }
          ],
          "en": 1
        }
      ],
      "ty": 4
    },
    {
      "ind": 15,
      "nm": "L",
      "sr": 1.0,
      "ks": {
        "o": { "a": 0, "k": 100 },
        "r": { "a": 0, "k": 0 },
        "p": { "a": 0, "k": [169.472, 210.291, 0], "l": 2 },
        "a": { "a": 0, "k": [-86.528, -45.709, 0], "l": 2 },
        "s": { "a": 0, "k": [100, 100, 100], "l": 2 }
      },
      "shapes": [
        {
          "ty": "gr",
          "nm": "G",
          "bm": 0,
          "it": [
            {
              "ty": "sh",
              "nm": "P",
              "ind": 0,
              "ks": {
                "k": {
                  "i": [
                    [0.0, 0.0],
                    [0.0, 0.0]
                  ],
                  "o": [
                    [0.0, 0.0],
                    [0.0, 0.0]
                  ],
                  "v": [
                    [-68.758, -63.479],
                    [-104.298, -27.939]
                  ],
                  "c": false
                },
                "a": 0
              }
            },
            {
              "ty": "st",
              "nm": "S",
              "bm": 0,
              "lc": 2,
              "lj": 2,
              "o": { "a": 0, "k": 100 },
              "w": { "a": 0, "k": 1.176 },
              "c": { "a": 0, "k": [0, 0, 0, 1] }
            },
            {
              "ty": "tr",
              "o": { "a": 0, "k": 100 },
              "r": { "a": 0, "k": 0 },
              "p": { "a": 0, "k": [0, 0] },
              "a": { "a": 0, "k": [0, 0] },
              "s": { "a": 0, "k": [100, 100] },
              "nm": "T",
              "sk": { "a": 0, "k": 0 },
              "sa": { "a": 0, "k": 0 }
            }
          ]
        },
        {
          "ty": "tm",
          "nm": "T",
          "s": { "a": 0, "k": 0 },
          "e": {
            "a": 1,
            "k": [
              {
                "i": { "x": [0.667], "y": [1.0] },
                "o": { "x": [0.333], "y": [0.0] },
                "t": 32,
                "s": [0]
              },
              { "t": 39, "s": [100] }
            ],
            "x": "var $bm_rt;\nvar fx = effect('\u015dlosilo pli pura');\nvar doAnticipation = fx(1).value;\nvar doInterpolation = fx(2).value;\nvar doFollowThrough = fx(3).value;\nvar damping = $bm_div(fx(15).value, 10);\nvar elasticity = $bm_div(fx(13).value, 10);\nvar bounce = fx(17).value;\nvar anticipationDuration = fx(5).value;\nvar anticipationQuantity = $bm_div(fx(6).value, 100);\nvar slowIn = $bm_div(fx(9).value, 100);\nvar slowOut = $bm_div(fx(10).value, 100);\nvar spatialMode = fx(21).value;\nvar spatialDoInterpolation = fx(20).value;\nvar moBlurPrecision = fx(32).value;\nvar elasticityRandom = fx(14).value;\nvar dampingRandom = fx(16).value;\nvar softBody = fx(28).value;\nvar flexibility = $bm_div(fx(29).value, 100);\nvar doOverlap = fx(23).value;\nvar overlapDuration = fx(24).value;\nvar overlapRandom = fx(25).value;\nvar threshold = $bm_div($bm_div(1, moBlurPrecision), 1000);\nvar zeroValue;\nif ($bm_isInstanceOfArray(value)) {\n    if (value.length == 2)\n        zeroValue = [\n            0,\n            0\n        ];\n    else if (value.length == 3)\n        zeroValue = [\n            0,\n            0,\n            0\n        ];\n    else if (value.length == 4)\n        zeroValue = [\n            0,\n            0,\n            0,\n            0\n        ];\n} else\n    zeroValue = 0;\nvar isThisSpatial = isSpatial(thisProperty);\nvar isThisPosition = thisProperty === $bm_transform.position;\nvar simulate = false;\nif (isThisSpatial) {\n    doInterpolation = doInterpolation && spatialDoInterpolation;\n    if (isThisPosition && thisProperty.numKeys > 0) {\n        doOverlap = false;\n        simulate = false;\n    } else {\n        simulate = spatialMode == 2;\n        doOverlap = overlapDuration != 0 && doOverlap && simulate;\n    }\n} else {\n    doOverlap = false;\n}\nif (!doOverlap) {\n    overlapDuration = 0;\n}\nif (simulate && softBody && isThisSpatial && !isThisPosition && (doFollowThrough || doOverlap)) {\n    var distanceRatio = $bm_div(length(valueAtTime(0), $bm_transform.anchorPoint), $bm_div(thisLayer.width, 2));\n    distanceRatio = $bm_div($bm_sum(1, $bm_mul(distanceRatio, flexibility)), 2);\n    if (doFollowThrough) {\n        elasticity = $bm_div(elasticity, distanceRatio);\n        damping = $bm_div(damping, distanceRatio);\n    }\n    if (doOverlap) {\n        overlapDuration = $bm_mul(overlapDuration, distanceRatio);\n    }\n}\nseedRandom(0, true);\nif (doFollowThrough) {\n    if (elasticityRandom > 0)\n        elasticity = addNoise(elasticity, elasticityRandom);\n    if (dampingRandom > 0)\n        damping = addNoise(damping, dampingRandom);\n}\nif (doOverlap) {\n    if (doOverlap && overlapRandom > 0)\n        overlapDuration = addNoise(overlapDuration, overlapRandom);\n}\nvar result = value;\nfunction isSpatial(prop) {\n    if (!(prop.value instanceof Array))\n        return false;\n    if (prop.value.length != 2 && prop.value.length != 3)\n        return false;\n    try {\n        if (typeof prop.speed !== 'undefined')\n            return true;\n    } catch (e) {\n        return false;\n    }\n}\nfunction addNoise(val, quantity) {\n    var randomValue = random(0.9, 1.1);\n    var noiseValue = noise($bm_mul(valueAtTime(0), randomValue));\n    noiseValue = $bm_mul(noiseValue, $bm_div(quantity, 100));\n    return $bm_mul(val, $bm_sum(noiseValue, 1));\n}\nfunction isAfterLastKey() {\n    if (numKeys == 0)\n        return false;\n    var nKey = nearestKey(time);\n    return nKey.time <= time && nKey.index == numKeys;\n}\nfunction isStill(t, threshold) {\n    var d = $bm_sub(valueAtTime(t), valueAtTime($bm_sum(t, framesToTime(1))));\n    if ($bm_isInstanceOfArray(d)) {\n        for (var i = 0; i < d.length; i++) {\n            d[i] = Math.abs(d[i]);\n            if (d[i] >= threshold) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        d = Math.abs(d);\n        return d < threshold;\n    }\n}\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\n    if (arguments.length !== 5 && arguments.length !== 6)\n        return t;\n    var a = $bm_sub(value2, value1);\n    var b = $bm_sub(tMax, tMin);\n    if (b == 0)\n        return t;\n    var c = clamp($bm_div($bm_sub(t, tMin), b), 0, 1);\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4)\n        bezierPoints = [\n            0.33,\n            0,\n            0.66,\n            1\n        ];\n    return $bm_sum($bm_mul(a, h(c, bezierPoints)), value1);\n    function h(f, g) {\n        var x = $bm_mul(3, g[0]);\n        var j = $bm_sub($bm_mul(3, $bm_sub(g[2], g[0])), x);\n        var k = $bm_sub($bm_sub(1, x), j);\n        var l = $bm_mul(3, g[1]);\n        var m = $bm_sub($bm_mul(3, $bm_sub(g[3], g[1])), l);\n        var n = $bm_sub($bm_sub(1, l), m);\n        var d = f;\n        for (var i = 0; i < 5; i++) {\n            var z = $bm_sub($bm_mul(d, $bm_sum(x, $bm_mul(d, $bm_sum(j, $bm_mul(d, k))))), f);\n            if (Math.abs(z) < 0.001)\n                break;\n            d = $bm_sub(d, $bm_div(z, $bm_sum(x, $bm_mul(d, $bm_sum($bm_mul(2, j), $bm_mul($bm_mul(3, k), d))))));\n        }\n        return $bm_mul(d, $bm_sum(l, $bm_mul(d, $bm_sum(m, $bm_mul(d, n)))));\n    }\n}\nfunction getPropWorldSpeed(t, prop) {\n    return length(getPropWorldVelocity(t, prop));\n}\nfunction getPrevKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time <= t)\n        return nKey;\n    if (nKey.index > 1)\n        return key($bm_sub(nKey.index, 1));\n    return null;\n}\nfunction getNextKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time >= t)\n        return nKey;\n    if (nKey.index < numKeys)\n        return key($bm_sum(nKey.index, 1));\n    return null;\n}\nfunction getPropWorldVelocity(t, prop) {\n    return $bm_mul($bm_sub(getPropWorldValue($bm_sum(t, 0.005), prop), getPropWorldValue($bm_sub(t, 0.005), prop)), 100);\n}\nfunction getLayerWorldPos(t, l) {\n    return l.toWorld(l.anchorPoint, t);\n}\nfunction getPropWorldValue(t, prop) {\n    if (isPosition(prop))\n        return getLayerWorldPos(t, thisLayer);\n    return thisLayer.toWorld(prop.valueAtTime(t), t);\n}\nfunction isPosition(prop) {\n    return prop === $bm_transform.position;\n}\nfunction isKeyTop(k, axis) {\n    var prevSpeed = velocityAtTime($bm_sub(k.time, threshold));\n    var nextSpeed = velocityAtTime($bm_sum(k.time, threshold));\n    if ($bm_isInstanceOfArray(value)) {\n        prevSpeed = prevSpeed[axis];\n        nextSpeed = nextSpeed[axis];\n    }\n    if (Math.abs(prevSpeed) < 0.01 || Math.abs(nextSpeed) < 0.01)\n        return true;\n    return $bm_mul(prevSpeed, nextSpeed) < 0;\n}\nfunction anticipate() {\n    var anticipation = zeroValue;\n    if (isAfterLastKey())\n        return anticipation;\n    if (numKeys < 2)\n        return anticipation;\n    var nextKey = getNextKey(time);\n    var aKey = nextKey;\n    if (!isStill(aKey.time - 0.1, 0.1)) {\n        aKey = getPrevKey(time);\n        if (!isStill(aKey.time - 0.1, 0.1))\n            return anticipation;\n    }\n    if (aKey.index == numKeys)\n        return anticipation;\n    var anticipationMiddle = aKey.time;\n    var anticipationStart = $bm_sub(anticipationMiddle, anticipationDuration);\n    var anticipationEnd = key(aKey.index + 1).time;\n    var startValue = anticipation;\n    var midValue = $bm_mul($bm_sum($bm_neg(valueAtTime($bm_sum(anticipationMiddle, anticipationDuration))), aKey.value), anticipationQuantity);\n    var endValue = anticipation;\n    if (time < anticipationStart) {\n        return anticipation;\n    } else if (time < anticipationMiddle) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue[i], midValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue, midValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else if (time <= anticipationEnd) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue[i], endValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue, endValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else {\n        return anticipation;\n    }\n}\nfunction followThroughAtTime(t) {\n    var fThrough = zeroValue;\n    if (elasticity == 0)\n        return fThrough;\n    var propSpeed;\n    if (!simulate) {\n        if (numKeys < 2)\n            return fThrough;\n        if (nearestKey(t).index == 1)\n            return fThrough;\n        propSpeed = length(velocityAtTime(t));\n        if (propSpeed >= threshold)\n            return fThrough;\n    } else {\n        propSpeed = getPropWorldSpeed(t, thisProperty);\n        if (propSpeed >= threshold)\n            return fThrough;\n    }\n    var fThroughStart = 0;\n    var fThroughTime = 0;\n    if (simulate) {\n        var speedI = getPropWorldSpeed(t, thisProperty);\n        var i = t;\n        while (speedI < threshold && i > 0) {\n            i = $bm_sub(i, $bm_div(thisComp.frameDuration, moBlurPrecision));\n            speedI = getPropWorldSpeed(i, thisProperty);\n        }\n        fThroughStart = i;\n    } else {\n        var fThroughKey = getPrevKey(t);\n        fThroughStart = fThroughKey.time;\n    }\n    if (fThroughStart == 0)\n        return fThrough;\n    fThroughTime = $bm_sub(t, fThroughStart);\n    if (simulate)\n        fThrough = $bm_div(getPropWorldVelocity($bm_sub(fThroughStart, thisComp.frameDuration), thisProperty), 2);\n    else\n        fThrough = $bm_div(velocityAtTime($bm_sub(fThroughStart, thisComp.frameDuration)), 2);\n    if (bounce) {\n        var cycleDamp = Math.exp($bm_mul($bm_mul(fThroughTime, damping), 0.1));\n        var damp = $bm_div(Math.exp($bm_mul(fThroughTime, damping)), $bm_div(elasticity, 2));\n        var cycleDuration = $bm_div(1, $bm_mul(elasticity, 2));\n        cycleDuration = Math.round(timeToFrames(cycleDuration));\n        cycleDuration = framesToTime(cycleDuration);\n        var midDuration = $bm_div(cycleDuration, 2);\n        var maxValue = $bm_mul(fThrough, midDuration);\n        var cycvarime = fThroughTime;\n        var numEndCycles = 1;\n        while (cycvarime > cycleDuration) {\n            cycvarime = $bm_sub(cycvarime, cycleDuration);\n            cycleDuration = $bm_div(cycleDuration, cycleDamp);\n            cycleDuration = Math.round(timeToFrames(cycleDuration));\n            if (cycleDuration < 2) {\n                cycleDuration = 2;\n                numEndCycles++;\n            }\n            cycleDuration = framesToTime(cycleDuration);\n            midDuration = $bm_div(cycleDuration, 2);\n            maxValue = $bm_div($bm_mul(fThrough, midDuration), damp);\n            if (numEndCycles > 100 / damping && maxValue < threshold)\n                return zeroValue;\n        }\n        if (cycvarime < midDuration)\n            fThrough = bezierInterpolation(cycvarime, 0, midDuration, 0, maxValue, [\n                0,\n                0.1,\n                slowIn,\n                1\n            ]);\n        else\n            fThrough = bezierInterpolation(cycvarime, midDuration, cycleDuration, maxValue, 0, [\n                $bm_sub(1, slowIn),\n                0,\n                1,\n                0.9\n            ]);\n    } else {\n        var damp = Math.exp($bm_mul(fThroughTime, damping));\n        var sinus = $bm_mul($bm_mul($bm_mul(elasticity, fThroughTime), 2), Math.PI);\n        sinus = Math.sin(sinus);\n        sinus = $bm_mul($bm_div(0.3, elasticity), sinus);\n        sinus = $bm_div(sinus, damp);\n        if (Math.abs(sinus) < $bm_div(threshold, 100))\n            return 0;\n        fThrough = $bm_mul(fThrough, sinus);\n        if (threshold > 0) {\n            fThrough = $bm_mul(fThrough, $bm_sub(1, $bm_div(propSpeed, threshold)));\n        }\n    }\n    if (bounce) {\n        var prevValue = valueAtTime($bm_sub(fThroughStart, thisComp.frameDuration));\n        var startValue = valueAtTime(fThroughStart);\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < prevValue.length; i++) {\n                if (prevValue[i] > startValue[i])\n                    fThrough[i] = Math.abs(fThrough[i]);\n                if (prevValue[i] < startValue[i])\n                    fThrough[i] = $bm_neg(Math.abs(fThrough[i]));\n            }\n        } else {\n            if (prevValue > startValue)\n                fThrough = Math.abs(fThrough);\n            if (prevValue < startValue)\n                fThrough = $bm_neg(Math.abs(fThrough));\n        }\n    }\n    if (simulate) {\n        if (!isThisPosition) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer));\n            fThrough = $bm_sub(thisLayer.fromWorld(fThrough), thisLayer.anchorPoint);\n        } else if (thisLayer.hasParent) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer.parent));\n            fThrough = $bm_sub(thisLayer.parent.fromWorld(fThrough), thisLayer.parent.anchorPoint);\n        }\n    }\n    return fThrough;\n}\nfunction followThrough() {\n    var propSpeed = length(velocity);\n    if (propSpeed < threshold)\n        return followThroughAtTime($bm_sub(time, overlapDuration));\n    var fThrough = zeroValue;\n    var t = time;\n    while (t > 0) {\n        t = $bm_sub(t, thisComp.frameDuration);\n        if (simulate)\n            propSpeed = getPropWorldSpeed($bm_sub(t, overlapDuration), thisProperty);\n        else\n            propSpeed = length(velocityAtTime(t));\n        if (propSpeed < threshold) {\n            fThrough = followThroughAtTime($bm_sub(t, overlapDuration));\n            break;\n        }\n    }\n    return linear(time, t, $bm_sum(t, $bm_mul(anticipationDuration, 2)), fThrough, zeroValue);\n}\nfunction smartSmooth(axis) {\n    var startKey = nearestKey(time);\n    var endKey = startKey;\n    if (time == startKey.time)\n        return 0;\n    if (time < startKey.time && startKey.index == 1)\n        return 0;\n    if (time > startKey.time && startKey.index == numKeys)\n        return 0;\n    if (time < startKey.time)\n        startKey = key($bm_sub(startKey.index, 1));\n    if (time > startKey.time)\n        endKey = key($bm_sum(startKey.index, 1));\n    var sI = 0.66;\n    var sO = 0.33;\n    var sIV = 1;\n    var sOV = 0;\n    var sVal = startKey.value;\n    var eVal = endKey.value;\n    if ($bm_isInstanceOfArray(value)) {\n        sVal = sVal[axis];\n        eVal = eVal[axis];\n    }\n    var sTime = startKey.time;\n    var eTime = endKey.time;\n    if (isKeyTop(startKey, axis))\n        sO = slowOut;\n    else {\n        var prevKey = key($bm_sub(startKey.index, 1));\n        var pVal = prevKey.value;\n        if ($bm_isInstanceOfArray(value))\n            pVal = pVal[axis];\n        sOV = $bm_div($bm_sub(sVal, pVal), $bm_sub(eVal, pVal));\n    }\n    if (isKeyTop(endKey, axis)) {\n        sI = slowIn;\n        if (endKey.index != numKeys) {\n            var nextKey = key($bm_sum(endKey.index, 1));\n            var nVal = nextKey.value;\n            if ($bm_isInstanceOfArray(value))\n                nVal = nVal[axis];\n            if (Math.abs(nVal - eVal) < 0.01 && doFollowThrough)\n                sI = 1;\n        }\n    } else {\n        var nextKey = key($bm_sum(endKey.index, 1));\n        var nVal = nextKey.value;\n        if ($bm_isInstanceOfArray(value))\n            nVal = nVal[axis];\n        sIV = $bm_div($bm_sub(eVal, sVal), $bm_sub(nVal, sVal));\n    }\n    if (endKey.index == numKeys && doFollowThrough) {\n        sI = 1;\n    }\n    var val = value;\n    if ($bm_isInstanceOfArray(value))\n        val = val[axis];\n    return $bm_sub(bezierInterpolation(time, sTime, eTime, sVal, eVal, [\n        sO,\n        sOV,\n        sI,\n        sIV\n    ]), val);\n}\nfunction overlap() {\n    var ol = zeroValue;\n    if (isThisPosition && !hasParent)\n        return zeroValue;\n    ol = $bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisProperty), getPropWorldValue(time, thisProperty));\n    var motionRatio = $bm_div($bm_div(length(zeroValue, ol), thisLayer.width), 2);\n    if (isThisPosition) {\n        var originalDistance = length(valueAtTime(0));\n        motionRatio = $bm_div(length(zeroValue, ol), thisComp.width);\n    }\n    ol = $bm_sum(ol, getPropWorldValue(time, thisProperty));\n    ol = $bm_sum(ol, $bm_mul($bm_mul($bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisLayer.anchorPoint), ol), motionRatio), flexibility));\n    ol = thisLayer.fromWorld(ol);\n    if (!isThisPosition)\n        ol = $bm_sub(ol, value);\n    else {\n        ol = linear(flexibility, 0, 100, $bm_div(ol, 2), 0);\n        var prevParentWorldPos = getLayerWorldPos($bm_sub(time, overlapDuration), parent);\n        ol = $bm_sum(ol, $bm_mul($bm_mul($bm_mul(thisLayer.fromWorld(prevParentWorldPos), motionRatio), flexibility), 5));\n    }\n    return ol;\n}\nvar okToGo = false;\nif (simulate && fx.enabled)\n    okToGo = true;\nelse if (numKeys > 1 && fx.enabled)\n    okToGo = true;\nif (okToGo) {\n    var smartSmoothResult = zeroValue;\n    if (doInterpolation) {\n        if ($bm_isInstanceOfArray(value)) {\n            if (value.length == 2)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1)\n                ];\n            else if (value.length == 3)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2)\n                ];\n            else if (value.length == 4)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2),\n                    smartSmooth(3)\n                ];\n        } else {\n            smartSmoothResult = smartSmooth(0);\n        }\n    }\n    if (doAnticipation)\n        result = $bm_sum(result, anticipate());\n    result = $bm_sum(result, smartSmoothResult);\n    if (doFollowThrough)\n        result = $bm_sum(result, followThrough());\n    if (doOverlap)\n        result = $bm_sum(result, overlap());\n}\n$bm_rt = result;"
          },
          "o": { "a": 0, "k": 0 },
          "m": 1
        }
      ],
      "ip": 0,
      "op": 200,
      "st": 0.0,
      "ef": [
        {
          "ty": 5,
          "ix": 1,
          "nm": "\u015d",
          "ef": [
            { "ix": 1, "nm": "A", "ty": 7, "v": { "a": 0, "k": 0 } },
            { "ix": 2, "nm": "S", "ty": 7, "v": { "a": 0, "k": 0 } },
            { "ix": 3, "nm": "F", "ty": 7, "v": { "a": 0, "k": 1 } },
            { "ix": 4, "nm": "A", "ty": 6, "v": 0 },
            { "ix": 5, "nm": "D", "ty": 0, "v": { "a": 0, "k": 0 } },
            { "ix": 6, "nm": "A", "ty": 0, "v": { "a": 0, "k": 50 } },
            { "ix": 7, "nm": "", "ty": 6, "v": 0 },
            { "ix": 8, "nm": "I", "ty": 6, "v": 0 },
            { "ix": 9, "nm": "S", "ty": 0, "v": { "a": 0, "k": 60 } },
            { "ix": 10, "nm": "S", "ty": 0, "v": { "a": 0, "k": 25 } },
            { "ix": 11, "nm": "", "ty": 6, "v": 0 },
            { "ix": 12, "nm": "F", "ty": 6, "v": 0 },
            { "ix": 13, "nm": "E", "ty": 0, "v": { "a": 0, "k": 10 } },
            { "ix": 14, "nm": "E", "ty": 0, "v": { "a": 0, "k": 0 } },
            { "ix": 15, "nm": "D", "ty": 0, "v": { "a": 0, "k": 50 } },
            { "ix": 16, "nm": "D", "ty": 0, "v": { "a": 0, "k": 0 } },
            { "ix": 17, "nm": "B", "ty": 7, "v": { "a": 0, "k": 0 } },
            { "ix": 18, "nm": "", "ty": 6, "v": 0 },
            { "ix": 19, "nm": "S", "ty": 6, "v": 0 },
            { "ix": 20, "nm": "S", "ty": 7, "v": { "a": 0, "k": 0 } },
            { "ix": 21, "nm": "M", "ty": 7, "v": { "a": 0, "k": 1 } },
            { "ix": 22, "nm": "O", "ty": 6, "v": 0 },
            { "ix": 23, "nm": "O", "ty": 7, "v": { "a": 0, "k": 1 } },
            { "ix": 24, "nm": "D", "ty": 0, "v": { "a": 0, "k": 0.05 } },
            { "ix": 25, "nm": "O", "ty": 0, "v": { "a": 0, "k": 0 } },
            { "ix": 26, "nm": "", "ty": 6, "v": 0 },
            { "ix": 27, "nm": "S", "ty": 6, "v": 0 },
            { "ix": 28, "nm": "S", "ty": 7, "v": { "a": 0, "k": 1 } },
            { "ix": 29, "nm": "S", "ty": 0, "v": { "a": 0, "k": 100 } },
            { "ix": 30, "nm": "", "ty": 6, "v": 0 },
            { "ix": 31, "nm": "", "ty": 6, "v": 0 },
            { "ix": 32, "nm": "P", "ty": 0, "v": { "a": 0, "k": 1 } }
          ],
          "en": 1
        }
      ],
      "ty": 4
    },
    {
      "ind": 16,
      "nm": "L",
      "sr": 1.0,
      "ks": {
        "o": { "a": 0, "k": 100 },
        "r": { "a": 0, "k": 0 },
        "p": { "a": 0, "k": [345.803, 162.927, 0], "l": 2 },
        "a": { "a": 0, "k": [89.803, -93.073, 0], "l": 2 },
        "s": { "a": 0, "k": [100, 100, 100], "l": 2 }
      },
      "shapes": [
        {
          "ty": "gr",
          "nm": "G",
          "bm": 0,
          "it": [
            {
              "ty": "sh",
              "nm": "P",
              "ind": 0,
              "ks": {
                "k": {
                  "i": [
                    [0.0, 0.0],
                    [0.0, 0.0]
                  ],
                  "o": [
                    [0.0, 0.0],
                    [0.0, 0.0]
                  ],
                  "v": [
                    [107.421, -110.69],
                    [72.186, -75.456]
                  ],
                  "c": false
                },
                "a": 0
              }
            },
            {
              "ty": "st",
              "nm": "S",
              "bm": 0,
              "lc": 2,
              "lj": 2,
              "o": { "a": 0, "k": 100 },
              "w": { "a": 0, "k": 1.176 },
              "c": { "a": 0, "k": [0, 0, 0, 1] }
            },
            {
              "ty": "tr",
              "o": { "a": 0, "k": 100 },
              "r": { "a": 0, "k": 0 },
              "p": { "a": 0, "k": [0, 0] },
              "a": { "a": 0, "k": [0, 0] },
              "s": { "a": 0, "k": [100, 100] },
              "nm": "T",
              "sk": { "a": 0, "k": 0 },
              "sa": { "a": 0, "k": 0 }
            }
          ]
        },
        {
          "ty": "tm",
          "nm": "T",
          "s": { "a": 0, "k": 100 },
          "e": {
            "a": 1,
            "k": [
              {
                "i": { "x": [0.667], "y": [1.0] },
                "o": { "x": [0.333], "y": [0.0] },
                "t": 39,
                "s": [100]
              },
              { "t": 46, "s": [0] }
            ],
            "x": "var $bm_rt;\nvar fx = effect('\u015dlosilo pli pura');\nvar doAnticipation = fx(1).value;\nvar doInterpolation = fx(2).value;\nvar doFollowThrough = fx(3).value;\nvar damping = $bm_div(fx(15).value, 10);\nvar elasticity = $bm_div(fx(13).value, 10);\nvar bounce = fx(17).value;\nvar anticipationDuration = fx(5).value;\nvar anticipationQuantity = $bm_div(fx(6).value, 100);\nvar slowIn = $bm_div(fx(9).value, 100);\nvar slowOut = $bm_div(fx(10).value, 100);\nvar spatialMode = fx(21).value;\nvar spatialDoInterpolation = fx(20).value;\nvar moBlurPrecision = fx(32).value;\nvar elasticityRandom = fx(14).value;\nvar dampingRandom = fx(16).value;\nvar softBody = fx(28).value;\nvar flexibility = $bm_div(fx(29).value, 100);\nvar doOverlap = fx(23).value;\nvar overlapDuration = fx(24).value;\nvar overlapRandom = fx(25).value;\nvar threshold = $bm_div($bm_div(1, moBlurPrecision), 1000);\nvar zeroValue;\nif ($bm_isInstanceOfArray(value)) {\n    if (value.length == 2)\n        zeroValue = [\n            0,\n            0\n        ];\n    else if (value.length == 3)\n        zeroValue = [\n            0,\n            0,\n            0\n        ];\n    else if (value.length == 4)\n        zeroValue = [\n            0,\n            0,\n            0,\n            0\n        ];\n} else\n    zeroValue = 0;\nvar isThisSpatial = isSpatial(thisProperty);\nvar isThisPosition = thisProperty === $bm_transform.position;\nvar simulate = false;\nif (isThisSpatial) {\n    doInterpolation = doInterpolation && spatialDoInterpolation;\n    if (isThisPosition && thisProperty.numKeys > 0) {\n        doOverlap = false;\n        simulate = false;\n    } else {\n        simulate = spatialMode == 2;\n        doOverlap = overlapDuration != 0 && doOverlap && simulate;\n    }\n} else {\n    doOverlap = false;\n}\nif (!doOverlap) {\n    overlapDuration = 0;\n}\nif (simulate && softBody && isThisSpatial && !isThisPosition && (doFollowThrough || doOverlap)) {\n    var distanceRatio = $bm_div(length(valueAtTime(0), $bm_transform.anchorPoint), $bm_div(thisLayer.width, 2));\n    distanceRatio = $bm_div($bm_sum(1, $bm_mul(distanceRatio, flexibility)), 2);\n    if (doFollowThrough) {\n        elasticity = $bm_div(elasticity, distanceRatio);\n        damping = $bm_div(damping, distanceRatio);\n    }\n    if (doOverlap) {\n        overlapDuration = $bm_mul(overlapDuration, distanceRatio);\n    }\n}\nseedRandom(0, true);\nif (doFollowThrough) {\n    if (elasticityRandom > 0)\n        elasticity = addNoise(elasticity, elasticityRandom);\n    if (dampingRandom > 0)\n        damping = addNoise(damping, dampingRandom);\n}\nif (doOverlap) {\n    if (doOverlap && overlapRandom > 0)\n        overlapDuration = addNoise(overlapDuration, overlapRandom);\n}\nvar result = value;\nfunction isSpatial(prop) {\n    if (!(prop.value instanceof Array))\n        return false;\n    if (prop.value.length != 2 && prop.value.length != 3)\n        return false;\n    try {\n        if (typeof prop.speed !== 'undefined')\n            return true;\n    } catch (e) {\n        return false;\n    }\n}\nfunction addNoise(val, quantity) {\n    var randomValue = random(0.9, 1.1);\n    var noiseValue = noise($bm_mul(valueAtTime(0), randomValue));\n    noiseValue = $bm_mul(noiseValue, $bm_div(quantity, 100));\n    return $bm_mul(val, $bm_sum(noiseValue, 1));\n}\nfunction isAfterLastKey() {\n    if (numKeys == 0)\n        return false;\n    var nKey = nearestKey(time);\n    return nKey.time <= time && nKey.index == numKeys;\n}\nfunction isStill(t, threshold) {\n    var d = $bm_sub(valueAtTime(t), valueAtTime($bm_sum(t, framesToTime(1))));\n    if ($bm_isInstanceOfArray(d)) {\n        for (var i = 0; i < d.length; i++) {\n            d[i] = Math.abs(d[i]);\n            if (d[i] >= threshold) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        d = Math.abs(d);\n        return d < threshold;\n    }\n}\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\n    if (arguments.length !== 5 && arguments.length !== 6)\n        return t;\n    var a = $bm_sub(value2, value1);\n    var b = $bm_sub(tMax, tMin);\n    if (b == 0)\n        return t;\n    var c = clamp($bm_div($bm_sub(t, tMin), b), 0, 1);\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4)\n        bezierPoints = [\n            0.33,\n            0,\n            0.66,\n            1\n        ];\n    return $bm_sum($bm_mul(a, h(c, bezierPoints)), value1);\n    function h(f, g) {\n        var x = $bm_mul(3, g[0]);\n        var j = $bm_sub($bm_mul(3, $bm_sub(g[2], g[0])), x);\n        var k = $bm_sub($bm_sub(1, x), j);\n        var l = $bm_mul(3, g[1]);\n        var m = $bm_sub($bm_mul(3, $bm_sub(g[3], g[1])), l);\n        var n = $bm_sub($bm_sub(1, l), m);\n        var d = f;\n        for (var i = 0; i < 5; i++) {\n            var z = $bm_sub($bm_mul(d, $bm_sum(x, $bm_mul(d, $bm_sum(j, $bm_mul(d, k))))), f);\n            if (Math.abs(z) < 0.001)\n                break;\n            d = $bm_sub(d, $bm_div(z, $bm_sum(x, $bm_mul(d, $bm_sum($bm_mul(2, j), $bm_mul($bm_mul(3, k), d))))));\n        }\n        return $bm_mul(d, $bm_sum(l, $bm_mul(d, $bm_sum(m, $bm_mul(d, n)))));\n    }\n}\nfunction getPropWorldSpeed(t, prop) {\n    return length(getPropWorldVelocity(t, prop));\n}\nfunction getPrevKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time <= t)\n        return nKey;\n    if (nKey.index > 1)\n        return key($bm_sub(nKey.index, 1));\n    return null;\n}\nfunction getNextKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time >= t)\n        return nKey;\n    if (nKey.index < numKeys)\n        return key($bm_sum(nKey.index, 1));\n    return null;\n}\nfunction getPropWorldVelocity(t, prop) {\n    return $bm_mul($bm_sub(getPropWorldValue($bm_sum(t, 0.005), prop), getPropWorldValue($bm_sub(t, 0.005), prop)), 100);\n}\nfunction getLayerWorldPos(t, l) {\n    return l.toWorld(l.anchorPoint, t);\n}\nfunction getPropWorldValue(t, prop) {\n    if (isPosition(prop))\n        return getLayerWorldPos(t, thisLayer);\n    return thisLayer.toWorld(prop.valueAtTime(t), t);\n}\nfunction isPosition(prop) {\n    return prop === $bm_transform.position;\n}\nfunction isKeyTop(k, axis) {\n    var prevSpeed = velocityAtTime($bm_sub(k.time, threshold));\n    var nextSpeed = velocityAtTime($bm_sum(k.time, threshold));\n    if ($bm_isInstanceOfArray(value)) {\n        prevSpeed = prevSpeed[axis];\n        nextSpeed = nextSpeed[axis];\n    }\n    if (Math.abs(prevSpeed) < 0.01 || Math.abs(nextSpeed) < 0.01)\n        return true;\n    return $bm_mul(prevSpeed, nextSpeed) < 0;\n}\nfunction anticipate() {\n    var anticipation = zeroValue;\n    if (isAfterLastKey())\n        return anticipation;\n    if (numKeys < 2)\n        return anticipation;\n    var nextKey = getNextKey(time);\n    var aKey = nextKey;\n    if (!isStill(aKey.time - 0.1, 0.1)) {\n        aKey = getPrevKey(time);\n        if (!isStill(aKey.time - 0.1, 0.1))\n            return anticipation;\n    }\n    if (aKey.index == numKeys)\n        return anticipation;\n    var anticipationMiddle = aKey.time;\n    var anticipationStart = $bm_sub(anticipationMiddle, anticipationDuration);\n    var anticipationEnd = key(aKey.index + 1).time;\n    var startValue = anticipation;\n    var midValue = $bm_mul($bm_sum($bm_neg(valueAtTime($bm_sum(anticipationMiddle, anticipationDuration))), aKey.value), anticipationQuantity);\n    var endValue = anticipation;\n    if (time < anticipationStart) {\n        return anticipation;\n    } else if (time < anticipationMiddle) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue[i], midValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue, midValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else if (time <= anticipationEnd) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue[i], endValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue, endValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else {\n        return anticipation;\n    }\n}\nfunction followThroughAtTime(t) {\n    var fThrough = zeroValue;\n    if (elasticity == 0)\n        return fThrough;\n    var propSpeed;\n    if (!simulate) {\n        if (numKeys < 2)\n            return fThrough;\n        if (nearestKey(t).index == 1)\n            return fThrough;\n        propSpeed = length(velocityAtTime(t));\n        if (propSpeed >= threshold)\n            return fThrough;\n    } else {\n        propSpeed = getPropWorldSpeed(t, thisProperty);\n        if (propSpeed >= threshold)\n            return fThrough;\n    }\n    var fThroughStart = 0;\n    var fThroughTime = 0;\n    if (simulate) {\n        var speedI = getPropWorldSpeed(t, thisProperty);\n        var i = t;\n        while (speedI < threshold && i > 0) {\n            i = $bm_sub(i, $bm_div(thisComp.frameDuration, moBlurPrecision));\n            speedI = getPropWorldSpeed(i, thisProperty);\n        }\n        fThroughStart = i;\n    } else {\n        var fThroughKey = getPrevKey(t);\n        fThroughStart = fThroughKey.time;\n    }\n    if (fThroughStart == 0)\n        return fThrough;\n    fThroughTime = $bm_sub(t, fThroughStart);\n    if (simulate)\n        fThrough = $bm_div(getPropWorldVelocity($bm_sub(fThroughStart, thisComp.frameDuration), thisProperty), 2);\n    else\n        fThrough = $bm_div(velocityAtTime($bm_sub(fThroughStart, thisComp.frameDuration)), 2);\n    if (bounce) {\n        var cycleDamp = Math.exp($bm_mul($bm_mul(fThroughTime, damping), 0.1));\n        var damp = $bm_div(Math.exp($bm_mul(fThroughTime, damping)), $bm_div(elasticity, 2));\n        var cycleDuration = $bm_div(1, $bm_mul(elasticity, 2));\n        cycleDuration = Math.round(timeToFrames(cycleDuration));\n        cycleDuration = framesToTime(cycleDuration);\n        var midDuration = $bm_div(cycleDuration, 2);\n        var maxValue = $bm_mul(fThrough, midDuration);\n        var cycvarime = fThroughTime;\n        var numEndCycles = 1;\n        while (cycvarime > cycleDuration) {\n            cycvarime = $bm_sub(cycvarime, cycleDuration);\n            cycleDuration = $bm_div(cycleDuration, cycleDamp);\n            cycleDuration = Math.round(timeToFrames(cycleDuration));\n            if (cycleDuration < 2) {\n                cycleDuration = 2;\n                numEndCycles++;\n            }\n            cycleDuration = framesToTime(cycleDuration);\n            midDuration = $bm_div(cycleDuration, 2);\n            maxValue = $bm_div($bm_mul(fThrough, midDuration), damp);\n            if (numEndCycles > 100 / damping && maxValue < threshold)\n                return zeroValue;\n        }\n        if (cycvarime < midDuration)\n            fThrough = bezierInterpolation(cycvarime, 0, midDuration, 0, maxValue, [\n                0,\n                0.1,\n                slowIn,\n                1\n            ]);\n        else\n            fThrough = bezierInterpolation(cycvarime, midDuration, cycleDuration, maxValue, 0, [\n                $bm_sub(1, slowIn),\n                0,\n                1,\n                0.9\n            ]);\n    } else {\n        var damp = Math.exp($bm_mul(fThroughTime, damping));\n        var sinus = $bm_mul($bm_mul($bm_mul(elasticity, fThroughTime), 2), Math.PI);\n        sinus = Math.sin(sinus);\n        sinus = $bm_mul($bm_div(0.3, elasticity), sinus);\n        sinus = $bm_div(sinus, damp);\n        if (Math.abs(sinus) < $bm_div(threshold, 100))\n            return 0;\n        fThrough = $bm_mul(fThrough, sinus);\n        if (threshold > 0) {\n            fThrough = $bm_mul(fThrough, $bm_sub(1, $bm_div(propSpeed, threshold)));\n        }\n    }\n    if (bounce) {\n        var prevValue = valueAtTime($bm_sub(fThroughStart, thisComp.frameDuration));\n        var startValue = valueAtTime(fThroughStart);\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < prevValue.length; i++) {\n                if (prevValue[i] > startValue[i])\n                    fThrough[i] = Math.abs(fThrough[i]);\n                if (prevValue[i] < startValue[i])\n                    fThrough[i] = $bm_neg(Math.abs(fThrough[i]));\n            }\n        } else {\n            if (prevValue > startValue)\n                fThrough = Math.abs(fThrough);\n            if (prevValue < startValue)\n                fThrough = $bm_neg(Math.abs(fThrough));\n        }\n    }\n    if (simulate) {\n        if (!isThisPosition) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer));\n            fThrough = $bm_sub(thisLayer.fromWorld(fThrough), thisLayer.anchorPoint);\n        } else if (thisLayer.hasParent) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer.parent));\n            fThrough = $bm_sub(thisLayer.parent.fromWorld(fThrough), thisLayer.parent.anchorPoint);\n        }\n    }\n    return fThrough;\n}\nfunction followThrough() {\n    var propSpeed = length(velocity);\n    if (propSpeed < threshold)\n        return followThroughAtTime($bm_sub(time, overlapDuration));\n    var fThrough = zeroValue;\n    var t = time;\n    while (t > 0) {\n        t = $bm_sub(t, thisComp.frameDuration);\n        if (simulate)\n            propSpeed = getPropWorldSpeed($bm_sub(t, overlapDuration), thisProperty);\n        else\n            propSpeed = length(velocityAtTime(t));\n        if (propSpeed < threshold) {\n            fThrough = followThroughAtTime($bm_sub(t, overlapDuration));\n            break;\n        }\n    }\n    return linear(time, t, $bm_sum(t, $bm_mul(anticipationDuration, 2)), fThrough, zeroValue);\n}\nfunction smartSmooth(axis) {\n    var startKey = nearestKey(time);\n    var endKey = startKey;\n    if (time == startKey.time)\n        return 0;\n    if (time < startKey.time && startKey.index == 1)\n        return 0;\n    if (time > startKey.time && startKey.index == numKeys)\n        return 0;\n    if (time < startKey.time)\n        startKey = key($bm_sub(startKey.index, 1));\n    if (time > startKey.time)\n        endKey = key($bm_sum(startKey.index, 1));\n    var sI = 0.66;\n    var sO = 0.33;\n    var sIV = 1;\n    var sOV = 0;\n    var sVal = startKey.value;\n    var eVal = endKey.value;\n    if ($bm_isInstanceOfArray(value)) {\n        sVal = sVal[axis];\n        eVal = eVal[axis];\n    }\n    var sTime = startKey.time;\n    var eTime = endKey.time;\n    if (isKeyTop(startKey, axis))\n        sO = slowOut;\n    else {\n        var prevKey = key($bm_sub(startKey.index, 1));\n        var pVal = prevKey.value;\n        if ($bm_isInstanceOfArray(value))\n            pVal = pVal[axis];\n        sOV = $bm_div($bm_sub(sVal, pVal), $bm_sub(eVal, pVal));\n    }\n    if (isKeyTop(endKey, axis)) {\n        sI = slowIn;\n        if (endKey.index != numKeys) {\n            var nextKey = key($bm_sum(endKey.index, 1));\n            var nVal = nextKey.value;\n            if ($bm_isInstanceOfArray(value))\n                nVal = nVal[axis];\n            if (Math.abs(nVal - eVal) < 0.01 && doFollowThrough)\n                sI = 1;\n        }\n    } else {\n        var nextKey = key($bm_sum(endKey.index, 1));\n        var nVal = nextKey.value;\n        if ($bm_isInstanceOfArray(value))\n            nVal = nVal[axis];\n        sIV = $bm_div($bm_sub(eVal, sVal), $bm_sub(nVal, sVal));\n    }\n    if (endKey.index == numKeys && doFollowThrough) {\n        sI = 1;\n    }\n    var val = value;\n    if ($bm_isInstanceOfArray(value))\n        val = val[axis];\n    return $bm_sub(bezierInterpolation(time, sTime, eTime, sVal, eVal, [\n        sO,\n        sOV,\n        sI,\n        sIV\n    ]), val);\n}\nfunction overlap() {\n    var ol = zeroValue;\n    if (isThisPosition && !hasParent)\n        return zeroValue;\n    ol = $bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisProperty), getPropWorldValue(time, thisProperty));\n    var motionRatio = $bm_div($bm_div(length(zeroValue, ol), thisLayer.width), 2);\n    if (isThisPosition) {\n        var originalDistance = length(valueAtTime(0));\n        motionRatio = $bm_div(length(zeroValue, ol), thisComp.width);\n    }\n    ol = $bm_sum(ol, getPropWorldValue(time, thisProperty));\n    ol = $bm_sum(ol, $bm_mul($bm_mul($bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisLayer.anchorPoint), ol), motionRatio), flexibility));\n    ol = thisLayer.fromWorld(ol);\n    if (!isThisPosition)\n        ol = $bm_sub(ol, value);\n    else {\n        ol = linear(flexibility, 0, 100, $bm_div(ol, 2), 0);\n        var prevParentWorldPos = getLayerWorldPos($bm_sub(time, overlapDuration), parent);\n        ol = $bm_sum(ol, $bm_mul($bm_mul($bm_mul(thisLayer.fromWorld(prevParentWorldPos), motionRatio), flexibility), 5));\n    }\n    return ol;\n}\nvar okToGo = false;\nif (simulate && fx.enabled)\n    okToGo = true;\nelse if (numKeys > 1 && fx.enabled)\n    okToGo = true;\nif (okToGo) {\n    var smartSmoothResult = zeroValue;\n    if (doInterpolation) {\n        if ($bm_isInstanceOfArray(value)) {\n            if (value.length == 2)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1)\n                ];\n            else if (value.length == 3)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2)\n                ];\n            else if (value.length == 4)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2),\n                    smartSmooth(3)\n                ];\n        } else {\n            smartSmoothResult = smartSmooth(0);\n        }\n    }\n    if (doAnticipation)\n        result = $bm_sum(result, anticipate());\n    result = $bm_sum(result, smartSmoothResult);\n    if (doFollowThrough)\n        result = $bm_sum(result, followThrough());\n    if (doOverlap)\n        result = $bm_sum(result, overlap());\n}\n$bm_rt = result;"
          },
          "o": { "a": 0, "k": 0 },
          "m": 1
        }
      ],
      "ip": 0,
      "op": 200,
      "st": 0.0,
      "ef": [
        {
          "ty": 5,
          "ix": 1,
          "nm": "\u015d",
          "ef": [
            { "ix": 1, "nm": "A", "ty": 7, "v": { "a": 0, "k": 0 } },
            { "ix": 2, "nm": "S", "ty": 7, "v": { "a": 0, "k": 0 } },
            { "ix": 3, "nm": "F", "ty": 7, "v": { "a": 0, "k": 1 } },
            { "ix": 4, "nm": "A", "ty": 6, "v": 0 },
            { "ix": 5, "nm": "D", "ty": 0, "v": { "a": 0, "k": 0 } },
            { "ix": 6, "nm": "A", "ty": 0, "v": { "a": 0, "k": 50 } },
            { "ix": 7, "nm": "", "ty": 6, "v": 0 },
            { "ix": 8, "nm": "I", "ty": 6, "v": 0 },
            { "ix": 9, "nm": "S", "ty": 0, "v": { "a": 0, "k": 60 } },
            { "ix": 10, "nm": "S", "ty": 0, "v": { "a": 0, "k": 25 } },
            { "ix": 11, "nm": "", "ty": 6, "v": 0 },
            { "ix": 12, "nm": "F", "ty": 6, "v": 0 },
            { "ix": 13, "nm": "E", "ty": 0, "v": { "a": 0, "k": 10 } },
            { "ix": 14, "nm": "E", "ty": 0, "v": { "a": 0, "k": 0 } },
            { "ix": 15, "nm": "D", "ty": 0, "v": { "a": 0, "k": 50 } },
            { "ix": 16, "nm": "D", "ty": 0, "v": { "a": 0, "k": 0 } },
            { "ix": 17, "nm": "B", "ty": 7, "v": { "a": 0, "k": 0 } },
            { "ix": 18, "nm": "", "ty": 6, "v": 0 },
            { "ix": 19, "nm": "S", "ty": 6, "v": 0 },
            { "ix": 20, "nm": "S", "ty": 7, "v": { "a": 0, "k": 0 } },
            { "ix": 21, "nm": "M", "ty": 7, "v": { "a": 0, "k": 1 } },
            { "ix": 22, "nm": "O", "ty": 6, "v": 0 },
            { "ix": 23, "nm": "O", "ty": 7, "v": { "a": 0, "k": 1 } },
            { "ix": 24, "nm": "D", "ty": 0, "v": { "a": 0, "k": 0.05 } },
            { "ix": 25, "nm": "O", "ty": 0, "v": { "a": 0, "k": 0 } },
            { "ix": 26, "nm": "", "ty": 6, "v": 0 },
            { "ix": 27, "nm": "S", "ty": 6, "v": 0 },
            { "ix": 28, "nm": "S", "ty": 7, "v": { "a": 0, "k": 1 } },
            { "ix": 29, "nm": "S", "ty": 0, "v": { "a": 0, "k": 100 } },
            { "ix": 30, "nm": "", "ty": 6, "v": 0 },
            { "ix": 31, "nm": "", "ty": 6, "v": 0 },
            { "ix": 32, "nm": "P", "ty": 0, "v": { "a": 0, "k": 1 } }
          ],
          "en": 1
        }
      ],
      "ty": 4
    },
    {
      "ind": 17,
      "nm": "L",
      "sr": 1.0,
      "ks": {
        "o": { "a": 0, "k": 100 },
        "r": { "a": 0, "k": 0 },
        "p": { "a": 0, "k": [346.669, 210.204, 0], "l": 2 },
        "a": { "a": 0, "k": [90.669, -45.796, 0], "l": 2 },
        "s": { "a": 0, "k": [100, 100, 100], "l": 2 }
      },
      "shapes": [
        {
          "ty": "gr",
          "nm": "G",
          "bm": 0,
          "it": [
            {
              "ty": "sh",
              "nm": "P",
              "ind": 0,
              "ks": {
                "k": {
                  "i": [
                    [0.0, 0.0],
                    [0.0, 0.0]
                  ],
                  "o": [
                    [0.0, 0.0],
                    [0.0, 0.0]
                  ],
                  "v": [
                    [108.469, -28.067],
                    [72.868, -63.526]
                  ],
                  "c": false
                },
                "a": 0
              }
            },
            {
              "ty": "st",
              "nm": "S",
              "bm": 0,
              "lc": 2,
              "lj": 2,
              "o": { "a": 0, "k": 100 },
              "w": { "a": 0, "k": 1.176 },
              "c": { "a": 0, "k": [0, 0, 0, 1] }
            },
            {
              "ty": "tr",
              "o": { "a": 0, "k": 100 },
              "r": { "a": 0, "k": 0 },
              "p": { "a": 0, "k": [0, 0] },
              "a": { "a": 0, "k": [0, 0] },
              "s": { "a": 0, "k": [100, 100] },
              "nm": "T",
              "sk": { "a": 0, "k": 0 },
              "sa": { "a": 0, "k": 0 }
            }
          ]
        },
        {
          "ty": "tm",
          "nm": "T",
          "s": { "a": 0, "k": 100 },
          "e": {
            "a": 1,
            "k": [
              {
                "i": { "x": [0.667], "y": [1.0] },
                "o": { "x": [0.333], "y": [0.0] },
                "t": 46,
                "s": [100]
              },
              { "t": 53, "s": [0] }
            ],
            "x": "var $bm_rt;\nvar fx = effect('\u015dlosilo pli pura');\nvar doAnticipation = fx(1).value;\nvar doInterpolation = fx(2).value;\nvar doFollowThrough = fx(3).value;\nvar damping = $bm_div(fx(15).value, 10);\nvar elasticity = $bm_div(fx(13).value, 10);\nvar bounce = fx(17).value;\nvar anticipationDuration = fx(5).value;\nvar anticipationQuantity = $bm_div(fx(6).value, 100);\nvar slowIn = $bm_div(fx(9).value, 100);\nvar slowOut = $bm_div(fx(10).value, 100);\nvar spatialMode = fx(21).value;\nvar spatialDoInterpolation = fx(20).value;\nvar moBlurPrecision = fx(32).value;\nvar elasticityRandom = fx(14).value;\nvar dampingRandom = fx(16).value;\nvar softBody = fx(28).value;\nvar flexibility = $bm_div(fx(29).value, 100);\nvar doOverlap = fx(23).value;\nvar overlapDuration = fx(24).value;\nvar overlapRandom = fx(25).value;\nvar threshold = $bm_div($bm_div(1, moBlurPrecision), 1000);\nvar zeroValue;\nif ($bm_isInstanceOfArray(value)) {\n    if (value.length == 2)\n        zeroValue = [\n            0,\n            0\n        ];\n    else if (value.length == 3)\n        zeroValue = [\n            0,\n            0,\n            0\n        ];\n    else if (value.length == 4)\n        zeroValue = [\n            0,\n            0,\n            0,\n            0\n        ];\n} else\n    zeroValue = 0;\nvar isThisSpatial = isSpatial(thisProperty);\nvar isThisPosition = thisProperty === $bm_transform.position;\nvar simulate = false;\nif (isThisSpatial) {\n    doInterpolation = doInterpolation && spatialDoInterpolation;\n    if (isThisPosition && thisProperty.numKeys > 0) {\n        doOverlap = false;\n        simulate = false;\n    } else {\n        simulate = spatialMode == 2;\n        doOverlap = overlapDuration != 0 && doOverlap && simulate;\n    }\n} else {\n    doOverlap = false;\n}\nif (!doOverlap) {\n    overlapDuration = 0;\n}\nif (simulate && softBody && isThisSpatial && !isThisPosition && (doFollowThrough || doOverlap)) {\n    var distanceRatio = $bm_div(length(valueAtTime(0), $bm_transform.anchorPoint), $bm_div(thisLayer.width, 2));\n    distanceRatio = $bm_div($bm_sum(1, $bm_mul(distanceRatio, flexibility)), 2);\n    if (doFollowThrough) {\n        elasticity = $bm_div(elasticity, distanceRatio);\n        damping = $bm_div(damping, distanceRatio);\n    }\n    if (doOverlap) {\n        overlapDuration = $bm_mul(overlapDuration, distanceRatio);\n    }\n}\nseedRandom(0, true);\nif (doFollowThrough) {\n    if (elasticityRandom > 0)\n        elasticity = addNoise(elasticity, elasticityRandom);\n    if (dampingRandom > 0)\n        damping = addNoise(damping, dampingRandom);\n}\nif (doOverlap) {\n    if (doOverlap && overlapRandom > 0)\n        overlapDuration = addNoise(overlapDuration, overlapRandom);\n}\nvar result = value;\nfunction isSpatial(prop) {\n    if (!(prop.value instanceof Array))\n        return false;\n    if (prop.value.length != 2 && prop.value.length != 3)\n        return false;\n    try {\n        if (typeof prop.speed !== 'undefined')\n            return true;\n    } catch (e) {\n        return false;\n    }\n}\nfunction addNoise(val, quantity) {\n    var randomValue = random(0.9, 1.1);\n    var noiseValue = noise($bm_mul(valueAtTime(0), randomValue));\n    noiseValue = $bm_mul(noiseValue, $bm_div(quantity, 100));\n    return $bm_mul(val, $bm_sum(noiseValue, 1));\n}\nfunction isAfterLastKey() {\n    if (numKeys == 0)\n        return false;\n    var nKey = nearestKey(time);\n    return nKey.time <= time && nKey.index == numKeys;\n}\nfunction isStill(t, threshold) {\n    var d = $bm_sub(valueAtTime(t), valueAtTime($bm_sum(t, framesToTime(1))));\n    if ($bm_isInstanceOfArray(d)) {\n        for (var i = 0; i < d.length; i++) {\n            d[i] = Math.abs(d[i]);\n            if (d[i] >= threshold) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        d = Math.abs(d);\n        return d < threshold;\n    }\n}\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\n    if (arguments.length !== 5 && arguments.length !== 6)\n        return t;\n    var a = $bm_sub(value2, value1);\n    var b = $bm_sub(tMax, tMin);\n    if (b == 0)\n        return t;\n    var c = clamp($bm_div($bm_sub(t, tMin), b), 0, 1);\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4)\n        bezierPoints = [\n            0.33,\n            0,\n            0.66,\n            1\n        ];\n    return $bm_sum($bm_mul(a, h(c, bezierPoints)), value1);\n    function h(f, g) {\n        var x = $bm_mul(3, g[0]);\n        var j = $bm_sub($bm_mul(3, $bm_sub(g[2], g[0])), x);\n        var k = $bm_sub($bm_sub(1, x), j);\n        var l = $bm_mul(3, g[1]);\n        var m = $bm_sub($bm_mul(3, $bm_sub(g[3], g[1])), l);\n        var n = $bm_sub($bm_sub(1, l), m);\n        var d = f;\n        for (var i = 0; i < 5; i++) {\n            var z = $bm_sub($bm_mul(d, $bm_sum(x, $bm_mul(d, $bm_sum(j, $bm_mul(d, k))))), f);\n            if (Math.abs(z) < 0.001)\n                break;\n            d = $bm_sub(d, $bm_div(z, $bm_sum(x, $bm_mul(d, $bm_sum($bm_mul(2, j), $bm_mul($bm_mul(3, k), d))))));\n        }\n        return $bm_mul(d, $bm_sum(l, $bm_mul(d, $bm_sum(m, $bm_mul(d, n)))));\n    }\n}\nfunction getPropWorldSpeed(t, prop) {\n    return length(getPropWorldVelocity(t, prop));\n}\nfunction getPrevKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time <= t)\n        return nKey;\n    if (nKey.index > 1)\n        return key($bm_sub(nKey.index, 1));\n    return null;\n}\nfunction getNextKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time >= t)\n        return nKey;\n    if (nKey.index < numKeys)\n        return key($bm_sum(nKey.index, 1));\n    return null;\n}\nfunction getPropWorldVelocity(t, prop) {\n    return $bm_mul($bm_sub(getPropWorldValue($bm_sum(t, 0.005), prop), getPropWorldValue($bm_sub(t, 0.005), prop)), 100);\n}\nfunction getLayerWorldPos(t, l) {\n    return l.toWorld(l.anchorPoint, t);\n}\nfunction getPropWorldValue(t, prop) {\n    if (isPosition(prop))\n        return getLayerWorldPos(t, thisLayer);\n    return thisLayer.toWorld(prop.valueAtTime(t), t);\n}\nfunction isPosition(prop) {\n    return prop === $bm_transform.position;\n}\nfunction isKeyTop(k, axis) {\n    var prevSpeed = velocityAtTime($bm_sub(k.time, threshold));\n    var nextSpeed = velocityAtTime($bm_sum(k.time, threshold));\n    if ($bm_isInstanceOfArray(value)) {\n        prevSpeed = prevSpeed[axis];\n        nextSpeed = nextSpeed[axis];\n    }\n    if (Math.abs(prevSpeed) < 0.01 || Math.abs(nextSpeed) < 0.01)\n        return true;\n    return $bm_mul(prevSpeed, nextSpeed) < 0;\n}\nfunction anticipate() {\n    var anticipation = zeroValue;\n    if (isAfterLastKey())\n        return anticipation;\n    if (numKeys < 2)\n        return anticipation;\n    var nextKey = getNextKey(time);\n    var aKey = nextKey;\n    if (!isStill(aKey.time - 0.1, 0.1)) {\n        aKey = getPrevKey(time);\n        if (!isStill(aKey.time - 0.1, 0.1))\n            return anticipation;\n    }\n    if (aKey.index == numKeys)\n        return anticipation;\n    var anticipationMiddle = aKey.time;\n    var anticipationStart = $bm_sub(anticipationMiddle, anticipationDuration);\n    var anticipationEnd = key(aKey.index + 1).time;\n    var startValue = anticipation;\n    var midValue = $bm_mul($bm_sum($bm_neg(valueAtTime($bm_sum(anticipationMiddle, anticipationDuration))), aKey.value), anticipationQuantity);\n    var endValue = anticipation;\n    if (time < anticipationStart) {\n        return anticipation;\n    } else if (time < anticipationMiddle) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue[i], midValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue, midValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else if (time <= anticipationEnd) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue[i], endValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue, endValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else {\n        return anticipation;\n    }\n}\nfunction followThroughAtTime(t) {\n    var fThrough = zeroValue;\n    if (elasticity == 0)\n        return fThrough;\n    var propSpeed;\n    if (!simulate) {\n        if (numKeys < 2)\n            return fThrough;\n        if (nearestKey(t).index == 1)\n            return fThrough;\n        propSpeed = length(velocityAtTime(t));\n        if (propSpeed >= threshold)\n            return fThrough;\n    } else {\n        propSpeed = getPropWorldSpeed(t, thisProperty);\n        if (propSpeed >= threshold)\n            return fThrough;\n    }\n    var fThroughStart = 0;\n    var fThroughTime = 0;\n    if (simulate) {\n        var speedI = getPropWorldSpeed(t, thisProperty);\n        var i = t;\n        while (speedI < threshold && i > 0) {\n            i = $bm_sub(i, $bm_div(thisComp.frameDuration, moBlurPrecision));\n            speedI = getPropWorldSpeed(i, thisProperty);\n        }\n        fThroughStart = i;\n    } else {\n        var fThroughKey = getPrevKey(t);\n        fThroughStart = fThroughKey.time;\n    }\n    if (fThroughStart == 0)\n        return fThrough;\n    fThroughTime = $bm_sub(t, fThroughStart);\n    if (simulate)\n        fThrough = $bm_div(getPropWorldVelocity($bm_sub(fThroughStart, thisComp.frameDuration), thisProperty), 2);\n    else\n        fThrough = $bm_div(velocityAtTime($bm_sub(fThroughStart, thisComp.frameDuration)), 2);\n    if (bounce) {\n        var cycleDamp = Math.exp($bm_mul($bm_mul(fThroughTime, damping), 0.1));\n        var damp = $bm_div(Math.exp($bm_mul(fThroughTime, damping)), $bm_div(elasticity, 2));\n        var cycleDuration = $bm_div(1, $bm_mul(elasticity, 2));\n        cycleDuration = Math.round(timeToFrames(cycleDuration));\n        cycleDuration = framesToTime(cycleDuration);\n        var midDuration = $bm_div(cycleDuration, 2);\n        var maxValue = $bm_mul(fThrough, midDuration);\n        var cycvarime = fThroughTime;\n        var numEndCycles = 1;\n        while (cycvarime > cycleDuration) {\n            cycvarime = $bm_sub(cycvarime, cycleDuration);\n            cycleDuration = $bm_div(cycleDuration, cycleDamp);\n            cycleDuration = Math.round(timeToFrames(cycleDuration));\n            if (cycleDuration < 2) {\n                cycleDuration = 2;\n                numEndCycles++;\n            }\n            cycleDuration = framesToTime(cycleDuration);\n            midDuration = $bm_div(cycleDuration, 2);\n            maxValue = $bm_div($bm_mul(fThrough, midDuration), damp);\n            if (numEndCycles > 100 / damping && maxValue < threshold)\n                return zeroValue;\n        }\n        if (cycvarime < midDuration)\n            fThrough = bezierInterpolation(cycvarime, 0, midDuration, 0, maxValue, [\n                0,\n                0.1,\n                slowIn,\n                1\n            ]);\n        else\n            fThrough = bezierInterpolation(cycvarime, midDuration, cycleDuration, maxValue, 0, [\n                $bm_sub(1, slowIn),\n                0,\n                1,\n                0.9\n            ]);\n    } else {\n        var damp = Math.exp($bm_mul(fThroughTime, damping));\n        var sinus = $bm_mul($bm_mul($bm_mul(elasticity, fThroughTime), 2), Math.PI);\n        sinus = Math.sin(sinus);\n        sinus = $bm_mul($bm_div(0.3, elasticity), sinus);\n        sinus = $bm_div(sinus, damp);\n        if (Math.abs(sinus) < $bm_div(threshold, 100))\n            return 0;\n        fThrough = $bm_mul(fThrough, sinus);\n        if (threshold > 0) {\n            fThrough = $bm_mul(fThrough, $bm_sub(1, $bm_div(propSpeed, threshold)));\n        }\n    }\n    if (bounce) {\n        var prevValue = valueAtTime($bm_sub(fThroughStart, thisComp.frameDuration));\n        var startValue = valueAtTime(fThroughStart);\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < prevValue.length; i++) {\n                if (prevValue[i] > startValue[i])\n                    fThrough[i] = Math.abs(fThrough[i]);\n                if (prevValue[i] < startValue[i])\n                    fThrough[i] = $bm_neg(Math.abs(fThrough[i]));\n            }\n        } else {\n            if (prevValue > startValue)\n                fThrough = Math.abs(fThrough);\n            if (prevValue < startValue)\n                fThrough = $bm_neg(Math.abs(fThrough));\n        }\n    }\n    if (simulate) {\n        if (!isThisPosition) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer));\n            fThrough = $bm_sub(thisLayer.fromWorld(fThrough), thisLayer.anchorPoint);\n        } else if (thisLayer.hasParent) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer.parent));\n            fThrough = $bm_sub(thisLayer.parent.fromWorld(fThrough), thisLayer.parent.anchorPoint);\n        }\n    }\n    return fThrough;\n}\nfunction followThrough() {\n    var propSpeed = length(velocity);\n    if (propSpeed < threshold)\n        return followThroughAtTime($bm_sub(time, overlapDuration));\n    var fThrough = zeroValue;\n    var t = time;\n    while (t > 0) {\n        t = $bm_sub(t, thisComp.frameDuration);\n        if (simulate)\n            propSpeed = getPropWorldSpeed($bm_sub(t, overlapDuration), thisProperty);\n        else\n            propSpeed = length(velocityAtTime(t));\n        if (propSpeed < threshold) {\n            fThrough = followThroughAtTime($bm_sub(t, overlapDuration));\n            break;\n        }\n    }\n    return linear(time, t, $bm_sum(t, $bm_mul(anticipationDuration, 2)), fThrough, zeroValue);\n}\nfunction smartSmooth(axis) {\n    var startKey = nearestKey(time);\n    var endKey = startKey;\n    if (time == startKey.time)\n        return 0;\n    if (time < startKey.time && startKey.index == 1)\n        return 0;\n    if (time > startKey.time && startKey.index == numKeys)\n        return 0;\n    if (time < startKey.time)\n        startKey = key($bm_sub(startKey.index, 1));\n    if (time > startKey.time)\n        endKey = key($bm_sum(startKey.index, 1));\n    var sI = 0.66;\n    var sO = 0.33;\n    var sIV = 1;\n    var sOV = 0;\n    var sVal = startKey.value;\n    var eVal = endKey.value;\n    if ($bm_isInstanceOfArray(value)) {\n        sVal = sVal[axis];\n        eVal = eVal[axis];\n    }\n    var sTime = startKey.time;\n    var eTime = endKey.time;\n    if (isKeyTop(startKey, axis))\n        sO = slowOut;\n    else {\n        var prevKey = key($bm_sub(startKey.index, 1));\n        var pVal = prevKey.value;\n        if ($bm_isInstanceOfArray(value))\n            pVal = pVal[axis];\n        sOV = $bm_div($bm_sub(sVal, pVal), $bm_sub(eVal, pVal));\n    }\n    if (isKeyTop(endKey, axis)) {\n        sI = slowIn;\n        if (endKey.index != numKeys) {\n            var nextKey = key($bm_sum(endKey.index, 1));\n            var nVal = nextKey.value;\n            if ($bm_isInstanceOfArray(value))\n                nVal = nVal[axis];\n            if (Math.abs(nVal - eVal) < 0.01 && doFollowThrough)\n                sI = 1;\n        }\n    } else {\n        var nextKey = key($bm_sum(endKey.index, 1));\n        var nVal = nextKey.value;\n        if ($bm_isInstanceOfArray(value))\n            nVal = nVal[axis];\n        sIV = $bm_div($bm_sub(eVal, sVal), $bm_sub(nVal, sVal));\n    }\n    if (endKey.index == numKeys && doFollowThrough) {\n        sI = 1;\n    }\n    var val = value;\n    if ($bm_isInstanceOfArray(value))\n        val = val[axis];\n    return $bm_sub(bezierInterpolation(time, sTime, eTime, sVal, eVal, [\n        sO,\n        sOV,\n        sI,\n        sIV\n    ]), val);\n}\nfunction overlap() {\n    var ol = zeroValue;\n    if (isThisPosition && !hasParent)\n        return zeroValue;\n    ol = $bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisProperty), getPropWorldValue(time, thisProperty));\n    var motionRatio = $bm_div($bm_div(length(zeroValue, ol), thisLayer.width), 2);\n    if (isThisPosition) {\n        var originalDistance = length(valueAtTime(0));\n        motionRatio = $bm_div(length(zeroValue, ol), thisComp.width);\n    }\n    ol = $bm_sum(ol, getPropWorldValue(time, thisProperty));\n    ol = $bm_sum(ol, $bm_mul($bm_mul($bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisLayer.anchorPoint), ol), motionRatio), flexibility));\n    ol = thisLayer.fromWorld(ol);\n    if (!isThisPosition)\n        ol = $bm_sub(ol, value);\n    else {\n        ol = linear(flexibility, 0, 100, $bm_div(ol, 2), 0);\n        var prevParentWorldPos = getLayerWorldPos($bm_sub(time, overlapDuration), parent);\n        ol = $bm_sum(ol, $bm_mul($bm_mul($bm_mul(thisLayer.fromWorld(prevParentWorldPos), motionRatio), flexibility), 5));\n    }\n    return ol;\n}\nvar okToGo = false;\nif (simulate && fx.enabled)\n    okToGo = true;\nelse if (numKeys > 1 && fx.enabled)\n    okToGo = true;\nif (okToGo) {\n    var smartSmoothResult = zeroValue;\n    if (doInterpolation) {\n        if ($bm_isInstanceOfArray(value)) {\n            if (value.length == 2)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1)\n                ];\n            else if (value.length == 3)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2)\n                ];\n            else if (value.length == 4)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2),\n                    smartSmooth(3)\n                ];\n        } else {\n            smartSmoothResult = smartSmooth(0);\n        }\n    }\n    if (doAnticipation)\n        result = $bm_sum(result, anticipate());\n    result = $bm_sum(result, smartSmoothResult);\n    if (doFollowThrough)\n        result = $bm_sum(result, followThrough());\n    if (doOverlap)\n        result = $bm_sum(result, overlap());\n}\n$bm_rt = result;"
          },
          "o": { "a": 0, "k": 0 },
          "m": 1
        }
      ],
      "ip": 0,
      "op": 200,
      "st": 0.0,
      "ef": [
        {
          "ty": 5,
          "ix": 1,
          "nm": "\u015d",
          "ef": [
            { "ix": 1, "nm": "A", "ty": 7, "v": { "a": 0, "k": 0 } },
            { "ix": 2, "nm": "S", "ty": 7, "v": { "a": 0, "k": 0 } },
            { "ix": 3, "nm": "F", "ty": 7, "v": { "a": 0, "k": 1 } },
            { "ix": 4, "nm": "A", "ty": 6, "v": 0 },
            { "ix": 5, "nm": "D", "ty": 0, "v": { "a": 0, "k": 0 } },
            { "ix": 6, "nm": "A", "ty": 0, "v": { "a": 0, "k": 50 } },
            { "ix": 7, "nm": "", "ty": 6, "v": 0 },
            { "ix": 8, "nm": "I", "ty": 6, "v": 0 },
            { "ix": 9, "nm": "S", "ty": 0, "v": { "a": 0, "k": 60 } },
            { "ix": 10, "nm": "S", "ty": 0, "v": { "a": 0, "k": 25 } },
            { "ix": 11, "nm": "", "ty": 6, "v": 0 },
            { "ix": 12, "nm": "F", "ty": 6, "v": 0 },
            { "ix": 13, "nm": "E", "ty": 0, "v": { "a": 0, "k": 10 } },
            { "ix": 14, "nm": "E", "ty": 0, "v": { "a": 0, "k": 0 } },
            { "ix": 15, "nm": "D", "ty": 0, "v": { "a": 0, "k": 50 } },
            { "ix": 16, "nm": "D", "ty": 0, "v": { "a": 0, "k": 0 } },
            { "ix": 17, "nm": "B", "ty": 7, "v": { "a": 0, "k": 0 } },
            { "ix": 18, "nm": "", "ty": 6, "v": 0 },
            { "ix": 19, "nm": "S", "ty": 6, "v": 0 },
            { "ix": 20, "nm": "S", "ty": 7, "v": { "a": 0, "k": 0 } },
            { "ix": 21, "nm": "M", "ty": 7, "v": { "a": 0, "k": 1 } },
            { "ix": 22, "nm": "O", "ty": 6, "v": 0 },
            { "ix": 23, "nm": "O", "ty": 7, "v": { "a": 0, "k": 1 } },
            { "ix": 24, "nm": "D", "ty": 0, "v": { "a": 0, "k": 0.05 } },
            { "ix": 25, "nm": "O", "ty": 0, "v": { "a": 0, "k": 0 } },
            { "ix": 26, "nm": "", "ty": 6, "v": 0 },
            { "ix": 27, "nm": "S", "ty": 6, "v": 0 },
            { "ix": 28, "nm": "S", "ty": 7, "v": { "a": 0, "k": 1 } },
            { "ix": 29, "nm": "S", "ty": 0, "v": { "a": 0, "k": 100 } },
            { "ix": 30, "nm": "", "ty": 6, "v": 0 },
            { "ix": 31, "nm": "", "ty": 6, "v": 0 },
            { "ix": 32, "nm": "P", "ty": 0, "v": { "a": 0, "k": 1 } }
          ],
          "en": 1
        }
      ],
      "ty": 4
    },
    {
      "ind": 18,
      "nm": "L",
      "sr": 1.0,
      "ks": {
        "o": { "a": 0, "k": 100 },
        "r": {
          "a": 1,
          "k": [
            {
              "i": { "x": [0.667], "y": [1.0] },
              "o": { "x": [0.333], "y": [0.0] },
              "t": 0,
              "s": [0]
            },
            {
              "i": { "x": [0.667], "y": [1.0] },
              "o": { "x": [0.333], "y": [0.0] },
              "t": 6,
              "s": [10]
            },
            {
              "i": { "x": [0.667], "y": [1.0] },
              "o": { "x": [0.333], "y": [0.0] },
              "t": 12,
              "s": [-10]
            },
            {
              "i": { "x": [0.667], "y": [1.0] },
              "o": { "x": [0.333], "y": [0.0] },
              "t": 19,
              "s": [10]
            },
            { "t": 25, "s": [0] }
          ]
        },
        "p": { "a": 0, "k": [264.026, 404.097, 0], "l": 2 },
        "a": { "a": 0, "k": [8.026, 148.097, 0], "l": 2 },
        "s": { "a": 0, "k": [100, 100, 100], "l": 2 }
      },
      "shapes": [
        {
          "ty": "gr",
          "nm": "G",
          "bm": 0,
          "it": [
            {
              "ty": "sh",
              "nm": "P",
              "ind": 0,
              "ks": {
                "k": {
                  "i": [
                    [0.0, 0.0],
                    [0.0, 0.0],
                    [0.0, 0.0],
                    [0.0, 0.0],
                    [0.0, 0.0],
                    [0.0, 0.0],
                    [0.0, 0.0]
                  ],
                  "o": [
                    [0.0, 0.0],
                    [0.0, 0.0],
                    [0.0, 0.0],
                    [0.0, 0.0],
                    [0.0, 0.0],
                    [0.0, 0.0],
                    [0.0, 0.0]
                  ],
                  "v": [
                    [-51.369, -69.15],
                    [-56.593, -63.95],
                    [-62.899, -57.644],
                    [-68.758, -63.479],
                    [-74.429, -69.15],
                    [-62.899, -80.679],
                    [-57.228, -75.009]
                  ],
                  "c": true
                },
                "a": 0
              }
            },
            {
              "ty": "st",
              "nm": "S",
              "bm": 0,
              "lc": 2,
              "lj": 2,
              "o": { "a": 0, "k": 100 },
              "w": { "a": 0, "k": 1.176 },
              "c": { "a": 0, "k": [0, 0, 0, 1] }
            },
            {
              "ty": "tr",
              "o": { "a": 0, "k": 100 },
              "r": { "a": 0, "k": 0 },
              "p": { "a": 0, "k": [0, 0] },
              "a": { "a": 0, "k": [0, 0] },
              "s": { "a": 0, "k": [100, 100] },
              "nm": "T",
              "sk": { "a": 0, "k": 0 },
              "sa": { "a": 0, "k": 0 }
            }
          ]
        },
        {
          "ty": "gr",
          "nm": "G",
          "bm": 0,
          "it": [
            {
              "ty": "sh",
              "nm": "P",
              "ind": 0,
              "ks": {
                "k": {
                  "i": [
                    [0.0, 0.0],
                    [0.0, 0.0]
                  ],
                  "o": [
                    [0.0, 0.0],
                    [0.0, 0.0]
                  ],
                  "v": [
                    [-42.287, -49.644],
                    [-56.593, -63.95]
                  ],
                  "c": false
                },
                "a": 0
              }
            },
            {
              "ty": "st",
              "nm": "S",
              "bm": 0,
              "lc": 2,
              "lj": 2,
              "o": { "a": 0, "k": 100 },
              "w": { "a": 0, "k": 1.176 },
              "c": { "a": 0, "k": [0, 0, 0, 1] }
            },
            {
              "ty": "tr",
              "o": { "a": 0, "k": 100 },
              "r": { "a": 0, "k": 0 },
              "p": { "a": 0, "k": [0, 0] },
              "a": { "a": 0, "k": [0, 0] },
              "s": { "a": 0, "k": [100, 100] },
              "nm": "T",
              "sk": { "a": 0, "k": 0 },
              "sa": { "a": 0, "k": 0 }
            }
          ]
        },
        {
          "ty": "gr",
          "nm": "G",
          "bm": 0,
          "it": [
            {
              "ty": "sh",
              "nm": "P",
              "ind": 0,
              "ks": {
                "k": {
                  "i": [
                    [0.0, 0.0],
                    [0.0, 0.0]
                  ],
                  "o": [
                    [0.0, 0.0],
                    [0.0, 0.0]
                  ],
                  "v": [
                    [-42.946, -89.291],
                    [-57.228, -75.009]
                  ],
                  "c": false
                },
                "a": 0
              }
            },
            {
              "ty": "st",
              "nm": "S",
              "bm": 0,
              "lc": 2,
              "lj": 2,
              "o": { "a": 0, "k": 100 },
              "w": { "a": 0, "k": 1.176 },
              "c": { "a": 0, "k": [0, 0, 0, 1] }
            },
            {
              "ty": "tr",
              "o": { "a": 0, "k": 100 },
              "r": { "a": 0, "k": 0 },
              "p": { "a": 0, "k": [0, 0] },
              "a": { "a": 0, "k": [0, 0] },
              "s": { "a": 0, "k": [100, 100] },
              "nm": "T",
              "sk": { "a": 0, "k": 0 },
              "sa": { "a": 0, "k": 0 }
            }
          ]
        },
        {
          "ty": "gr",
          "nm": "G",
          "bm": 0,
          "it": [
            {
              "ty": "sh",
              "nm": "P",
              "ind": 0,
              "ks": {
                "k": {
                  "i": [
                    [0.0, 0.0],
                    [0.0, 0.0],
                    [0.0, 0.0],
                    [0.0, 0.0],
                    [0.0, 0.0],
                    [0.0, 0.0],
                    [0.0, 0.0],
                    [0.0, 0.0]
                  ],
                  "o": [
                    [0.0, 0.0],
                    [0.0, 0.0],
                    [0.0, 0.0],
                    [0.0, 0.0],
                    [0.0, 0.0],
                    [0.0, 0.0],
                    [0.0, 0.0],
                    [0.0, 0.0]
                  ],
                  "v": [
                    [78.492, -69.15],
                    [72.868, -63.526],
                    [66.962, -57.644],
                    [60.656, -63.95],
                    [55.433, -69.15],
                    [61.315, -75.032],
                    [66.962, -80.679],
                    [72.186, -75.456]
                  ],
                  "c": true
                },
                "a": 0
              }
            },
            {
              "ty": "st",
              "nm": "S",
              "bm": 0,
              "lc": 2,
              "lj": 2,
              "o": { "a": 0, "k": 100 },
              "w": { "a": 0, "k": 1.176 },
              "c": { "a": 0, "k": [0, 0, 0, 1] }
            },
            {
              "ty": "tr",
              "o": { "a": 0, "k": 100 },
              "r": { "a": 0, "k": 0 },
              "p": { "a": 0, "k": [0, 0] },
              "a": { "a": 0, "k": [0, 0] },
              "s": { "a": 0, "k": [100, 100] },
              "nm": "T",
              "sk": { "a": 0, "k": 0 },
              "sa": { "a": 0, "k": 0 }
            }
          ]
        },
        {
          "ty": "gr",
          "nm": "G",
          "bm": 0,
          "it": [
            {
              "ty": "sh",
              "nm": "P",
              "ind": 0,
              "ks": {
                "k": {
                  "i": [
                    [0.0, 0.0],
                    [0.0, 0.0]
                  ],
                  "o": [
                    [0.0, 0.0],
                    [0.0, 0.0]
                  ],
                  "v": [
                    [60.656, -63.95],
                    [47.456, -50.749]
                  ],
                  "c": false
                },
                "a": 0
              }
            },
            {
              "ty": "st",
              "nm": "S",
              "bm": 0,
              "lc": 2,
              "lj": 2,
              "o": { "a": 0, "k": 100 },
              "w": { "a": 0, "k": 1.176 },
              "c": { "a": 0, "k": [0, 0, 0, 1] }
            },
            {
              "ty": "tr",
              "o": { "a": 0, "k": 100 },
              "r": { "a": 0, "k": 0 },
              "p": { "a": 0, "k": [0, 0] },
              "a": { "a": 0, "k": [0, 0] },
              "s": { "a": 0, "k": [100, 100] },
              "nm": "T",
              "sk": { "a": 0, "k": 0 },
              "sa": { "a": 0, "k": 0 }
            }
          ]
        },
        {
          "ty": "gr",
          "nm": "G",
          "bm": 0,
          "it": [
            {
              "ty": "sh",
              "nm": "P",
              "ind": 0,
              "ks": {
                "k": {
                  "i": [
                    [0.0, 0.0],
                    [0.0, 0.0]
                  ],
                  "o": [
                    [0.0, 0.0],
                    [0.0, 0.0]
                  ],
                  "v": [
                    [61.315, -75.032],
                    [46.985, -89.291]
                  ],
                  "c": false
                },
                "a": 0
              }
            },
            {
              "ty": "st",
              "nm": "S",
              "bm": 0,
              "lc": 2,
              "lj": 2,
              "o": { "a": 0, "k": 100 },
              "w": { "a": 0, "k": 1.176 },
              "c": { "a": 0, "k": [0, 0, 0, 1] }
            },
            {
              "ty": "tr",
              "o": { "a": 0, "k": 100 },
              "r": { "a": 0, "k": 0 },
              "p": { "a": 0, "k": [0, 0] },
              "a": { "a": 0, "k": [0, 0] },
              "s": { "a": 0, "k": [100, 100] },
              "nm": "T",
              "sk": { "a": 0, "k": 0 },
              "sa": { "a": 0, "k": 0 }
            }
          ]
        }
      ],
      "ip": 0,
      "op": 200,
      "st": 0.0,
      "ty": 4
    },
    {
      "ind": 19,
      "nm": "L",
      "sr": 1.0,
      "ks": {
        "o": { "a": 0, "k": 100 },
        "r": { "a": 0, "k": 0 },
        "p": { "a": 0, "k": [276.44, 299.868, 0], "l": 2 },
        "a": { "a": 0, "k": [20.44, 43.868, 0], "l": 2 },
        "s": {
          "k": [
            {
              "i": { "x": [0.667, 0.667, 0.667], "y": [1.0, 1.0, 1.0] },
              "o": { "x": [0.333, 0.333, 0.333], "y": [0.0, 0.0, 0.0] },
              "t": 43,
              "s": [0, 0, 100]
            },
            { "t": 52, "s": [100, 100, 100] }
          ],
          "a": 1,
          "l": 2
        }
      },
      "shapes": [
        {
          "ty": "gr",
          "nm": "G",
          "bm": 0,
          "it": [
            {
              "ty": "sh",
              "nm": "P",
              "ind": 0,
              "ks": {
                "k": {
                  "i": [
                    [0.0, -6.531],
                    [6.554, 0.0],
                    [0.0, 6.554],
                    [-6.555, 0.0]
                  ],
                  "o": [
                    [0.0, 6.554],
                    [-6.555, 0.0],
                    [0.0, -6.531],
                    [6.554, 0.0]
                  ],
                  "v": [
                    [32.298, 43.856],
                    [20.44, 55.737],
                    [8.582, 43.856],
                    [20.44, 31.998]
                  ],
                  "c": true
                },
                "a": 0
              }
            },
            {
              "ty": "st",
              "nm": "S",
              "bm": 0,
              "lc": 2,
              "lj": 2,
              "o": { "a": 0, "k": 100 },
              "w": { "a": 0, "k": 1.176 },
              "c": { "a": 0, "k": [0, 0, 0, 1] }
            },
            {
              "ty": "tr",
              "o": { "a": 0, "k": 100 },
              "r": { "a": 0, "k": 0 },
              "p": { "a": 0, "k": [0, 0] },
              "a": { "a": 0, "k": [0, 0] },
              "s": { "a": 0, "k": [100, 100] },
              "nm": "T",
              "sk": { "a": 0, "k": 0 },
              "sa": { "a": 0, "k": 0 }
            }
          ]
        },
        {
          "ty": "gr",
          "nm": "G",
          "bm": 0,
          "it": [
            {
              "ty": "gr",
              "nm": "G",
              "bm": 0,
              "it": [
                {
                  "ty": "gr",
                  "nm": "G",
                  "bm": 0,
                  "it": [
                    {
                      "ty": "sh",
                      "nm": "P",
                      "ind": 0,
                      "ks": {
                        "k": {
                          "i": [
                            [0.202, -0.171],
                            [0.0, 0.0],
                            [0.0, 0.0],
                            [0.887, -0.311],
                            [0.0, 0.0],
                            [0.0, 0.0],
                            [-0.031, -0.265],
                            [0.265, -0.031],
                            [0.0, 0.0],
                            [0.0, 0.0],
                            [0.0, 0.0],
                            [0.031, 0.265],
                            [-0.265, 0.031],
                            [0.0, 0.0],
                            [0.0, 0.0],
                            [0.125, 0.934],
                            [0.0, 0.0],
                            [0.093, -0.016],
                            [0.109, 0.124],
                            [-0.202, 0.171],
                            [0.0, 0.0],
                            [0.0, 0.0],
                            [-1.121, 0.125],
                            [0.0, 0.0],
                            [-0.125, -1.136],
                            [0.0, 0.0],
                            [0.0, 0.0],
                            [-0.171, -0.202]
                          ],
                          "o": [
                            [0.0, 0.0],
                            [0.0, 0.0],
                            [0.109, 0.965],
                            [0.0, 0.0],
                            [0.0, 0.0],
                            [0.265, -0.031],
                            [0.031, 0.265],
                            [0.0, 0.0],
                            [0.0, 0.0],
                            [0.0, 0.0],
                            [-0.265, 0.031],
                            [-0.031, -0.249],
                            [0.0, 0.0],
                            [0.0, 0.0],
                            [-0.919, -0.109],
                            [0.0, 0.0],
                            [-0.078, 0.078],
                            [-0.14, 0.016],
                            [-0.171, -0.187],
                            [0.0, 0.0],
                            [0.0, 0.0],
                            [-0.124, -1.136],
                            [0.0, 0.0],
                            [1.136, -0.125],
                            [0.0, 0.0],
                            [0.0, 0.0],
                            [0.187, -0.171],
                            [0.171, 0.187]
                          ],
                          "v": [
                            [24.993, 39.062],
                            [22.362, 41.366],
                            [22.674, 44.168],
                            [21.319, 46.332],
                            [21.538, 48.34],
                            [22.876, 48.184],
                            [23.406, 48.604],
                            [22.985, 49.134],
                            [21.211, 49.321],
                            [21.117, 49.336],
                            [19.358, 49.523],
                            [18.829, 49.103],
                            [19.249, 48.589],
                            [20.603, 48.433],
                            [20.37, 46.441],
                            [18.58, 44.682],
                            [16.509, 46.487],
                            [16.245, 46.612],
                            [15.84, 46.441],
                            [15.887, 45.771],
                            [18.44, 43.53],
                            [18.113, 40.51],
                            [19.934, 38.237],
                            [19.95, 38.221],
                            [22.222, 40.058],
                            [22.238, 40.214],
                            [24.37, 38.346],
                            [25.04, 38.393]
                          ],
                          "c": true
                        },
                        "a": 0
                      }
                    },
                    {
                      "ty": "fl",
                      "nm": "F",
                      "bm": 0,
                      "c": { "a": 0, "k": [0, 0, 0, 1] },
                      "o": { "a": 0, "k": 100 },
                      "r": 1
                    },
                    {
                      "ty": "tr",
                      "o": { "a": 0, "k": 100 },
                      "r": { "a": 0, "k": 0 },
                      "p": { "a": 0, "k": [0, 0] },
                      "a": { "a": 0, "k": [0, 0] },
                      "s": { "a": 0, "k": [100, 100] },
                      "nm": "T",
                      "sk": { "a": 0, "k": 0 },
                      "sa": { "a": 0, "k": 0 }
                    }
                  ]
                },
                {
                  "ty": "tr",
                  "o": { "a": 0, "k": 100 },
                  "r": { "a": 0, "k": 0 },
                  "p": { "a": 0, "k": [0, 0] },
                  "a": { "a": 0, "k": [0, 0] },
                  "s": { "a": 0, "k": [100, 100] },
                  "nm": "T",
                  "sk": { "a": 0, "k": 0 },
                  "sa": { "a": 0, "k": 0 }
                }
              ]
            },
            {
              "ty": "tr",
              "o": { "a": 0, "k": 100 },
              "r": { "a": 0, "k": 0 },
              "p": { "a": 0, "k": [0, 0] },
              "a": { "a": 0, "k": [0, 0] },
              "s": { "a": 0, "k": [100, 100] },
              "nm": "T",
              "sk": { "a": 0, "k": 0 },
              "sa": { "a": 0, "k": 0 }
            }
          ]
        }
      ],
      "ip": 0,
      "op": 200,
      "st": 0.0,
      "ty": 4
    },
    {
      "ind": 20,
      "nm": "L",
      "sr": 1.0,
      "ks": {
        "o": { "a": 0, "k": 100 },
        "r": { "a": 0, "k": 0 },
        "p": { "a": 0, "k": [242.03, 299.868, 0], "l": 2 },
        "a": { "a": 0, "k": [-13.97, 43.868, 0], "l": 2 },
        "s": {
          "k": [
            {
              "i": { "x": [0.667, 0.667, 0.667], "y": [1.0, 1.0, 1.0] },
              "o": { "x": [0.333, 0.333, 0.333], "y": [0.0, 0.0, 0.0] },
              "t": 34,
              "s": [0, 0, 100]
            },
            { "t": 43, "s": [100, 100, 100] }
          ],
          "a": 1,
          "l": 2
        }
      },
      "shapes": [
        {
          "ty": "gr",
          "nm": "G",
          "bm": 0,
          "it": [
            {
              "ty": "sh",
              "nm": "P",
              "ind": 0,
              "ks": {
                "k": {
                  "i": [
                    [0.0, -6.531],
                    [6.554, 0.0],
                    [0.0, 6.554],
                    [-6.555, 0.0]
                  ],
                  "o": [
                    [0.0, 6.554],
                    [-6.555, 0.0],
                    [0.0, -6.531],
                    [6.554, 0.0]
                  ],
                  "v": [
                    [-2.112, 43.856],
                    [-13.97, 55.737],
                    [-25.828, 43.856],
                    [-13.97, 31.998]
                  ],
                  "c": true
                },
                "a": 0
              }
            },
            {
              "ty": "st",
              "nm": "S",
              "bm": 0,
              "lc": 2,
              "lj": 2,
              "o": { "a": 0, "k": 100 },
              "w": { "a": 0, "k": 1.176 },
              "c": { "a": 0, "k": [0, 0, 0, 1] }
            },
            {
              "ty": "tr",
              "o": { "a": 0, "k": 100 },
              "r": { "a": 0, "k": 0 },
              "p": { "a": 0, "k": [0, 0] },
              "a": { "a": 0, "k": [0, 0] },
              "s": { "a": 0, "k": [100, 100] },
              "nm": "T",
              "sk": { "a": 0, "k": 0 },
              "sa": { "a": 0, "k": 0 }
            }
          ]
        },
        {
          "ty": "gr",
          "nm": "G",
          "bm": 0,
          "it": [
            {
              "ty": "gr",
              "nm": "G",
              "bm": 0,
              "it": [
                {
                  "ty": "gr",
                  "nm": "G",
                  "bm": 0,
                  "it": [
                    {
                      "ty": "sh",
                      "nm": "P",
                      "ind": 0,
                      "ks": {
                        "k": {
                          "i": [
                            [0.233, -0.311],
                            [1.074, -0.514],
                            [1.183, 0.669],
                            [0.623, 1.074],
                            [-1.027, 1.043],
                            [-0.296, -0.28],
                            [0.0, 0.0],
                            [0.187, -0.296],
                            [0.405, -0.576],
                            [-2.102, -0.42],
                            [-0.483, 0.405],
                            [-0.28, -0.249],
                            [0.0, 0.0]
                          ],
                          "o": [
                            [-0.342, 0.467],
                            [-1.868, 0.887],
                            [-1.183, -0.669],
                            [-1.292, -2.257],
                            [0.296, -0.28],
                            [0.0, 0.0],
                            [0.249, 0.249],
                            [-0.171, 0.311],
                            [-0.872, 1.214],
                            [1.308, 0.265],
                            [0.296, -0.249],
                            [0.0, 0.0],
                            [0.311, 0.249]
                          ],
                          "v": [
                            [-8.064, 47.683],
                            [-10.119, 49.333],
                            [-14.369, 48.96],
                            [-19.552, 43.729],
                            [-18.136, 38.172],
                            [-17.062, 38.172],
                            [-15.661, 39.62],
                            [-15.552, 40.522],
                            [-16.423, 41.861],
                            [-13.139, 46.189],
                            [-10.477, 45.551],
                            [-9.496, 45.535],
                            [-8.189, 46.671]
                          ],
                          "c": true
                        },
                        "a": 0
                      }
                    },
                    {
                      "ty": "fl",
                      "nm": "F",
                      "bm": 0,
                      "c": { "a": 0, "k": [0, 0, 0, 1] },
                      "o": { "a": 0, "k": 100 },
                      "r": 1
                    },
                    {
                      "ty": "tr",
                      "o": { "a": 0, "k": 100 },
                      "r": { "a": 0, "k": 0 },
                      "p": { "a": 0, "k": [0, 0] },
                      "a": { "a": 0, "k": [0, 0] },
                      "s": { "a": 0, "k": [100, 100] },
                      "nm": "T",
                      "sk": { "a": 0, "k": 0 },
                      "sa": { "a": 0, "k": 0 }
                    }
                  ]
                },
                {
                  "ty": "tr",
                  "o": { "a": 0, "k": 100 },
                  "r": { "a": 0, "k": 0 },
                  "p": { "a": 0, "k": [0, 0] },
                  "a": { "a": 0, "k": [0, 0] },
                  "s": { "a": 0, "k": [100, 100] },
                  "nm": "T",
                  "sk": { "a": 0, "k": 0 },
                  "sa": { "a": 0, "k": 0 }
                }
              ]
            },
            {
              "ty": "tr",
              "o": { "a": 0, "k": 100 },
              "r": { "a": 0, "k": 0 },
              "p": { "a": 0, "k": [0, 0] },
              "a": { "a": 0, "k": [0, 0] },
              "s": { "a": 0, "k": [100, 100] },
              "nm": "T",
              "sk": { "a": 0, "k": 0 },
              "sa": { "a": 0, "k": 0 }
            }
          ]
        }
      ],
      "ip": 0,
      "op": 200,
      "st": 0.0,
      "ty": 4
    },
    {
      "ind": 21,
      "nm": "L",
      "sr": 1.0,
      "ks": {
        "o": { "a": 0, "k": 100 },
        "r": { "a": 0, "k": 0 },
        "p": { "a": 0, "k": [259.235, 258.142, 0], "l": 2 },
        "a": { "a": 0, "k": [3.235, 2.142, 0], "l": 2 },
        "s": { "a": 0, "k": [100, 100, 100], "l": 2 }
      },
      "shapes": [
        {
          "ty": "gr",
          "nm": "G",
          "bm": 0,
          "it": [
            {
              "ty": "sh",
              "nm": "P",
              "ind": 0,
              "ks": {
                "k": {
                  "i": [
                    [0.0, 0.0],
                    [0.0, 0.0]
                  ],
                  "o": [
                    [0.0, 0.0],
                    [0.0, 0.0]
                  ],
                  "v": [
                    [-26.56, 2.142],
                    [33.029, 2.142]
                  ],
                  "c": false
                },
                "a": 0
              }
            },
            {
              "ty": "st",
              "nm": "S",
              "bm": 0,
              "lc": 2,
              "lj": 2,
              "o": { "a": 0, "k": 100 },
              "w": { "a": 0, "k": 1.176 },
              "c": { "a": 0, "k": [0, 0, 0, 1] }
            },
            {
              "ty": "tr",
              "o": { "a": 0, "k": 100 },
              "r": { "a": 0, "k": 0 },
              "p": { "a": 0, "k": [0, 0] },
              "a": { "a": 0, "k": [0, 0] },
              "s": { "a": 0, "k": [100, 100] },
              "nm": "T",
              "sk": { "a": 0, "k": 0 },
              "sa": { "a": 0, "k": 0 }
            }
          ]
        },
        {
          "ty": "tm",
          "nm": "T",
          "s": { "a": 0, "k": 0 },
          "e": {
            "a": 1,
            "k": [
              {
                "i": { "x": [0.667], "y": [1.0] },
                "o": { "x": [0.333], "y": [0.0] },
                "t": 41,
                "s": [0]
              },
              { "t": 58, "s": [100] }
            ]
          },
          "o": { "a": 0, "k": 0 },
          "m": 1
        }
      ],
      "ip": 16,
      "op": 216,
      "st": 16.0,
      "ty": 4
    },
    {
      "ind": 22,
      "nm": "L",
      "sr": 1.0,
      "ks": {
        "o": { "a": 0, "k": 100 },
        "r": { "a": 0, "k": 0 },
        "p": { "a": 0, "k": [259.235, 268.142, 0], "l": 2 },
        "a": { "a": 0, "k": [3.235, 2.142, 0], "l": 2 },
        "s": { "a": 0, "k": [100, 100, 100], "l": 2 }
      },
      "shapes": [
        {
          "ty": "gr",
          "nm": "G",
          "bm": 0,
          "it": [
            {
              "ty": "sh",
              "nm": "P",
              "ind": 0,
              "ks": {
                "k": {
                  "i": [
                    [0.0, 0.0],
                    [0.0, 0.0]
                  ],
                  "o": [
                    [0.0, 0.0],
                    [0.0, 0.0]
                  ],
                  "v": [
                    [-26.56, 2.142],
                    [33.029, 2.142]
                  ],
                  "c": false
                },
                "a": 0
              }
            },
            {
              "ty": "st",
              "nm": "S",
              "bm": 0,
              "lc": 2,
              "lj": 2,
              "o": { "a": 0, "k": 100 },
              "w": { "a": 0, "k": 1.176 },
              "c": { "a": 0, "k": [0, 0, 0, 1] }
            },
            {
              "ty": "tr",
              "o": { "a": 0, "k": 100 },
              "r": { "a": 0, "k": 0 },
              "p": { "a": 0, "k": [0, 0] },
              "a": { "a": 0, "k": [0, 0] },
              "s": { "a": 0, "k": [100, 100] },
              "nm": "T",
              "sk": { "a": 0, "k": 0 },
              "sa": { "a": 0, "k": 0 }
            }
          ]
        },
        {
          "ty": "tm",
          "nm": "T",
          "s": { "a": 0, "k": 0 },
          "e": {
            "a": 1,
            "k": [
              {
                "i": { "x": [0.667], "y": [1.0] },
                "o": { "x": [0.333], "y": [0.0] },
                "t": 58,
                "s": [0]
              },
              { "t": 75, "s": [70] }
            ]
          },
          "o": { "a": 0, "k": 0 },
          "m": 1
        }
      ],
      "ip": 33,
      "op": 233,
      "st": 33.0,
      "ty": 4
    },
    {
      "ind": 23,
      "nm": "L",
      "sr": 1.0,
      "ks": {
        "o": { "a": 0, "k": 100 },
        "r": {
          "a": 1,
          "k": [
            {
              "i": { "x": [0.667], "y": [1.0] },
              "o": { "x": [0.333], "y": [0.0] },
              "t": 54,
              "s": [0]
            },
            {
              "i": { "x": [0.667], "y": [1.0] },
              "o": { "x": [0.333], "y": [0.0] },
              "t": 63,
              "s": [-33]
            },
            {
              "i": { "x": [0.667], "y": [1.0] },
              "o": { "x": [0.333], "y": [0.0] },
              "t": 89,
              "s": [-33]
            },
            { "t": 98, "s": [0] }
          ]
        },
        "p": { "a": 0, "k": [259.235, 213, 0], "l": 2 },
        "a": { "a": 0, "k": [3.235, -42, 0], "l": 2 },
        "s": {
          "k": [
            {
              "i": { "x": [0.667, 0.667, 0.667], "y": [1.0, 1.0, 1.0] },
              "o": { "x": [0.333, 0.333, 0.333], "y": [0.0, 0.0, 0.0] },
              "t": 25,
              "s": [0, 0, 100]
            },
            { "t": 34, "s": [100, 100, 100] }
          ],
          "x": "var $bm_rt;\nvar fx = effect('\u015dlosilo pli pura');\nvar doAnticipation = fx(1).value;\nvar doInterpolation = fx(2).value;\nvar doFollowThrough = fx(3).value;\nvar damping = $bm_div(fx(15).value, 10);\nvar elasticity = $bm_div(fx(13).value, 10);\nvar bounce = fx(17).value;\nvar anticipationDuration = fx(5).value;\nvar anticipationQuantity = $bm_div(fx(6).value, 100);\nvar slowIn = $bm_div(fx(9).value, 100);\nvar slowOut = $bm_div(fx(10).value, 100);\nvar spatialMode = fx(21).value;\nvar spatialDoInterpolation = fx(20).value;\nvar moBlurPrecision = fx(32).value;\nvar elasticityRandom = fx(14).value;\nvar dampingRandom = fx(16).value;\nvar softBody = fx(28).value;\nvar flexibility = $bm_div(fx(29).value, 100);\nvar doOverlap = fx(23).value;\nvar overlapDuration = fx(24).value;\nvar overlapRandom = fx(25).value;\nvar threshold = $bm_div($bm_div(1, moBlurPrecision), 1000);\nvar zeroValue;\nif ($bm_isInstanceOfArray(value)) {\n    if (value.length == 2)\n        zeroValue = [\n            0,\n            0\n        ];\n    else if (value.length == 3)\n        zeroValue = [\n            0,\n            0,\n            0\n        ];\n    else if (value.length == 4)\n        zeroValue = [\n            0,\n            0,\n            0,\n            0\n        ];\n} else\n    zeroValue = 0;\nvar isThisSpatial = isSpatial(thisProperty);\nvar isThisPosition = thisProperty === $bm_transform.position;\nvar simulate = false;\nif (isThisSpatial) {\n    doInterpolation = doInterpolation && spatialDoInterpolation;\n    if (isThisPosition && thisProperty.numKeys > 0) {\n        doOverlap = false;\n        simulate = false;\n    } else {\n        simulate = spatialMode == 2;\n        doOverlap = overlapDuration != 0 && doOverlap && simulate;\n    }\n} else {\n    doOverlap = false;\n}\nif (!doOverlap) {\n    overlapDuration = 0;\n}\nif (simulate && softBody && isThisSpatial && !isThisPosition && (doFollowThrough || doOverlap)) {\n    var distanceRatio = $bm_div(length(valueAtTime(0), $bm_transform.anchorPoint), $bm_div(thisLayer.width, 2));\n    distanceRatio = $bm_div($bm_sum(1, $bm_mul(distanceRatio, flexibility)), 2);\n    if (doFollowThrough) {\n        elasticity = $bm_div(elasticity, distanceRatio);\n        damping = $bm_div(damping, distanceRatio);\n    }\n    if (doOverlap) {\n        overlapDuration = $bm_mul(overlapDuration, distanceRatio);\n    }\n}\nseedRandom(0, true);\nif (doFollowThrough) {\n    if (elasticityRandom > 0)\n        elasticity = addNoise(elasticity, elasticityRandom);\n    if (dampingRandom > 0)\n        damping = addNoise(damping, dampingRandom);\n}\nif (doOverlap) {\n    if (doOverlap && overlapRandom > 0)\n        overlapDuration = addNoise(overlapDuration, overlapRandom);\n}\nvar result = value;\nfunction isSpatial(prop) {\n    if (!(prop.value instanceof Array))\n        return false;\n    if (prop.value.length != 2 && prop.value.length != 3)\n        return false;\n    try {\n        if (typeof prop.speed !== 'undefined')\n            return true;\n    } catch (e) {\n        return false;\n    }\n}\nfunction addNoise(val, quantity) {\n    var randomValue = random(0.9, 1.1);\n    var noiseValue = noise($bm_mul(valueAtTime(0), randomValue));\n    noiseValue = $bm_mul(noiseValue, $bm_div(quantity, 100));\n    return $bm_mul(val, $bm_sum(noiseValue, 1));\n}\nfunction isAfterLastKey() {\n    if (numKeys == 0)\n        return false;\n    var nKey = nearestKey(time);\n    return nKey.time <= time && nKey.index == numKeys;\n}\nfunction isStill(t, threshold) {\n    var d = $bm_sub(valueAtTime(t), valueAtTime($bm_sum(t, framesToTime(1))));\n    if ($bm_isInstanceOfArray(d)) {\n        for (var i = 0; i < d.length; i++) {\n            d[i] = Math.abs(d[i]);\n            if (d[i] >= threshold) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        d = Math.abs(d);\n        return d < threshold;\n    }\n}\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\n    if (arguments.length !== 5 && arguments.length !== 6)\n        return t;\n    var a = $bm_sub(value2, value1);\n    var b = $bm_sub(tMax, tMin);\n    if (b == 0)\n        return t;\n    var c = clamp($bm_div($bm_sub(t, tMin), b), 0, 1);\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4)\n        bezierPoints = [\n            0.33,\n            0,\n            0.66,\n            1\n        ];\n    return $bm_sum($bm_mul(a, h(c, bezierPoints)), value1);\n    function h(f, g) {\n        var x = $bm_mul(3, g[0]);\n        var j = $bm_sub($bm_mul(3, $bm_sub(g[2], g[0])), x);\n        var k = $bm_sub($bm_sub(1, x), j);\n        var l = $bm_mul(3, g[1]);\n        var m = $bm_sub($bm_mul(3, $bm_sub(g[3], g[1])), l);\n        var n = $bm_sub($bm_sub(1, l), m);\n        var d = f;\n        for (var i = 0; i < 5; i++) {\n            var z = $bm_sub($bm_mul(d, $bm_sum(x, $bm_mul(d, $bm_sum(j, $bm_mul(d, k))))), f);\n            if (Math.abs(z) < 0.001)\n                break;\n            d = $bm_sub(d, $bm_div(z, $bm_sum(x, $bm_mul(d, $bm_sum($bm_mul(2, j), $bm_mul($bm_mul(3, k), d))))));\n        }\n        return $bm_mul(d, $bm_sum(l, $bm_mul(d, $bm_sum(m, $bm_mul(d, n)))));\n    }\n}\nfunction getPropWorldSpeed(t, prop) {\n    return length(getPropWorldVelocity(t, prop));\n}\nfunction getPrevKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time <= t)\n        return nKey;\n    if (nKey.index > 1)\n        return key($bm_sub(nKey.index, 1));\n    return null;\n}\nfunction getNextKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time >= t)\n        return nKey;\n    if (nKey.index < numKeys)\n        return key($bm_sum(nKey.index, 1));\n    return null;\n}\nfunction getPropWorldVelocity(t, prop) {\n    return $bm_mul($bm_sub(getPropWorldValue($bm_sum(t, 0.005), prop), getPropWorldValue($bm_sub(t, 0.005), prop)), 100);\n}\nfunction getLayerWorldPos(t, l) {\n    return l.toWorld(l.anchorPoint, t);\n}\nfunction getPropWorldValue(t, prop) {\n    if (isPosition(prop))\n        return getLayerWorldPos(t, thisLayer);\n    return thisLayer.toWorld(prop.valueAtTime(t), t);\n}\nfunction isPosition(prop) {\n    return prop === $bm_transform.position;\n}\nfunction isKeyTop(k, axis) {\n    var prevSpeed = velocityAtTime($bm_sub(k.time, threshold));\n    var nextSpeed = velocityAtTime($bm_sum(k.time, threshold));\n    if ($bm_isInstanceOfArray(value)) {\n        prevSpeed = prevSpeed[axis];\n        nextSpeed = nextSpeed[axis];\n    }\n    if (Math.abs(prevSpeed) < 0.01 || Math.abs(nextSpeed) < 0.01)\n        return true;\n    return $bm_mul(prevSpeed, nextSpeed) < 0;\n}\nfunction anticipate() {\n    var anticipation = zeroValue;\n    if (isAfterLastKey())\n        return anticipation;\n    if (numKeys < 2)\n        return anticipation;\n    var nextKey = getNextKey(time);\n    var aKey = nextKey;\n    if (!isStill(aKey.time - 0.1, 0.1)) {\n        aKey = getPrevKey(time);\n        if (!isStill(aKey.time - 0.1, 0.1))\n            return anticipation;\n    }\n    if (aKey.index == numKeys)\n        return anticipation;\n    var anticipationMiddle = aKey.time;\n    var anticipationStart = $bm_sub(anticipationMiddle, anticipationDuration);\n    var anticipationEnd = key(aKey.index + 1).time;\n    var startValue = anticipation;\n    var midValue = $bm_mul($bm_sum($bm_neg(valueAtTime($bm_sum(anticipationMiddle, anticipationDuration))), aKey.value), anticipationQuantity);\n    var endValue = anticipation;\n    if (time < anticipationStart) {\n        return anticipation;\n    } else if (time < anticipationMiddle) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue[i], midValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue, midValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else if (time <= anticipationEnd) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue[i], endValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue, endValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else {\n        return anticipation;\n    }\n}\nfunction followThroughAtTime(t) {\n    var fThrough = zeroValue;\n    if (elasticity == 0)\n        return fThrough;\n    var propSpeed;\n    if (!simulate) {\n        if (numKeys < 2)\n            return fThrough;\n        if (nearestKey(t).index == 1)\n            return fThrough;\n        propSpeed = length(velocityAtTime(t));\n        if (propSpeed >= threshold)\n            return fThrough;\n    } else {\n        propSpeed = getPropWorldSpeed(t, thisProperty);\n        if (propSpeed >= threshold)\n            return fThrough;\n    }\n    var fThroughStart = 0;\n    var fThroughTime = 0;\n    if (simulate) {\n        var speedI = getPropWorldSpeed(t, thisProperty);\n        var i = t;\n        while (speedI < threshold && i > 0) {\n            i = $bm_sub(i, $bm_div(thisComp.frameDuration, moBlurPrecision));\n            speedI = getPropWorldSpeed(i, thisProperty);\n        }\n        fThroughStart = i;\n    } else {\n        var fThroughKey = getPrevKey(t);\n        fThroughStart = fThroughKey.time;\n    }\n    if (fThroughStart == 0)\n        return fThrough;\n    fThroughTime = $bm_sub(t, fThroughStart);\n    if (simulate)\n        fThrough = $bm_div(getPropWorldVelocity($bm_sub(fThroughStart, thisComp.frameDuration), thisProperty), 2);\n    else\n        fThrough = $bm_div(velocityAtTime($bm_sub(fThroughStart, thisComp.frameDuration)), 2);\n    if (bounce) {\n        var cycleDamp = Math.exp($bm_mul($bm_mul(fThroughTime, damping), 0.1));\n        var damp = $bm_div(Math.exp($bm_mul(fThroughTime, damping)), $bm_div(elasticity, 2));\n        var cycleDuration = $bm_div(1, $bm_mul(elasticity, 2));\n        cycleDuration = Math.round(timeToFrames(cycleDuration));\n        cycleDuration = framesToTime(cycleDuration);\n        var midDuration = $bm_div(cycleDuration, 2);\n        var maxValue = $bm_mul(fThrough, midDuration);\n        var cycvarime = fThroughTime;\n        var numEndCycles = 1;\n        while (cycvarime > cycleDuration) {\n            cycvarime = $bm_sub(cycvarime, cycleDuration);\n            cycleDuration = $bm_div(cycleDuration, cycleDamp);\n            cycleDuration = Math.round(timeToFrames(cycleDuration));\n            if (cycleDuration < 2) {\n                cycleDuration = 2;\n                numEndCycles++;\n            }\n            cycleDuration = framesToTime(cycleDuration);\n            midDuration = $bm_div(cycleDuration, 2);\n            maxValue = $bm_div($bm_mul(fThrough, midDuration), damp);\n            if (numEndCycles > 100 / damping && maxValue < threshold)\n                return zeroValue;\n        }\n        if (cycvarime < midDuration)\n            fThrough = bezierInterpolation(cycvarime, 0, midDuration, 0, maxValue, [\n                0,\n                0.1,\n                slowIn,\n                1\n            ]);\n        else\n            fThrough = bezierInterpolation(cycvarime, midDuration, cycleDuration, maxValue, 0, [\n                $bm_sub(1, slowIn),\n                0,\n                1,\n                0.9\n            ]);\n    } else {\n        var damp = Math.exp($bm_mul(fThroughTime, damping));\n        var sinus = $bm_mul($bm_mul($bm_mul(elasticity, fThroughTime), 2), Math.PI);\n        sinus = Math.sin(sinus);\n        sinus = $bm_mul($bm_div(0.3, elasticity), sinus);\n        sinus = $bm_div(sinus, damp);\n        if (Math.abs(sinus) < $bm_div(threshold, 100))\n            return 0;\n        fThrough = $bm_mul(fThrough, sinus);\n        if (threshold > 0) {\n            fThrough = $bm_mul(fThrough, $bm_sub(1, $bm_div(propSpeed, threshold)));\n        }\n    }\n    if (bounce) {\n        var prevValue = valueAtTime($bm_sub(fThroughStart, thisComp.frameDuration));\n        var startValue = valueAtTime(fThroughStart);\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < prevValue.length; i++) {\n                if (prevValue[i] > startValue[i])\n                    fThrough[i] = Math.abs(fThrough[i]);\n                if (prevValue[i] < startValue[i])\n                    fThrough[i] = $bm_neg(Math.abs(fThrough[i]));\n            }\n        } else {\n            if (prevValue > startValue)\n                fThrough = Math.abs(fThrough);\n            if (prevValue < startValue)\n                fThrough = $bm_neg(Math.abs(fThrough));\n        }\n    }\n    if (simulate) {\n        if (!isThisPosition) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer));\n            fThrough = $bm_sub(thisLayer.fromWorld(fThrough), thisLayer.anchorPoint);\n        } else if (thisLayer.hasParent) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer.parent));\n            fThrough = $bm_sub(thisLayer.parent.fromWorld(fThrough), thisLayer.parent.anchorPoint);\n        }\n    }\n    return fThrough;\n}\nfunction followThrough() {\n    var propSpeed = length(velocity);\n    if (propSpeed < threshold)\n        return followThroughAtTime($bm_sub(time, overlapDuration));\n    var fThrough = zeroValue;\n    var t = time;\n    while (t > 0) {\n        t = $bm_sub(t, thisComp.frameDuration);\n        if (simulate)\n            propSpeed = getPropWorldSpeed($bm_sub(t, overlapDuration), thisProperty);\n        else\n            propSpeed = length(velocityAtTime(t));\n        if (propSpeed < threshold) {\n            fThrough = followThroughAtTime($bm_sub(t, overlapDuration));\n            break;\n        }\n    }\n    return linear(time, t, $bm_sum(t, $bm_mul(anticipationDuration, 2)), fThrough, zeroValue);\n}\nfunction smartSmooth(axis) {\n    var startKey = nearestKey(time);\n    var endKey = startKey;\n    if (time == startKey.time)\n        return 0;\n    if (time < startKey.time && startKey.index == 1)\n        return 0;\n    if (time > startKey.time && startKey.index == numKeys)\n        return 0;\n    if (time < startKey.time)\n        startKey = key($bm_sub(startKey.index, 1));\n    if (time > startKey.time)\n        endKey = key($bm_sum(startKey.index, 1));\n    var sI = 0.66;\n    var sO = 0.33;\n    var sIV = 1;\n    var sOV = 0;\n    var sVal = startKey.value;\n    var eVal = endKey.value;\n    if ($bm_isInstanceOfArray(value)) {\n        sVal = sVal[axis];\n        eVal = eVal[axis];\n    }\n    var sTime = startKey.time;\n    var eTime = endKey.time;\n    if (isKeyTop(startKey, axis))\n        sO = slowOut;\n    else {\n        var prevKey = key($bm_sub(startKey.index, 1));\n        var pVal = prevKey.value;\n        if ($bm_isInstanceOfArray(value))\n            pVal = pVal[axis];\n        sOV = $bm_div($bm_sub(sVal, pVal), $bm_sub(eVal, pVal));\n    }\n    if (isKeyTop(endKey, axis)) {\n        sI = slowIn;\n        if (endKey.index != numKeys) {\n            var nextKey = key($bm_sum(endKey.index, 1));\n            var nVal = nextKey.value;\n            if ($bm_isInstanceOfArray(value))\n                nVal = nVal[axis];\n            if (Math.abs(nVal - eVal) < 0.01 && doFollowThrough)\n                sI = 1;\n        }\n    } else {\n        var nextKey = key($bm_sum(endKey.index, 1));\n        var nVal = nextKey.value;\n        if ($bm_isInstanceOfArray(value))\n            nVal = nVal[axis];\n        sIV = $bm_div($bm_sub(eVal, sVal), $bm_sub(nVal, sVal));\n    }\n    if (endKey.index == numKeys && doFollowThrough) {\n        sI = 1;\n    }\n    var val = value;\n    if ($bm_isInstanceOfArray(value))\n        val = val[axis];\n    return $bm_sub(bezierInterpolation(time, sTime, eTime, sVal, eVal, [\n        sO,\n        sOV,\n        sI,\n        sIV\n    ]), val);\n}\nfunction overlap() {\n    var ol = zeroValue;\n    if (isThisPosition && !hasParent)\n        return zeroValue;\n    ol = $bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisProperty), getPropWorldValue(time, thisProperty));\n    var motionRatio = $bm_div($bm_div(length(zeroValue, ol), thisLayer.width), 2);\n    if (isThisPosition) {\n        var originalDistance = length(valueAtTime(0));\n        motionRatio = $bm_div(length(zeroValue, ol), thisComp.width);\n    }\n    ol = $bm_sum(ol, getPropWorldValue(time, thisProperty));\n    ol = $bm_sum(ol, $bm_mul($bm_mul($bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisLayer.anchorPoint), ol), motionRatio), flexibility));\n    ol = thisLayer.fromWorld(ol);\n    if (!isThisPosition)\n        ol = $bm_sub(ol, value);\n    else {\n        ol = linear(flexibility, 0, 100, $bm_div(ol, 2), 0);\n        var prevParentWorldPos = getLayerWorldPos($bm_sub(time, overlapDuration), parent);\n        ol = $bm_sum(ol, $bm_mul($bm_mul($bm_mul(thisLayer.fromWorld(prevParentWorldPos), motionRatio), flexibility), 5));\n    }\n    return ol;\n}\nvar okToGo = false;\nif (simulate && fx.enabled)\n    okToGo = true;\nelse if (numKeys > 1 && fx.enabled)\n    okToGo = true;\nif (okToGo) {\n    var smartSmoothResult = zeroValue;\n    if (doInterpolation) {\n        if ($bm_isInstanceOfArray(value)) {\n            if (value.length == 2)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1)\n                ];\n            else if (value.length == 3)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2)\n                ];\n            else if (value.length == 4)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2),\n                    smartSmooth(3)\n                ];\n        } else {\n            smartSmoothResult = smartSmooth(0);\n        }\n    }\n    if (doAnticipation)\n        result = $bm_sum(result, anticipate());\n    result = $bm_sum(result, smartSmoothResult);\n    if (doFollowThrough)\n        result = $bm_sum(result, followThrough());\n    if (doOverlap)\n        result = $bm_sum(result, overlap());\n}\n$bm_rt = result;",
          "a": 1,
          "l": 2
        }
      },
      "shapes": [
        {
          "ty": "gr",
          "nm": "G",
          "bm": 0,
          "it": [
            {
              "ty": "sh",
              "nm": "P",
              "ind": 0,
              "ks": {
                "k": {
                  "i": [
                    [0.0, 0.0],
                    [1.588, 1.254]
                  ],
                  "o": [
                    [-2.454, -0.527],
                    [0.0, 0.0]
                  ],
                  "v": [
                    [-0.81, -18.379],
                    [-6.892, -21.034]
                  ],
                  "c": false
                },
                "a": 0
              }
            },
            {
              "ty": "st",
              "nm": "S",
              "bm": 0,
              "lc": 2,
              "lj": 2,
              "o": { "a": 0, "k": 100 },
              "w": { "a": 0, "k": 1.176 },
              "c": { "a": 0, "k": [0, 0, 0, 1] }
            },
            {
              "ty": "tr",
              "o": { "a": 0, "k": 100 },
              "r": { "a": 0, "k": 0 },
              "p": { "a": 0, "k": [0, 0] },
              "a": { "a": 0, "k": [0, 0] },
              "s": { "a": 0, "k": [100, 100] },
              "nm": "T",
              "sk": { "a": 0, "k": 0 },
              "sa": { "a": 0, "k": 0 }
            }
          ]
        },
        {
          "ty": "gr",
          "nm": "G",
          "bm": 0,
          "it": [
            {
              "ty": "gr",
              "nm": "G",
              "bm": 0,
              "it": [
                {
                  "ty": "sh",
                  "nm": "P",
                  "ind": 0,
                  "ks": {
                    "k": {
                      "i": [
                        [0.0, 0.0],
                        [0.0, -1.362]
                      ],
                      "o": [
                        [-1.919, -0.434],
                        [0.0, 0.0]
                      ],
                      "v": [
                        [-12.899, -40.194],
                        [-15.789, -38.02]
                      ],
                      "c": false
                    },
                    "a": 0
                  }
                },
                {
                  "ty": "st",
                  "nm": "S",
                  "bm": 0,
                  "lc": 2,
                  "lj": 2,
                  "o": { "a": 0, "k": 100 },
                  "w": { "a": 0, "k": 1.176 },
                  "c": { "a": 0, "k": [0, 0, 0, 1] }
                },
                {
                  "ty": "tr",
                  "o": { "a": 0, "k": 100 },
                  "r": { "a": 0, "k": 0 },
                  "p": { "a": 0, "k": [0, 0] },
                  "a": { "a": 0, "k": [0, 0] },
                  "s": { "a": 0, "k": [100, 100] },
                  "nm": "T",
                  "sk": { "a": 0, "k": 0 },
                  "sa": { "a": 0, "k": 0 }
                }
              ]
            },
            {
              "ty": "gr",
              "nm": "G",
              "bm": 0,
              "it": [
                {
                  "ty": "sh",
                  "nm": "P",
                  "ind": 0,
                  "ks": {
                    "k": {
                      "i": [
                        [0.155, -3.456],
                        [10.212, 0.558],
                        [0.186, 0.016],
                        [0.0, 0.0],
                        [0.62, 0.17],
                        [2.309, 1.286],
                        [0.155, 0.093],
                        [1.488, 1.302],
                        [0.0, 0.0],
                        [-0.279, 1.55],
                        [-5.393, 1.55],
                        [0.0, 0.0],
                        [0.0, 0.0],
                        [0.0, 0.0]
                      ],
                      "o": [
                        [-0.48, 10.212],
                        [-0.186, -0.016],
                        [0.0, 0.0],
                        [-0.635, -0.14],
                        [-2.588, -0.713],
                        [-0.17, -0.093],
                        [-1.72, -1.007],
                        [0.0, 0.0],
                        [-0.325, -1.395],
                        [-5.61, -0.666],
                        [5.393, -1.55],
                        [0.0, 0.0],
                        [8.259, 2.944],
                        [0.992, 5.052]
                      ],
                      "v": [
                        [15.291, -36.075],
                        [-0.252, -18.348],
                        [-0.81, -18.379],
                        [-3.785, -9.639],
                        [-5.675, -10.104],
                        [-13.052, -13.125],
                        [-13.532, -13.404],
                        [-18.367, -16.844],
                        [-14.57, -28.668],
                        [-14.663, -33.1],
                        [-15.283, -43.668],
                        [-6.962, -40.491],
                        [-4.653, -51.106],
                        [14.175, -48.782]
                      ],
                      "c": true
                    },
                    "a": 0
                  }
                },
                {
                  "ty": "st",
                  "nm": "S",
                  "bm": 0,
                  "lc": 2,
                  "lj": 2,
                  "o": { "a": 0, "k": 100 },
                  "w": { "a": 0, "k": 1.176 },
                  "c": { "a": 0, "k": [0, 0, 0, 1] }
                },
                {
                  "ty": "tr",
                  "o": { "a": 0, "k": 100 },
                  "r": { "a": 0, "k": 0 },
                  "p": { "a": 0, "k": [0, 0] },
                  "a": { "a": 0, "k": [0, 0] },
                  "s": { "a": 0, "k": [100, 100] },
                  "nm": "T",
                  "sk": { "a": 0, "k": 0 },
                  "sa": { "a": 0, "k": 0 }
                }
              ]
            },
            {
              "ty": "gr",
              "nm": "G",
              "bm": 0,
              "it": [
                {
                  "ty": "sh",
                  "nm": "P",
                  "ind": 0,
                  "ks": {
                    "k": {
                      "i": [
                        [0.552, -4.34],
                        [0.0, 0.0],
                        [8.249, 2.926],
                        [0.0, 0.0],
                        [5.396, -1.559],
                        [0.648, -0.815],
                        [-8.585, 6.187],
                        [-4.509, -0.983],
                        [-3.382, 2.782],
                        [-1.894, -0.576],
                        [0.0, 0.0]
                      ],
                      "o": [
                        [-0.839, 6.571],
                        [0.0, 0.0],
                        [0.0, 0.0],
                        [0.0, 0.0],
                        [-1.151, 0.336],
                        [0.0, 0.0],
                        [4.316, -3.069],
                        [4.269, 0.959],
                        [1.391, -1.151],
                        [5.396, 1.631],
                        [0.0, 0.0]
                      ],
                      "v": [
                        [25.999, -54.926],
                        [14.177, -48.787],
                        [-4.647, -51.089],
                        [-6.973, -40.49],
                        [-15.27, -43.656],
                        [-17.956, -41.881],
                        [-14.263, -59.602],
                        [0.125, -61.473],
                        [12.139, -64.518],
                        [17.079, -65.789],
                        [17.678, -58.715]
                      ],
                      "c": true
                    },
                    "a": 0
                  }
                },
                {
                  "ty": "st",
                  "nm": "S",
                  "bm": 0,
                  "lc": 2,
                  "lj": 2,
                  "o": { "a": 0, "k": 100 },
                  "w": { "a": 0, "k": 1.176 },
                  "c": { "a": 0, "k": [0, 0, 0, 1] }
                },
                {
                  "ty": "fl",
                  "nm": "F",
                  "bm": 0,
                  "c": { "a": 0, "k": [0, 0, 0, 1] },
                  "o": { "a": 0, "k": 100 },
                  "r": 1
                },
                {
                  "ty": "tr",
                  "o": { "a": 0, "k": 100 },
                  "r": { "a": 0, "k": 0 },
                  "p": { "a": 0, "k": [0, 0] },
                  "a": { "a": 0, "k": [0, 0] },
                  "s": { "a": 0, "k": [100, 100] },
                  "nm": "T",
                  "sk": { "a": 0, "k": 0 },
                  "sa": { "a": 0, "k": 0 }
                }
              ]
            },
            {
              "ty": "gr",
              "nm": "G",
              "bm": 0,
              "it": [
                {
                  "ty": "sh",
                  "nm": "P",
                  "ind": 0,
                  "ks": {
                    "k": {
                      "i": [
                        [0.0, -18.38],
                        [18.396, 0.0],
                        [0.857, 0.113],
                        [1.439, 0.323],
                        [0.63, 0.162],
                        [2.312, 1.277],
                        [0.178, 0.097],
                        [1.503, 1.31],
                        [0.0, 10.152],
                        [-18.38, 0.0]
                      ],
                      "o": [
                        [0.0, 18.396],
                        [-0.857, 0.0],
                        [-1.503, -0.113],
                        [-0.647, -0.129],
                        [-2.57, -0.727],
                        [-0.178, -0.097],
                        [-1.714, -1.002],
                        [-7.177, -6.094],
                        [0.0, -18.38],
                        [18.396, 0.0]
                      ],
                      "v": [
                        [36.552, -42.2],
                        [3.219, -8.867],
                        [0.632, -9.012],
                        [-3.781, -9.642],
                        [-5.689, -10.095],
                        [-13.044, -13.118],
                        [-13.545, -13.409],
                        [-18.379, -16.852],
                        [-30.082, -42.2],
                        [3.219, -75.533]
                      ],
                      "c": true
                    },
                    "a": 0
                  }
                },
                {
                  "ty": "st",
                  "nm": "S",
                  "bm": 0,
                  "lc": 2,
                  "lj": 2,
                  "o": { "a": 0, "k": 100 },
                  "w": { "a": 0, "k": 1.176 },
                  "c": { "a": 0, "k": [0, 0, 0, 1] }
                },
                {
                  "ty": "tr",
                  "o": { "a": 0, "k": 100 },
                  "r": { "a": 0, "k": 0 },
                  "p": { "a": 0, "k": [0, 0] },
                  "a": { "a": 0, "k": [0, 0] },
                  "s": { "a": 0, "k": [100, 100] },
                  "nm": "T",
                  "sk": { "a": 0, "k": 0 },
                  "sa": { "a": 0, "k": 0 }
                }
              ]
            },
            {
              "ty": "gr",
              "nm": "G",
              "bm": 0,
              "it": [
                {
                  "ty": "sh",
                  "nm": "P",
                  "ind": 0,
                  "ks": {
                    "k": {
                      "i": [
                        [0.0, -18.38],
                        [18.396, 0.0],
                        [0.857, 0.113],
                        [1.439, 0.323],
                        [0.63, 0.162],
                        [2.312, 1.277],
                        [0.178, 0.097],
                        [1.503, 1.31],
                        [0.0, 10.152],
                        [-18.38, 0.0]
                      ],
                      "o": [
                        [0.0, 18.396],
                        [-0.857, 0.0],
                        [-1.503, -0.113],
                        [-0.647, -0.129],
                        [-2.57, -0.727],
                        [-0.178, -0.097],
                        [-1.714, -1.002],
                        [-7.177, -6.094],
                        [0.0, -18.38],
                        [18.396, 0.0]
                      ],
                      "v": [
                        [36.552, -42.2],
                        [3.219, -8.867],
                        [0.632, -9.012],
                        [-3.781, -9.642],
                        [-5.689, -10.095],
                        [-13.044, -13.118],
                        [-13.545, -13.409],
                        [-18.379, -16.852],
                        [-30.082, -42.2],
                        [3.219, -75.533]
                      ],
                      "c": true
                    },
                    "a": 0
                  }
                },
                {
                  "ty": "st",
                  "nm": "S",
                  "bm": 0,
                  "lc": 2,
                  "lj": 2,
                  "o": { "a": 0, "k": 100 },
                  "w": { "a": 0, "k": 1.176 },
                  "c": { "a": 0, "k": [0, 0, 0, 1] }
                },
                {
                  "ty": "tr",
                  "o": { "a": 0, "k": 100 },
                  "r": { "a": 0, "k": 0 },
                  "p": { "a": 0, "k": [0, 0] },
                  "a": { "a": 0, "k": [0, 0] },
                  "s": { "a": 0, "k": [100, 100] },
                  "nm": "T",
                  "sk": { "a": 0, "k": 0 },
                  "sa": { "a": 0, "k": 0 }
                }
              ]
            },
            {
              "ty": "tr",
              "o": { "a": 0, "k": 100 },
              "r": { "a": 0, "k": 0 },
              "p": { "a": 0, "k": [0, 0] },
              "a": { "a": 0, "k": [0, 0] },
              "s": { "a": 0, "k": [100, 100] },
              "nm": "T",
              "sk": { "a": 0, "k": 0 },
              "sa": { "a": 0, "k": 0 }
            }
          ]
        }
      ],
      "ip": 0,
      "op": 200,
      "st": 0.0,
      "ef": [
        {
          "ty": 5,
          "ix": 1,
          "nm": "\u015d",
          "ef": [
            { "ix": 1, "nm": "A", "ty": 7, "v": { "a": 0, "k": 0 } },
            { "ix": 2, "nm": "S", "ty": 7, "v": { "a": 0, "k": 0 } },
            { "ix": 3, "nm": "F", "ty": 7, "v": { "a": 0, "k": 1 } },
            { "ix": 4, "nm": "A", "ty": 6, "v": 0 },
            { "ix": 5, "nm": "D", "ty": 0, "v": { "a": 0, "k": 0 } },
            { "ix": 6, "nm": "A", "ty": 0, "v": { "a": 0, "k": 50 } },
            { "ix": 7, "nm": "", "ty": 6, "v": 0 },
            { "ix": 8, "nm": "I", "ty": 6, "v": 0 },
            { "ix": 9, "nm": "S", "ty": 0, "v": { "a": 0, "k": 60 } },
            { "ix": 10, "nm": "S", "ty": 0, "v": { "a": 0, "k": 25 } },
            { "ix": 11, "nm": "", "ty": 6, "v": 0 },
            { "ix": 12, "nm": "F", "ty": 6, "v": 0 },
            { "ix": 13, "nm": "E", "ty": 0, "v": { "a": 0, "k": 10 } },
            { "ix": 14, "nm": "E", "ty": 0, "v": { "a": 0, "k": 0 } },
            { "ix": 15, "nm": "D", "ty": 0, "v": { "a": 0, "k": 50 } },
            { "ix": 16, "nm": "D", "ty": 0, "v": { "a": 0, "k": 0 } },
            { "ix": 17, "nm": "B", "ty": 7, "v": { "a": 0, "k": 0 } },
            { "ix": 18, "nm": "", "ty": 6, "v": 0 },
            { "ix": 19, "nm": "S", "ty": 6, "v": 0 },
            { "ix": 20, "nm": "S", "ty": 7, "v": { "a": 0, "k": 0 } },
            { "ix": 21, "nm": "M", "ty": 7, "v": { "a": 0, "k": 1 } },
            { "ix": 22, "nm": "O", "ty": 6, "v": 0 },
            { "ix": 23, "nm": "O", "ty": 7, "v": { "a": 0, "k": 1 } },
            { "ix": 24, "nm": "D", "ty": 0, "v": { "a": 0, "k": 0.05 } },
            { "ix": 25, "nm": "O", "ty": 0, "v": { "a": 0, "k": 0 } },
            { "ix": 26, "nm": "", "ty": 6, "v": 0 },
            { "ix": 27, "nm": "S", "ty": 6, "v": 0 },
            { "ix": 28, "nm": "S", "ty": 7, "v": { "a": 0, "k": 1 } },
            { "ix": 29, "nm": "S", "ty": 0, "v": { "a": 0, "k": 100 } },
            { "ix": 30, "nm": "", "ty": 6, "v": 0 },
            { "ix": 31, "nm": "", "ty": 6, "v": 0 },
            { "ix": 32, "nm": "P", "ty": 0, "v": { "a": 0, "k": 1 } }
          ],
          "en": 1
        }
      ],
      "ty": 4
    },
    {
      "ind": 24,
      "nm": "L",
      "sr": 1.0,
      "ks": {
        "o": { "a": 0, "k": 100 },
        "r": { "a": 0, "k": 0 },
        "p": { "a": 0, "k": [256, 256, 0], "l": 2 },
        "a": { "a": 0, "k": [0, 0, 0], "l": 2 },
        "s": { "a": 0, "k": [100, 100, 100], "l": 2 }
      },
      "shapes": [
        {
          "ty": "gr",
          "nm": "G",
          "bm": 0,
          "it": [
            {
              "ty": "sh",
              "nm": "P",
              "ind": 0,
              "ks": {
                "k": {
                  "i": [
                    [0.0, 0.0],
                    [-29.5, 0.68],
                    [-2.859, 0.806],
                    [-52.99, -0.94],
                    [0.0, 0.0],
                    [0.0, 0.0],
                    [0.0, 0.0]
                  ],
                  "o": [
                    [0.0, 0.0],
                    [2.85, -0.17],
                    [54.691, -15.419],
                    [0.0, 0.0],
                    [0.0, 0.0],
                    [0.0, 0.0],
                    [0.0, 0.0]
                  ],
                  "v": [
                    [-54.393, 150.17],
                    [-5.783, 139.87],
                    [97.187, 124.17],
                    [188.317, 63.51],
                    [188.317, -193.543],
                    [-175.437, -193.543],
                    [-147.439, 169.137]
                  ],
                  "c": true
                },
                "a": 0
              }
            },
            {
              "ty": "fl",
              "nm": "F",
              "bm": 0,
              "c": { "a": 0, "k": [0.376, 0.376, 0.376, 1] },
              "o": { "a": 0, "k": 100 },
              "r": 1
            },
            {
              "ty": "tr",
              "o": { "a": 0, "k": 100 },
              "r": { "a": 0, "k": 0 },
              "p": { "a": 0, "k": [0, 0] },
              "a": { "a": 0, "k": [0, 0] },
              "s": { "a": 0, "k": [100, 100] },
              "nm": "T",
              "sk": { "a": 0, "k": 0 },
              "sa": { "a": 0, "k": 0 }
            }
          ]
        }
      ],
      "ip": 0,
      "op": 200,
      "st": 0.0,
      "td": 1,
      "ty": 4
    },
    {
      "ind": 25,
      "nm": "L",
      "sr": 1.0,
      "ks": {
        "o": { "a": 0, "k": 100 },
        "r": {
          "a": 1,
          "k": [
            {
              "i": { "x": [0.667], "y": [1.0] },
              "o": { "x": [0.333], "y": [0.0] },
              "t": 0,
              "s": [0]
            },
            {
              "i": { "x": [0.667], "y": [1.0] },
              "o": { "x": [0.333], "y": [0.0] },
              "t": 6,
              "s": [10]
            },
            {
              "i": { "x": [0.667], "y": [1.0] },
              "o": { "x": [0.333], "y": [0.0] },
              "t": 12,
              "s": [-10]
            },
            {
              "i": { "x": [0.667], "y": [1.0] },
              "o": { "x": [0.333], "y": [0.0] },
              "t": 19,
              "s": [10]
            },
            { "t": 25, "s": [0] }
          ]
        },
        "p": { "a": 0, "k": [264.026, 404.097, 0], "l": 2 },
        "a": { "a": 0, "k": [8.026, 148.097, 0], "l": 2 },
        "s": { "a": 0, "k": [100, 100, 100], "l": 2 }
      },
      "shapes": [
        {
          "ty": "gr",
          "nm": "G",
          "bm": 0,
          "it": [
            {
              "ty": "sh",
              "nm": "P",
              "ind": 0,
              "ks": {
                "k": {
                  "i": [
                    [0.0, 0.0],
                    [-3.602, -4.904]
                  ],
                  "o": [
                    [0.39, 6.425],
                    [0.0, 0.0]
                  ],
                  "v": [
                    [37.496, 72.465],
                    [42.836, 89.764]
                  ],
                  "c": false
                },
                "a": 0
              }
            },
            {
              "ty": "st",
              "nm": "S",
              "bm": 0,
              "lc": 2,
              "lj": 2,
              "o": { "a": 0, "k": 100 },
              "w": { "a": 0, "k": 1.176 },
              "c": { "a": 0, "k": [0, 0, 0, 1] }
            },
            {
              "ty": "tr",
              "o": { "a": 0, "k": 100 },
              "r": { "a": 0, "k": 0 },
              "p": { "a": 0, "k": [0, 0] },
              "a": { "a": 0, "k": [0, 0] },
              "s": { "a": 0, "k": [100, 100] },
              "nm": "T",
              "sk": { "a": 0, "k": 0 },
              "sa": { "a": 0, "k": 0 }
            }
          ]
        },
        {
          "ty": "gr",
          "nm": "G",
          "bm": 0,
          "it": [
            {
              "ty": "sh",
              "nm": "P",
              "ind": 0,
              "ks": {
                "k": {
                  "i": [
                    [0.0, 0.0],
                    [0.0, 0.0],
                    [0.0, 0.0],
                    [0.0, 0.0],
                    [-6.236, 1.906],
                    [-18.0, 3.647],
                    [-0.141, -0.541],
                    [0.0, 0.0]
                  ],
                  "o": [
                    [0.0, 0.0],
                    [0.0, 0.0],
                    [0.0, 0.0],
                    [-0.141, -0.518],
                    [17.435, -5.365],
                    [6.471, -1.341],
                    [0.0, 0.0],
                    [0.0, 0.0]
                  ],
                  "v": [
                    [106.334, 148.097],
                    [8.026, 148.097],
                    [5.902, 139.866],
                    [3.973, 132.384],
                    [13.926, 128.525],
                    [85.292, 110.36],
                    [96.069, 108.948],
                    [100.139, 124.454]
                  ],
                  "c": true
                },
                "a": 0
              }
            },
            {
              "ty": "st",
              "nm": "S",
              "bm": 0,
              "lc": 2,
              "lj": 2,
              "o": { "a": 0, "k": 100 },
              "w": { "a": 0, "k": 1.176 },
              "c": { "a": 0, "k": [0, 0, 0, 1] }
            },
            {
              "ty": "tr",
              "o": { "a": 0, "k": 100 },
              "r": { "a": 0, "k": 0 },
              "p": { "a": 0, "k": [0, 0] },
              "a": { "a": 0, "k": [0, 0] },
              "s": { "a": 0, "k": [100, 100] },
              "nm": "T",
              "sk": { "a": 0, "k": 0 },
              "sa": { "a": 0, "k": 0 }
            }
          ]
        },
        {
          "ty": "gr",
          "nm": "G",
          "bm": 0,
          "it": [
            {
              "ty": "sh",
              "nm": "P",
              "ind": 0,
              "ks": {
                "k": {
                  "i": [
                    [0.0, 0.0],
                    [17.435, -5.365],
                    [0.0, 0.0],
                    [-0.635, -2.353]
                  ],
                  "o": [
                    [-18.0, 3.647],
                    [0.0, 0.0],
                    [-0.635, -2.329],
                    [0.0, 0.0]
                  ],
                  "v": [
                    [85.292, 110.36],
                    [13.926, 128.525],
                    [11.714, 120.289],
                    [83.08, 102.148]
                  ],
                  "c": true
                },
                "a": 0
              }
            },
            {
              "ty": "st",
              "nm": "S",
              "bm": 0,
              "lc": 2,
              "lj": 2,
              "o": { "a": 0, "k": 100 },
              "w": { "a": 0, "k": 1.176 },
              "c": { "a": 0, "k": [0, 0, 0, 1] }
            },
            {
              "ty": "fl",
              "nm": "F",
              "bm": 0,
              "c": { "a": 0, "k": [0, 0, 0, 1] },
              "o": { "a": 0, "k": 100 },
              "r": 1
            },
            {
              "ty": "tr",
              "o": { "a": 0, "k": 100 },
              "r": { "a": 0, "k": 0 },
              "p": { "a": 0, "k": [0, 0] },
              "a": { "a": 0, "k": [0, 0] },
              "s": { "a": 0, "k": [100, 100] },
              "nm": "T",
              "sk": { "a": 0, "k": 0 },
              "sa": { "a": 0, "k": 0 }
            }
          ]
        },
        {
          "ty": "gr",
          "nm": "G",
          "bm": 0,
          "it": [
            {
              "ty": "sh",
              "nm": "P",
              "ind": 0,
              "ks": {
                "k": {
                  "i": [
                    [-1.986, -7.868],
                    [-4.666, 0.701],
                    [0.0, 0.0]
                  ],
                  "o": [
                    [1.461, 5.789],
                    [-3.41, -9.353],
                    [0.0, 0.0]
                  ],
                  "v": [
                    [53.966, -15.834],
                    [62.345, -10.483],
                    [55.971, -30.135]
                  ],
                  "c": true
                },
                "a": 0
              }
            },
            {
              "ty": "st",
              "nm": "S",
              "bm": 0,
              "lc": 2,
              "lj": 2,
              "o": { "a": 0, "k": 100 },
              "w": { "a": 0, "k": 1.176 },
              "c": { "a": 0, "k": [0, 0, 0, 1] }
            },
            {
              "ty": "tr",
              "o": { "a": 0, "k": 100 },
              "r": { "a": 0, "k": 0 },
              "p": { "a": 0, "k": [0, 0] },
              "a": { "a": 0, "k": [0, 0] },
              "s": { "a": 0, "k": [100, 100] },
              "nm": "T",
              "sk": { "a": 0, "k": 0 },
              "sa": { "a": 0, "k": 0 }
            }
          ]
        },
        {
          "ty": "gr",
          "nm": "G",
          "bm": 0,
          "it": [
            {
              "ty": "sh",
              "nm": "P",
              "ind": 0,
              "ks": {
                "k": {
                  "i": [
                    [0.0, 0.0],
                    [0.0, 0.0],
                    [0.0, 0.0],
                    [0.0, 0.0],
                    [18.494, 39.46],
                    [0.0, 0.0],
                    [-13.13, 10.377],
                    [-1.27, 7.553],
                    [-7.953, 19.953],
                    [-1.129, 1.223],
                    [-3.647, -0.118],
                    [-3.412, -9.341],
                    [-1.624, -2.777],
                    [2.941, -18.047]
                  ],
                  "o": [
                    [0.0, 0.0],
                    [0.0, 0.0],
                    [0.0, 0.0],
                    [0.0, 0.0],
                    [0.0, 0.0],
                    [0.0, 0.0],
                    [0.0, 0.0],
                    [0.0, 0.0],
                    [0.0, 0.0],
                    [1.718, -1.859],
                    [0.0, 0.0],
                    [1.718, 4.706],
                    [4.847, 8.306],
                    [-2.941, 18.047]
                  ],
                  "v": [
                    [71.339, 85.559],
                    [77.127, 106.971],
                    [20.091, 121.725],
                    [14.302, 104.995],
                    [-18.404, 73.112],
                    [37.503, 72.453],
                    [47.409, 39.605],
                    [46.962, 12.993],
                    [45.997, -23.855],
                    [47.738, -26.09],
                    [55.974, -30.137],
                    [62.35, -10.49],
                    [67.527, 1.463],
                    [76.986, 54.006]
                  ],
                  "c": true
                },
                "a": 0
              }
            },
            {
              "ty": "st",
              "nm": "S",
              "bm": 0,
              "lc": 2,
              "lj": 2,
              "o": { "a": 0, "k": 100 },
              "w": { "a": 0, "k": 1.176 },
              "c": { "a": 0, "k": [0, 0, 0, 1] }
            },
            {
              "ty": "tr",
              "o": { "a": 0, "k": 100 },
              "r": { "a": 0, "k": 0 },
              "p": { "a": 0, "k": [0, 0] },
              "a": { "a": 0, "k": [0, 0] },
              "s": { "a": 0, "k": [100, 100] },
              "nm": "T",
              "sk": { "a": 0, "k": 0 },
              "sa": { "a": 0, "k": 0 }
            }
          ]
        },
        {
          "ty": "gr",
          "nm": "G",
          "bm": 0,
          "it": [
            {
              "ty": "gr",
              "nm": "G",
              "bm": 0,
              "it": [
                {
                  "ty": "sh",
                  "nm": "P",
                  "ind": 0,
                  "ks": {
                    "k": {
                      "i": [
                        [-2.94, -2.477],
                        [1.005, -2.028],
                        [1.695, 1.281],
                        [0.017, 1.957]
                      ],
                      "o": [
                        [0.0, 0.0],
                        [-1.005, 2.028],
                        [-1.695, -1.281],
                        [-0.017, -1.957]
                      ],
                      "v": [
                        [-39.221, 49.09],
                        [-35.852, 54.987],
                        [-40.479, 55.864],
                        [-43.381, 51.129]
                      ],
                      "c": true
                    },
                    "a": 0
                  }
                },
                {
                  "ty": "st",
                  "nm": "S",
                  "bm": 0,
                  "lc": 2,
                  "lj": 2,
                  "o": { "a": 0, "k": 100 },
                  "w": { "a": 0, "k": 1.176 },
                  "c": { "a": 0, "k": [0, 0, 0, 1] }
                },
                {
                  "ty": "tr",
                  "o": { "a": 0, "k": 100 },
                  "r": { "a": 0, "k": 0 },
                  "p": { "a": 0, "k": [0, 0] },
                  "a": { "a": 0, "k": [0, 0] },
                  "s": { "a": 0, "k": [100, 100] },
                  "nm": "T",
                  "sk": { "a": 0, "k": 0 },
                  "sa": { "a": 0, "k": 0 }
                }
              ]
            },
            {
              "ty": "gr",
              "nm": "G",
              "bm": 0,
              "it": [
                {
                  "ty": "sh",
                  "nm": "P",
                  "ind": 0,
                  "ks": {
                    "k": {
                      "i": [
                        [-3.616, -3.047],
                        [1.235, -2.494],
                        [2.085, 1.575],
                        [0.021, 2.407]
                      ],
                      "o": [
                        [0.0, 0.0],
                        [-1.235, 2.494],
                        [-2.085, -1.575],
                        [-0.021, -2.407]
                      ],
                      "v": [
                        [-40.357, 24.396],
                        [-36.214, 31.648],
                        [-41.905, 32.726],
                        [-45.473, 26.902]
                      ],
                      "c": true
                    },
                    "a": 0
                  }
                },
                {
                  "ty": "st",
                  "nm": "S",
                  "bm": 0,
                  "lc": 2,
                  "lj": 2,
                  "o": { "a": 0, "k": 100 },
                  "w": { "a": 0, "k": 1.176 },
                  "c": { "a": 0, "k": [0, 0, 0, 1] }
                },
                {
                  "ty": "tr",
                  "o": { "a": 0, "k": 100 },
                  "r": { "a": 0, "k": 0 },
                  "p": { "a": 0, "k": [0, 0] },
                  "a": { "a": 0, "k": [0, 0] },
                  "s": { "a": 0, "k": [100, 100] },
                  "nm": "T",
                  "sk": { "a": 0, "k": 0 },
                  "sa": { "a": 0, "k": 0 }
                }
              ]
            },
            {
              "ty": "gr",
              "nm": "G",
              "bm": 0,
              "it": [
                {
                  "ty": "sh",
                  "nm": "P",
                  "ind": 0,
                  "ks": {
                    "k": {
                      "i": [
                        [-3.536, -2.98],
                        [1.208, -2.439],
                        [2.039, 1.541],
                        [0.021, 2.354]
                      ],
                      "o": [
                        [0.0, 0.0],
                        [-1.208, 2.439],
                        [-2.039, -1.541],
                        [-0.021, -2.354]
                      ],
                      "v": [
                        [-41.613, 1.35],
                        [-37.81, 8.082],
                        [-42.968, 10.036],
                        [-46.618, 3.802]
                      ],
                      "c": true
                    },
                    "a": 0
                  }
                },
                {
                  "ty": "st",
                  "nm": "S",
                  "bm": 0,
                  "lc": 2,
                  "lj": 2,
                  "o": { "a": 0, "k": 100 },
                  "w": { "a": 0, "k": 1.176 },
                  "c": { "a": 0, "k": [0, 0, 0, 1] }
                },
                {
                  "ty": "tr",
                  "o": { "a": 0, "k": 100 },
                  "r": { "a": 0, "k": 0 },
                  "p": { "a": 0, "k": [0, 0] },
                  "a": { "a": 0, "k": [0, 0] },
                  "s": { "a": 0, "k": [100, 100] },
                  "nm": "T",
                  "sk": { "a": 0, "k": 0 },
                  "sa": { "a": 0, "k": 0 }
                }
              ]
            },
            {
              "ty": "gr",
              "nm": "G",
              "bm": 0,
              "it": [
                {
                  "ty": "sh",
                  "nm": "P",
                  "ind": 0,
                  "ks": {
                    "k": {
                      "i": [
                        [8.259, -1.2],
                        [1.671, 0.706],
                        [2.965, 5.882],
                        [0.0, 0.0],
                        [-0.235, -0.259],
                        [-2.377, -1.035],
                        [-0.024, 0.0],
                        [-0.188, -0.071],
                        [-0.353, -0.094],
                        [-0.024, -0.023]
                      ],
                      "o": [
                        [-1.718, 0.259],
                        [-4.917, -2.047],
                        [-4.0, -7.882],
                        [0.212, 0.282],
                        [2.118, 2.612],
                        [0.024, 0.047],
                        [0.188, 0.094],
                        [0.353, 0.141],
                        [0.024, 0.024],
                        [6.776, 6.635]
                      ],
                      "v": [
                        [-35.463, 60.359],
                        [-40.569, 59.606],
                        [-52.899, 46.029],
                        [-49.981, 30.523],
                        [-49.299, 31.346],
                        [-42.546, 36.946],
                        [-42.475, 36.994],
                        [-41.887, 37.229],
                        [-40.852, 37.558],
                        [-40.804, 37.605]
                      ],
                      "c": true
                    },
                    "a": 0
                  }
                },
                {
                  "ty": "st",
                  "nm": "S",
                  "bm": 0,
                  "lc": 2,
                  "lj": 2,
                  "o": { "a": 0, "k": 100 },
                  "w": { "a": 0, "k": 1.176 },
                  "c": { "a": 0, "k": [0, 0, 0, 1] }
                },
                {
                  "ty": "tr",
                  "o": { "a": 0, "k": 100 },
                  "r": { "a": 0, "k": 0 },
                  "p": { "a": 0, "k": [0, 0] },
                  "a": { "a": 0, "k": [0, 0] },
                  "s": { "a": 0, "k": [100, 100] },
                  "nm": "T",
                  "sk": { "a": 0, "k": 0 },
                  "sa": { "a": 0, "k": 0 }
                }
              ]
            },
            {
              "ty": "gr",
              "nm": "G",
              "bm": 0,
              "it": [
                {
                  "ty": "sh",
                  "nm": "P",
                  "ind": 0,
                  "ks": {
                    "k": {
                      "i": [
                        [-1.812, -1.388],
                        [1.718, 2.518]
                      ],
                      "o": [
                        [-1.953, -1.365],
                        [1.93, 2.541]
                      ],
                      "v": [
                        [-44.781, 14.099],
                        [-50.381, 8.075]
                      ],
                      "c": true
                    },
                    "a": 0
                  }
                },
                {
                  "ty": "st",
                  "nm": "S",
                  "bm": 0,
                  "lc": 2,
                  "lj": 2,
                  "o": { "a": 0, "k": 100 },
                  "w": { "a": 0, "k": 1.176 },
                  "c": { "a": 0, "k": [0, 0, 0, 1] }
                },
                {
                  "ty": "tr",
                  "o": { "a": 0, "k": 100 },
                  "r": { "a": 0, "k": 0 },
                  "p": { "a": 0, "k": [0, 0] },
                  "a": { "a": 0, "k": [0, 0] },
                  "s": { "a": 0, "k": [100, 100] },
                  "nm": "T",
                  "sk": { "a": 0, "k": 0 },
                  "sa": { "a": 0, "k": 0 }
                }
              ]
            },
            {
              "ty": "gr",
              "nm": "G",
              "bm": 0,
              "it": [
                {
                  "ty": "sh",
                  "nm": "P",
                  "ind": 0,
                  "ks": {
                    "k": {
                      "i": [
                        [5.388, -2.541],
                        [2.0, 0.541],
                        [0.0, 0.0],
                        [0.353, 0.141],
                        [0.188, 0.094],
                        [0.024, 0.047],
                        [2.047, 2.165],
                        [0.259, 0.282],
                        [0.212, 0.282],
                        [-1.082, 3.576],
                        [0.0, 0.0],
                        [0.0, 0.0],
                        [-1.953, -1.365],
                        [-0.094, -0.071],
                        [-1.106, -0.071],
                        [-0.283, 0.047]
                      ],
                      "o": [
                        [-2.4, 1.13],
                        [-0.024, 0.0],
                        [-0.353, -0.094],
                        [-0.188, -0.071],
                        [-0.024, 0.0],
                        [-2.024, -0.965],
                        [-0.259, -0.259],
                        [-0.235, -0.259],
                        [-3.929, -4.871],
                        [1.224, -4.0],
                        [0.0, 0.0],
                        [1.718, 2.518],
                        [0.07, 0.071],
                        [1.2, 0.871],
                        [0.283, 0.047],
                        [8.518, 6.494]
                      ],
                      "v": [
                        [-34.263, 36.758],
                        [-40.804, 37.558],
                        [-40.852, 37.558],
                        [-41.887, 37.229],
                        [-42.475, 36.994],
                        [-42.546, 36.946],
                        [-48.546, 32.17],
                        [-49.299, 31.346],
                        [-49.981, 30.523],
                        [-56.005, 15.228],
                        [-50.405, 8.052],
                        [-50.381, 8.075],
                        [-44.781, 14.099],
                        [-44.522, 14.287],
                        [-41.064, 15.746],
                        [-40.216, 15.746]
                      ],
                      "c": true
                    },
                    "a": 0
                  }
                },
                {
                  "ty": "st",
                  "nm": "S",
                  "bm": 0,
                  "lc": 2,
                  "lj": 2,
                  "o": { "a": 0, "k": 100 },
                  "w": { "a": 0, "k": 1.176 },
                  "c": { "a": 0, "k": [0, 0, 0, 1] }
                },
                {
                  "ty": "tr",
                  "o": { "a": 0, "k": 100 },
                  "r": { "a": 0, "k": 0 },
                  "p": { "a": 0, "k": [0, 0] },
                  "a": { "a": 0, "k": [0, 0] },
                  "s": { "a": 0, "k": [100, 100] },
                  "nm": "T",
                  "sk": { "a": 0, "k": 0 },
                  "sa": { "a": 0, "k": 0 }
                }
              ]
            },
            {
              "ty": "gr",
              "nm": "G",
              "bm": 0,
              "it": [
                {
                  "ty": "sh",
                  "nm": "P",
                  "ind": 0,
                  "ks": {
                    "k": {
                      "i": [
                        [-1.812, -1.388],
                        [1.718, 2.518]
                      ],
                      "o": [
                        [-1.953, -1.365],
                        [1.93, 2.541]
                      ],
                      "v": [
                        [-44.781, 14.099],
                        [-50.381, 8.075]
                      ],
                      "c": true
                    },
                    "a": 0
                  }
                },
                {
                  "ty": "st",
                  "nm": "S",
                  "bm": 0,
                  "lc": 2,
                  "lj": 2,
                  "o": { "a": 0, "k": 100 },
                  "w": { "a": 0, "k": 1.176 },
                  "c": { "a": 0, "k": [0, 0, 0, 1] }
                },
                {
                  "ty": "tr",
                  "o": { "a": 0, "k": 100 },
                  "r": { "a": 0, "k": 0 },
                  "p": { "a": 0, "k": [0, 0] },
                  "a": { "a": 0, "k": [0, 0] },
                  "s": { "a": 0, "k": [100, 100] },
                  "nm": "T",
                  "sk": { "a": 0, "k": 0 },
                  "sa": { "a": 0, "k": 0 }
                }
              ]
            },
            {
              "ty": "gr",
              "nm": "G",
              "bm": 0,
              "it": [
                {
                  "ty": "sh",
                  "nm": "P",
                  "ind": 0,
                  "ks": {
                    "k": {
                      "i": [
                        [7.694, -0.471],
                        [0.283, 0.047],
                        [1.176, 0.8],
                        [0.07, 0.071],
                        [1.93, 2.541],
                        [0.0, 0.0],
                        [-1.082, 4.494],
                        [0.0, 0.0],
                        [0.0, 0.0],
                        [-0.024, -0.024]
                      ],
                      "o": [
                        [-0.283, 0.024],
                        [-1.129, -0.118],
                        [-0.094, -0.071],
                        [-1.812, -1.388],
                        [0.0, 0.0],
                        [-4.118, -6.024],
                        [1.883, -7.859],
                        [0.0, 0.0],
                        [0.024, 0.024],
                        [12.588, 15.412]
                      ],
                      "v": [
                        [-40.216, 15.746],
                        [-41.064, 15.699],
                        [-44.522, 14.287],
                        [-44.781, 14.099],
                        [-50.381, 8.075],
                        [-50.405, 8.052],
                        [-56.381, -10.56],
                        [-41.487, -16.09],
                        [-41.393, -9.878],
                        [-41.346, -9.831]
                      ],
                      "c": true
                    },
                    "a": 0
                  }
                },
                {
                  "ty": "st",
                  "nm": "S",
                  "bm": 0,
                  "lc": 2,
                  "lj": 2,
                  "o": { "a": 0, "k": 100 },
                  "w": { "a": 0, "k": 1.176 },
                  "c": { "a": 0, "k": [0, 0, 0, 1] }
                },
                {
                  "ty": "tr",
                  "o": { "a": 0, "k": 100 },
                  "r": { "a": 0, "k": 0 },
                  "p": { "a": 0, "k": [0, 0] },
                  "a": { "a": 0, "k": [0, 0] },
                  "s": { "a": 0, "k": [100, 100] },
                  "nm": "T",
                  "sk": { "a": 0, "k": 0 },
                  "sa": { "a": 0, "k": 0 }
                }
              ]
            },
            {
              "ty": "gr",
              "nm": "G",
              "bm": 0,
              "it": [
                {
                  "ty": "sh",
                  "nm": "P",
                  "ind": 0,
                  "ks": {
                    "k": {
                      "i": [
                        [0.0, 0.0],
                        [2.747, -5.109],
                        [-17.1, -0.561]
                      ],
                      "o": [
                        [0.0, 0.0],
                        [-3.829, 7.122],
                        [0.0, 0.0]
                      ],
                      "v": [
                        [-41.758, -40.064],
                        [-60.607, -41.038],
                        [-41.554, -22.689]
                      ],
                      "c": true
                    },
                    "a": 0
                  }
                },
                {
                  "ty": "st",
                  "nm": "S",
                  "bm": 0,
                  "lc": 2,
                  "lj": 2,
                  "o": { "a": 0, "k": 100 },
                  "w": { "a": 0, "k": 1.176 },
                  "c": { "a": 0, "k": [0, 0, 0, 1] }
                },
                {
                  "ty": "tr",
                  "o": { "a": 0, "k": 100 },
                  "r": { "a": 0, "k": 0 },
                  "p": { "a": 0, "k": [0, 0] },
                  "a": { "a": 0, "k": [0, 0] },
                  "s": { "a": 0, "k": [100, 100] },
                  "nm": "T",
                  "sk": { "a": 0, "k": 0 },
                  "sa": { "a": 0, "k": 0 }
                }
              ]
            },
            {
              "ty": "gr",
              "nm": "G",
              "bm": 0,
              "it": [
                {
                  "ty": "gr",
                  "nm": "G",
                  "bm": 0,
                  "it": [
                    {
                      "ty": "sh",
                      "nm": "P",
                      "ind": 0,
                      "ks": {
                        "k": {
                          "i": [
                            [0.0, 0.0],
                            [0.0, 0.0]
                          ],
                          "o": [
                            [0.0, 0.0],
                            [0.0, 0.0]
                          ],
                          "v": [
                            [-3.413, -94.964],
                            [6.021, -95.075]
                          ],
                          "c": false
                        },
                        "a": 0
                      }
                    },
                    {
                      "ty": "st",
                      "nm": "S",
                      "bm": 0,
                      "lc": 2,
                      "lj": 2,
                      "o": { "a": 0, "k": 100 },
                      "w": { "a": 0, "k": 1.176 },
                      "c": { "a": 0, "k": [0, 0, 0, 1] }
                    },
                    {
                      "ty": "tr",
                      "o": { "a": 0, "k": 100 },
                      "r": { "a": 0, "k": 0 },
                      "p": { "a": 0, "k": [0, 0] },
                      "a": { "a": 0, "k": [0, 0] },
                      "s": { "a": 0, "k": [100, 100] },
                      "nm": "T",
                      "sk": { "a": 0, "k": 0 },
                      "sa": { "a": 0, "k": 0 }
                    }
                  ]
                },
                {
                  "ty": "gr",
                  "nm": "G",
                  "bm": 0,
                  "it": [
                    {
                      "ty": "sh",
                      "nm": "P",
                      "ind": 0,
                      "ks": {
                        "k": {
                          "i": [
                            [0.0, 0.0],
                            [0.0, 0.0],
                            [-3.027, 0.036],
                            [0.0, 0.0],
                            [0.036, 3.027],
                            [0.0, 0.0]
                          ],
                          "o": [
                            [0.0, 0.0],
                            [0.036, 3.027],
                            [0.0, 0.0],
                            [3.027, -0.036],
                            [0.0, 0.0],
                            [0.0, 0.0]
                          ],
                          "v": [
                            [-20.651, -99.565],
                            [-20.597, -94.954],
                            [-15.052, -89.538],
                            [19.159, -89.94],
                            [24.575, -95.484],
                            [24.521, -100.095]
                          ],
                          "c": true
                        },
                        "a": 0
                      }
                    },
                    {
                      "ty": "st",
                      "nm": "S",
                      "bm": 0,
                      "lc": 2,
                      "lj": 2,
                      "o": { "a": 0, "k": 100 },
                      "w": { "a": 0, "k": 1.176 },
                      "c": { "a": 0, "k": [0, 0, 0, 1] }
                    },
                    {
                      "ty": "tr",
                      "o": { "a": 0, "k": 100 },
                      "r": { "a": 0, "k": 0 },
                      "p": { "a": 0, "k": [0, 0] },
                      "a": { "a": 0, "k": [0, 0] },
                      "s": { "a": 0, "k": [100, 100] },
                      "nm": "T",
                      "sk": { "a": 0, "k": 0 },
                      "sa": { "a": 0, "k": 0 }
                    }
                  ]
                },
                {
                  "ty": "tr",
                  "o": { "a": 0, "k": 100 },
                  "r": { "a": 0, "k": 0 },
                  "p": { "a": 0, "k": [0, 0] },
                  "a": { "a": 0, "k": [0, 0] },
                  "s": { "a": 0, "k": [100, 100] },
                  "nm": "T",
                  "sk": { "a": 0, "k": 0 },
                  "sa": { "a": 0, "k": 0 }
                }
              ]
            },
            {
              "ty": "gr",
              "nm": "G",
              "bm": 0,
              "it": [
                {
                  "ty": "gr",
                  "nm": "G",
                  "bm": 0,
                  "it": [
                    {
                      "ty": "sh",
                      "nm": "P",
                      "ind": 0,
                      "ks": {
                        "k": {
                          "i": [
                            [0.0, 0.0],
                            [0.0, 0.0],
                            [0.0, 0.0],
                            [0.0, 0.0],
                            [0.024, 4.565],
                            [0.0, 0.0],
                            [-1.718, 0.259],
                            [6.776, 6.635],
                            [0.0, 0.0],
                            [-2.4, 1.13],
                            [8.518, 6.494],
                            [12.588, 15.412],
                            [0.0, 0.0],
                            [-4.565, 0.071],
                            [0.0, 0.0],
                            [-0.071, -4.565],
                            [0.0, 0.0],
                            [0.0, 0.0],
                            [0.0, 0.0]
                          ],
                          "o": [
                            [-13.13, 10.377],
                            [0.0, 0.0],
                            [0.0, 0.0],
                            [-4.565, 0.071],
                            [0.0, 0.0],
                            [1.671, 0.706],
                            [8.259, -1.2],
                            [0.0, 0.0],
                            [2.0, 0.541],
                            [5.388, -2.541],
                            [7.694, -0.471],
                            [0.0, 0.0],
                            [-0.047, -4.612],
                            [0.0, 0.0],
                            [4.588, -0.071],
                            [0.0, 0.0],
                            [-1.129, 1.223],
                            [-7.953, 19.953],
                            [-1.27, 7.553]
                          ],
                          "v": [
                            [47.409, 39.605],
                            [37.503, 72.453],
                            [-18.404, 73.112],
                            [-32.146, 73.277],
                            [-40.499, 65.112],
                            [-40.569, 59.606],
                            [-35.463, 60.359],
                            [-40.804, 37.605],
                            [-40.804, 37.558],
                            [-34.263, 36.758],
                            [-40.216, 15.746],
                            [-41.346, -9.831],
                            [-42.287, -91.08],
                            [-34.122, -99.48],
                            [38.585, -100.303],
                            [46.985, -92.138],
                            [47.738, -26.09],
                            [45.997, -23.855],
                            [46.962, 12.993]
                          ],
                          "c": true
                        },
                        "a": 0
                      }
                    },
                    {
                      "ty": "st",
                      "nm": "S",
                      "bm": 0,
                      "lc": 2,
                      "lj": 2,
                      "o": { "a": 0, "k": 100 },
                      "w": { "a": 0, "k": 1.176 },
                      "c": { "a": 0, "k": [0, 0, 0, 1] }
                    },
                    {
                      "ty": "tr",
                      "o": { "a": 0, "k": 100 },
                      "r": { "a": 0, "k": 0 },
                      "p": { "a": 0, "k": [0, 0] },
                      "a": { "a": 0, "k": [0, 0] },
                      "s": { "a": 0, "k": [100, 100] },
                      "nm": "T",
                      "sk": { "a": 0, "k": 0 },
                      "sa": { "a": 0, "k": 0 }
                    }
                  ]
                },
                {
                  "ty": "gr",
                  "nm": "G",
                  "bm": 0,
                  "it": [
                    {
                      "ty": "sh",
                      "nm": "P",
                      "ind": 0,
                      "ks": {
                        "k": {
                          "i": [
                            [0.0, 0.0],
                            [-0.283, 0.024],
                            [0.283, 0.047]
                          ],
                          "o": [
                            [0.283, 0.047],
                            [-0.283, 0.047],
                            [0.0, 0.0]
                          ],
                          "v": [
                            [-41.064, 15.699],
                            [-40.216, 15.746],
                            [-41.064, 15.746]
                          ],
                          "c": true
                        },
                        "a": 0
                      }
                    },
                    {
                      "ty": "st",
                      "nm": "S",
                      "bm": 0,
                      "lc": 2,
                      "lj": 2,
                      "o": { "a": 0, "k": 100 },
                      "w": { "a": 0, "k": 1.176 },
                      "c": { "a": 0, "k": [0, 0, 0, 1] }
                    },
                    {
                      "ty": "tr",
                      "o": { "a": 0, "k": 100 },
                      "r": { "a": 0, "k": 0 },
                      "p": { "a": 0, "k": [0, 0] },
                      "a": { "a": 0, "k": [0, 0] },
                      "s": { "a": 0, "k": [100, 100] },
                      "nm": "T",
                      "sk": { "a": 0, "k": 0 },
                      "sa": { "a": 0, "k": 0 }
                    }
                  ]
                },
                {
                  "ty": "tr",
                  "o": { "a": 0, "k": 100 },
                  "r": { "a": 0, "k": 0 },
                  "p": { "a": 0, "k": [0, 0] },
                  "a": { "a": 0, "k": [0, 0] },
                  "s": { "a": 0, "k": [100, 100] },
                  "nm": "T",
                  "sk": { "a": 0, "k": 0 },
                  "sa": { "a": 0, "k": 0 }
                }
              ]
            },
            {
              "ty": "tr",
              "o": { "a": 0, "k": 100 },
              "r": { "a": 0, "k": 0 },
              "p": { "a": 0, "k": [0, 0] },
              "a": { "a": 0, "k": [0, 0] },
              "s": { "a": 0, "k": [100, 100] },
              "nm": "T",
              "sk": { "a": 0, "k": 0 },
              "sa": { "a": 0, "k": 0 }
            }
          ]
        }
      ],
      "ip": 0,
      "op": 200,
      "st": 0.0,
      "ef": [
        {
          "ty": 5,
          "ix": 1,
          "nm": "\u015d",
          "ef": [
            { "ix": 1, "nm": "A", "ty": 7, "v": { "a": 0, "k": 0 } },
            { "ix": 2, "nm": "S", "ty": 7, "v": { "a": 0, "k": 0 } },
            { "ix": 3, "nm": "F", "ty": 7, "v": { "a": 0, "k": 1 } },
            { "ix": 4, "nm": "A", "ty": 6, "v": 0 },
            { "ix": 5, "nm": "D", "ty": 0, "v": { "a": 0, "k": 0 } },
            { "ix": 6, "nm": "A", "ty": 0, "v": { "a": 0, "k": 50 } },
            { "ix": 7, "nm": "", "ty": 6, "v": 0 },
            { "ix": 8, "nm": "I", "ty": 6, "v": 0 },
            { "ix": 9, "nm": "S", "ty": 0, "v": { "a": 0, "k": 60 } },
            { "ix": 10, "nm": "S", "ty": 0, "v": { "a": 0, "k": 25 } },
            { "ix": 11, "nm": "", "ty": 6, "v": 0 },
            { "ix": 12, "nm": "F", "ty": 6, "v": 0 },
            { "ix": 13, "nm": "E", "ty": 0, "v": { "a": 0, "k": 10 } },
            { "ix": 14, "nm": "E", "ty": 0, "v": { "a": 0, "k": 0 } },
            { "ix": 15, "nm": "D", "ty": 0, "v": { "a": 0, "k": 50 } },
            { "ix": 16, "nm": "D", "ty": 0, "v": { "a": 0, "k": 0 } },
            { "ix": 17, "nm": "B", "ty": 7, "v": { "a": 0, "k": 0 } },
            { "ix": 18, "nm": "", "ty": 6, "v": 0 },
            { "ix": 19, "nm": "S", "ty": 6, "v": 0 },
            { "ix": 20, "nm": "S", "ty": 7, "v": { "a": 0, "k": 0 } },
            { "ix": 21, "nm": "M", "ty": 7, "v": { "a": 0, "k": 1 } },
            { "ix": 22, "nm": "O", "ty": 6, "v": 0 },
            { "ix": 23, "nm": "O", "ty": 7, "v": { "a": 0, "k": 1 } },
            { "ix": 24, "nm": "D", "ty": 0, "v": { "a": 0, "k": 0.05 } },
            { "ix": 25, "nm": "O", "ty": 0, "v": { "a": 0, "k": 0 } },
            { "ix": 26, "nm": "", "ty": 6, "v": 0 },
            { "ix": 27, "nm": "S", "ty": 6, "v": 0 },
            { "ix": 28, "nm": "S", "ty": 7, "v": { "a": 0, "k": 1 } },
            { "ix": 29, "nm": "S", "ty": 0, "v": { "a": 0, "k": 100 } },
            { "ix": 30, "nm": "", "ty": 6, "v": 0 },
            { "ix": 31, "nm": "", "ty": 6, "v": 0 },
            { "ix": 32, "nm": "P", "ty": 0, "v": { "a": 0, "k": 1 } }
          ],
          "en": 1
        }
      ],
      "tt": 1,
      "ty": 4
    },
    {
      "ind": 26,
      "nm": "L",
      "sr": 1.0,
      "ks": {
        "o": { "a": 0, "k": 100 },
        "r": { "a": 0, "k": 0 },
        "p": { "a": 0, "k": [256, 256, 0], "l": 2 },
        "a": { "a": 0, "k": [0, 0, 0], "l": 2 },
        "s": { "a": 0, "k": [100, 100, 100], "l": 2 }
      },
      "shapes": [
        {
          "ty": "gr",
          "nm": "G",
          "bm": 0,
          "it": [
            {
              "ty": "sh",
              "nm": "P",
              "ind": 0,
              "ks": {
                "k": {
                  "i": [
                    [54.691, -15.419],
                    [2.85, -0.17],
                    [0.0, 0.0],
                    [0.0, 0.0],
                    [0.0, 0.0]
                  ],
                  "o": [
                    [-2.859, 0.806],
                    [-29.5, 0.68],
                    [0.0, 0.0],
                    [0.0, 0.0],
                    [-52.99, -0.94]
                  ],
                  "v": [
                    [97.187, 124.17],
                    [-5.783, 139.87],
                    [-54.393, 150.17],
                    [188.317, 150.17],
                    [188.317, 63.51]
                  ],
                  "c": true
                },
                "a": 0
              }
            },
            {
              "ty": "st",
              "nm": "S",
              "bm": 0,
              "lc": 2,
              "lj": 2,
              "o": { "a": 0, "k": 100 },
              "w": { "a": 0, "k": 1.176 },
              "c": { "a": 0, "k": [0, 0, 0, 1] }
            },
            {
              "ty": "fl",
              "nm": "F",
              "bm": 0,
              "c": { "a": 0, "k": [0, 0, 0, 1] },
              "o": { "a": 0, "k": 100 },
              "r": 1
            },
            {
              "ty": "tr",
              "o": { "a": 0, "k": 100 },
              "r": { "a": 0, "k": 0 },
              "p": { "a": 0, "k": [0, 0] },
              "a": { "a": 0, "k": [0, 0] },
              "s": { "a": 0, "k": [100, 100] },
              "nm": "T",
              "sk": { "a": 0, "k": 0 },
              "sa": { "a": 0, "k": 0 }
            }
          ]
        }
      ],
      "ip": 0,
      "op": 200,
      "st": 0.0,
      "ty": 4
    }
  ],
  "markers": []
}
