# Generated by Django 4.2.5 on 2025-07-24 05:56

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import helpers.utils
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('username', models.CharField(blank=True, default=None, max_length=32, null=True, unique=True, verbose_name='username')),
                ('email', models.EmailField(default=None, max_length=254, null=True, unique=True, verbose_name='email address')),
                ('password', models.CharField(blank=True, default=None, max_length=128, verbose_name='password')),
                ('subscription_type', models.CharField(blank=True, choices=[('ADVANCED', 'Advanced'), ('INTERMEDIATE', 'Intermediate'), ('LOW', 'Low'), ('MEDIUM', 'Medium')], default='LOW', max_length=12, null=True)),
                ('subscription_period', models.CharField(blank=True, default=None, max_length=250, null=True)),
                ('subscription_id', models.CharField(blank=True, default=None, max_length=254, null=True)),
                ('full_name', models.CharField(blank=True, default=None, max_length=254, null=True)),
                ('is_general_active', models.BooleanField(default=False)),
                ('is_advanced_active', models.BooleanField(default=False)),
                ('is_basic_active', models.BooleanField(default=False)),
                ('is_pro_active', models.BooleanField(default=False)),
                ('is_premium_active', models.BooleanField(default=False)),
                ('is_subscription_active', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('is_verified', models.BooleanField(default=False, help_text='Designates whether this user has confirmed their email or not.', verbose_name='verified')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('subscription_pause_date', models.DateTimeField(blank=True, default=None, null=True)),
                ('is_subscription_cancel', models.BooleanField(default=False)),
                ('is_subscription_pause', models.BooleanField(default=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_login_at', models.DateTimeField(blank=True, default=None, null=True)),
                ('accepted_tos', models.BooleanField(default=False)),
                ('disabled', models.BooleanField(blank=True, default=False)),
                ('address', models.CharField(blank=True, default=None, max_length=254, null=True)),
                ('city', models.CharField(blank=True, default=None, max_length=254, null=True)),
                ('state', models.CharField(blank=True, default=None, max_length=254, null=True)),
                ('zip_code', models.CharField(blank=True, default=None, max_length=254, null=True)),
                ('country', models.CharField(blank=True, default=None, max_length=254, null=True)),
                ('phone', models.CharField(blank=True, default=None, max_length=254, null=True)),
                ('timezone', models.CharField(blank=True, default=None, max_length=254, null=True)),
                ('company_name', models.CharField(blank=True, default=None, max_length=254, null=True)),
                ('company_logo', models.FileField(blank=True, null=True, upload_to='company_logo/')),
                ('company_sector', models.CharField(blank=True, default=None, max_length=254, null=True)),
                ('company_description', models.TextField(blank=True, default=None, null=True)),
                ('company_size', models.CharField(blank=True, default=None, max_length=254, null=True)),
                ('ideal_customer_profile', models.TextField(blank=True, default=None, null=True)),
                ('first_time_login', models.BooleanField(blank=True, default=True, null=True)),
                ('seethos_email', models.CharField(blank=True, default=None, max_length=254, null=True)),
                ('sendgrid_api_key', models.CharField(blank=True, default=None, max_length=254, null=True)),
                ('is_ghl_connected', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VerifyEmail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=256)),
                ('expires_at', models.DateTimeField(default=helpers.utils.day_expiration_period)),
                ('used', models.BooleanField(default=False)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SenderEmails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(default=None, max_length=254, null=True, verbose_name='email address')),
                ('is_verified', models.BooleanField(default=False, help_text='Designates whether this user has confirmed their email or not.', verbose_name='verified')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_primary', models.BooleanField(default=False)),
                ('reply_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sender_emails', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PasswordReset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=256)),
                ('expires_at', models.DateTimeField(default=helpers.utils.day_expiration_period)),
                ('used', models.BooleanField(default=False)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
